<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Matlab实现简单的语音信号处理</title>
      <link href="2021/04/12/matlab-shi-xian-jian-dan-de-yu-yin-xin-hao-chu-li/"/>
      <url>2021/04/12/matlab-shi-xian-jian-dan-de-yu-yin-xin-hao-chu-li/</url>
      
        <content type="html"><![CDATA[<p>学习数字信号处理课程时做过的一个实验。</p><h3 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h3><p>  1.学习并掌握数字信号处理的基本方法。<br>  2.学会使用MATLAB对语音信号进行处理。<br>  3.学习并掌握MATLAB设计滤波器的方法。</p><h3 id="二、实验内容"><a href="#二、实验内容" class="headerlink" title="二、实验内容"></a>二、实验内容</h3><p>   本次实验基于MATLAB R2019a完成，利用MATLAB对录制的语音信号进行了读取，播放，时域分析，频域分析以及滤波处理等操作。<br>   本次实验主要包括以下几个步骤：<br>1.音频的录制与导入<br>    使用手机自带的录音软件录制了格式为wav的一段语音信号。录音完成后，使用MATLAB的audioread函数对语音信号进行采样。<br>2.语音信号的时域分析和频域分析<br>    使用plot函数绘制语音信号的时域波形，对语音信号进行快速傅里叶变换，并绘制出语音信号的频域波形。<br>    <img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_1.jpg" width="60%" height="60%"><br>3.设计滤波器对语音信号进行处理<br>（1）低通滤波器的设计<br>利用buttord和butter函数设计一个模拟巴特沃斯低通滤波器，并利用bilinear函数采用双线性变换法将该滤波器转换为数字低通滤波器。<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_2.jpg" width="60%" height="60%"><br>低通滤波器处理后的信号<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_3.jpg" width="60%" height="60%"><br>（2）高通滤波器的设计<br>利用buttord和butter函数设计一个模拟巴特沃斯高通滤波器，并利用bilinear函数采用双线性变换法将该滤波器转换为数字高通滤波器。<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_4.jpg" width="60%" height="60%"><br>高通滤波器处理后的信号<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_5.jpg" width="60%" height="60%"><br>（3）陷波器的设计<br>根据陷波器的表达式配置参数，设计陷波器如下图所示<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_6.jpg" width="60%" height="60%"><br>使用陷波器处理后的频谱<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_7.jpg" width="60%" height="60%"><br>（4）对语音信号加噪<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_8.jpg" width="60%" height="60%"></p><h3 id="三、实验代码"><a href="#三、实验代码" class="headerlink" title="三、实验代码"></a>三、实验代码</h3><p>[x,fs]=audioread(‘yuyin.wav’);%录入语音信号<br>n=length(x);%获取语音信号的长度<br>x_p=fft(x,n);%利用FFT算法对语音信号进行离散傅里叶变换<br>f=fs*(0:n-1)/n;%频率的归一化<br>figure(1);%绘制时域和频域波形<br>subplot(2,1,1);<br>plot(x);<br>title(‘原始语音信号采样后的时域波形’);<br>xlabel(‘时间轴’)<br>ylabel(‘幅值A’)<br>subplot(2,1,2);<br>plot(f,abs(x_p));<br>title(‘原始语音信号采样后的频谱图’);<br>xlabel(‘频率Hz’);<br>ylabel(‘频率幅值’);<br>%噪声<br>% noise=0.2<em>randn(1,n);<br>% x_z=x+noise’;<br>% sound(x_z,fs);<br>% n=length(x);<br>% x_zp=fft(x_z,n);<br>% f=fs</em>(0:n/2-1)/n;<br>% figure(5);<br>% subplot(2,1,1);<br>% plot(x_z);<br>% title(‘加噪语音信号时域波形’);<br>% xlabel(‘时间轴’)<br>% ylabel(‘幅值A’)<br>% subplot(2,1,2);<br>% plot(f,abs(x_zp(1:n/2)));<br>% title(‘加噪语音信号频谱图’);<br>% xlabel(‘频率Hz’);<br>% ylabel(‘频率幅值’);<br>% %低通滤波器<br>fp=800;fs=1300;rs=35;rp=0.5;Fs=44100;<br>wp=2<em>Fs</em>tan(2<em>pi</em>fp/(2<em>Fs));%预畸<br>ws=2</em>Fs<em>tan(2</em>pi<em>fs/(2</em>Fs));<br>[n,wn]=buttord(wp,ws,rp,rs,’s’);<br>[b,a]=butter(n,wn,’s’);<br>[num,den]=bilinear(b,a,Fs);%双线性变换法  模拟滤波器转数字滤波器<br>[h,w]=freqz(num,den,512,Fs);<br>% 512为点数 Fs为频率范围<br>figure(2)<br>plot(w,abs(h));<br>xlabel(‘频率/Hz’);ylabel(‘幅值’);<br>title(‘巴特沃斯低通滤波器幅度特性’);<br>axis([0,5000,0,1.2]);<br>grid on;%网格线<br>%高通滤波器<br>% fp=3800;fs=3300;rs=3;rp=0.5;Fs=44100;<br>% wp=2<em>Fs</em>tan(2<em>pi</em>fp/(2<em>Fs));%预畸<br>% ws=2</em>Fs<em>tan(2</em>pi<em>fs/(2</em>Fs));<br>% [n,wn]=buttord(wp,ws,rp,rs,’s’);<br>% [b,a]=butter(n,wn,’high’,’s’);<br>% [num,den]=bilinear(b,a,Fs);%双线性变换法  模拟滤波器转数字滤波器<br>% [h,w]=freqz(num,den,512,Fs);<br>% % 512为点数 Fs为频率范围<br>% figure(2)<br>% plot(w,abs(h));<br>% xlabel(‘频率/Hz’);ylabel(‘幅值’);<br>% title(‘巴特沃斯高通滤波器幅度特性’);<br>% axis([0,5000,0,1.2]);<br>% grid on;%网格线<br>%陷波器<br>% f0=3000;Fs=44100;r=0.9;<br>% w0=2<em>pi</em>f0/Fs;<br>% num=[1 -2<em>cos(w0) 1];<br>% den=[1 -2</em>r<em>cos(w0) r</em>r];<br>% N=1024;<br>% [H,w]=freqz(num,den,N);<br>% plot(w/pi/2<em>Fs,abs(H));<br>% grid on;<br>% title(‘陷波器的幅频响应’);<br>% [s1,Fs]=audioread(‘yuyin.wav’);<br>% %x1=s1(:,1);%选取一个声道的数据<br>% x1=s1;<br>% %sound(x1,Fs);<br>% N1=length(x1);<br>% Y1=fft(x1,N1);<br>% f1=Fs</em>(0:N1-1)/N1;<br>% %t1=(0:N1-1)/Fs;<br>% figure(3)<br>% plot(f1,abs(Y1))<br>% xlabel(‘频率/Hz’);ylabel(‘幅度’);<br>% title(‘原始信号频谱’);<br>% grid on;axis([0 50000 0 600])<br>y=filter(num,den,x);<br>%sound(y,Fs);<br>N2=length(y);<br>Y2=fft(y,N2);<br>f2=Fs*(0:N2-1)/N2;<br>%t2=(0:N2-1)/Fs;<br>figure(4)<br>plot(f2,abs(Y2))<br>xlabel(‘频率/Hz’);ylabel(‘幅度’);<br>title(‘过滤后信号的频谱’);<br>grid on;<br>axis([0 50000 0 600])</p><h3 id="四、实验总结"><a href="#四、实验总结" class="headerlink" title="四、实验总结"></a>四、实验总结</h3><p>分析语音信号的频谱图可以看出，有效的语音信号主要集中在0到4000Hz之间，根据奈奎斯特定理，最低的采样频率为8000Hz.观察滤波前后语音信号频谱的变化，可以看出滤波器按要求处理了语音信号，本次实验顺利完成。<br>总的来说，通过这次实验我收获了很多，对matlab有了更加深入的认识，了解到了如何利用matlab的各种函数对语音信号进行处理，这次实验也加深了我对离散傅里叶变换和滤波器设计的理解，巩固了课堂上所学到的知识，也让我看到了自己所学的知识在生活中的应用。</p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读《嘉莉妹妹》</title>
      <link href="2021/04/12/du-jia-li-mei-mei/"/>
      <url>2021/04/12/du-jia-li-mei-mei/</url>
      
        <content type="html"><![CDATA[<p>大二时英文选修课写的一篇小论文，这里是中文版，内容有所删减。</p><p>西奥多·德莱塞，美国伟大的现实主义作家。他的父亲是贫苦的德国移民，家里有很多的孩子，一家人生活很是拮据。德莱赛一生的大部分时间从事新闻工作，他走遍芝加哥、匹兹堡、纽约等大城市，广泛深入地观察了解社会，对资本主义制度有了很深的认识，为日后的文学创作积累了丰富的素材。</p><p>《嘉莉妹妹》是德莱赛的第一部著作，描写了农村姑娘嘉莉来到大城市芝加哥寻找幸福，为摆脱贫困，出卖自己的贞操，先后与推销员和酒店经理同居，后又凭美貌与表演才能成为演员而后走红的故事。其中，嘉莉私奔的情节来源于德莱赛妹妹的真实生活经历，他的妹妹曾跟一个偷钱潜逃的酒店经理私奔。</p><p>嘉莉是一个年轻的，纯朴的，没有经验的农村小姑娘，为了追求幸福的生活来到了大城市芝加哥。</p><p>正如作者在开篇时所写到的，一个年轻的没有经验的来自乡下的小姑娘来到大城市时，通常只有两种可能，得到善良的帮助而成为更好的人，或者被物质的诱惑影响而堕落。</p><p>很遗憾，嘉莉没有遇到能够真正在精神上帮助她的人，她的姐姐以及她的两个情人都不是那样的人，他们所教给嘉莉的，只有对物欲和名利的追求，只有物质至上的幸福观。在他们的影响下，嘉莉对上层社会，充盈的物质生活有了极大的渴望，她要拼劲全力地挤进那个社会，去享受物质上的快感与愉悦。对物欲的追求，让嘉莉迷失了初心，虚荣感让她放弃了一个人身上最淳朴的品质，就这样，嘉莉为了富裕的生活而两次出卖自己的贞操。</p><p>在德莱赛的那个时代，在垄断资本主义盛行的社会背景下，很难出现那样能给嘉莉以正确引导的人，每个人都在为自己的各种欲望而奔波。</p><p>嘉莉早期求职的过程也充分说明，在那个充满压迫，充满剥削的时代里，一个底层的普通人，靠自己的努力和勤奋是难以实现梦想的，是没有真正意义上的出路的，残酷的生活压迫着每一个普通人。</p><p>嘉莉靠美貌和运气以及出卖贞操走向了成功，而许许多多的平凡的人却只能在社会的底层不断地挣扎，承受着这个社会带给他们的苦难。从另一方面来说，获得成功的嘉莉也没有拥有真正意义上的快乐，与她相伴的只有内心的孤苦与空虚。无论成功与否，嘉莉都是痛苦的，物质上的满足并没有带给嘉莉真正的幸福感。</p><p>嘉莉正是作者所处那个时代的一个缩影，作者借嘉莉的视角，展现了资本主义带给人的种种苦难，揭露了资本主义社会的弊端，批判了金钱至上，物欲横流的社会现状。</p><p>在一个病态的资本主义社会里，在物质至上的时代里，是没有真正的幸福可言的。我想，这正是作者想要告诉我们的东西，一个人哪怕有了物质上的充盈，也会因为精神上的匮乏而陷入空虚。这一点对现在的我们也是适用的，我们不能陷于物质的牢笼而忽略了那些精神上值得我们去追寻的东西，不能为了自己的虚荣与欲望而放弃那些珍贵的有价值的道德品质。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单片机温度、压力信息采集与电机控制系统</title>
      <link href="2021/04/11/dan-pian-ji-wen-du-ya-li-xin-xi-cai-ji-yu-dian-ji-kong-zhi-xi-tong/"/>
      <url>2021/04/11/dan-pian-ji-wen-du-ya-li-xin-xi-cai-ji-yu-dian-ji-kong-zhi-xi-tong/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>本次单片机温度、压力信息采集与电机控制系统实验是基于模数转换，数模转换，LCD显示，键盘扫描，脉冲控制等知识的一个综合性的实验模块。<br>本次实验作品主要包括温度的采集与显示，压力的采集与显示，步进电机的驱动与控制三个模块。<br>温度的采集采用DS18B20模块，DS18B20采集温度后将温度转换为数字量并将数字量通过串行通信的方式发送给单片机。压力的采集采用称重传感器和HX711模块，HX711可将称重传感器的小信号放大并转换为数字量，最后再通过串行通信的方式将数字量传送给单片机。单片机处理完HX711和DS18B20的数据后，将压力值和温度值显示再LCD1602上。步进电机模块采用了一个四相五线的步进电机和一个ULN2003A驱动板，单片机连接驱动板，驱动板放大单片机的脉冲信号后驱动步进电机转动。<br>本次实验的硬件部分主要包括单片机最小系统，LCD1602显示屏，DS18B20测温模块，步进电机和驱动板以及称重传感器和HX711模块。</p><h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3><p>1.准备电路元器件及焊接工具：STC89C52RC芯片1个、IC插座、40p排针2个、12MHz晶振1个、30pF瓷片电容2个、10uF电解电容1个、排阻一个、电阻若干、LCD1602A显示屏1个、称重传感器1个、HX711模块1个、DS18B20模块1个、步进电机1个、ULN2003A驱动板1个、蜂鸣器1个、10*15cm洞洞板一个、电源线、杜邦线、下载器、电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接。<br>3.调试：下载程序，将单片机系统与各个模块相连，观察LCD是否正常显示压力、温度等信息，若正常显示，说明压力，温度模块正常，按动按键，观察步进电机是否随按键控制正常转动，若转动正常，说明步进电机模块正常。 </p><ul><li>焊接成果图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_12.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写。<br>2.设计仿真电路图：将电源、时钟电路、复位电路、51单片机、DS18B20模块、称重传感器模块、HX711模块及LCD1602显示屏正确连接。电源选用+5v，晶振选用12MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否能达到目标要求。</p><ul><li>编程<br>ORG 0000H<br>//接口初始化<br>DOUT EQU P2.2<br>SCK EQU P2.3</li></ul><p>RS EQU P2.5<br>RW EQU P2.6<br>E EQU P2.7 </p><p>DQ EQU P2.4<br>GEWEI1 EQU 35H<br>SHIWEI1 EQU 36H</p><p>QIAN EQU 31H<br>BAI EQU 32H<br>SHI EQU 33H<br>GEWEI EQU 34H</p><p>FENGMING EQU P3.7<br>LJMP MAIN</p><p>ORG 000BH<br>LJMP IT00 //中断入口<br>ORG 0100H<br>MAIN:<br>MOV P0,#00000001B<br>ACALL ENABLE<br>MOV P0,#00111000B<br>ACALL ENABLE<br>MOV P0,#00001100B<br>ACALL ENABLE<br>MOV P0,#00000110B<br>ACALL ENABLE<br>MOV P0,#80H<br>ACALL ENABLE<br>MOV P0,#’W’<br>ACALL WRITELCD</p><p>MOV P0,#’E’<br>ACALL WRITELCD</p><p>MOV P0,#’N’<br>ACALL WRITELCD</p><p>MOV P0,#’D’<br>ACALL WRITELCD</p><p>MOV P0,#’U’<br>ACALL WRITELCD</p><p>MOV P0,#’:’<br>ACALL WRITELCD<br>MOV P0,#0C0H<br>ACALL ENABLE</p><p>MOV P0,#’Y’<br>ACALL WRITELCD<br>MOV P0,#’A’<br>ACALL WRITELCD<br>MOV P0,#’L’<br>ACALL WRITELCD<br>MOV P0,#’I’<br>ACALL WRITELCD<br>MOV P0,#’:’<br>ACALL WRITELCD</p><p>MOV P0,#0C9H<br>ACALL ENABLE</p><p>MOV P0,#’g’<br>ACALL WRITELCD<br>MOV 40H,#00H</p><p>MOV TMOD,#01H<br>MOV TH0,#3CH<br>MOV TL0,#0B0H<br>SETB EA<br>SETB ET0<br>SETB TR0</p><p>ACALL DIANJI<br>LJMP MAIN<br>IT00:<br>INC 40H<br>MOV A,40H<br>CJNE A,#3AH,L11</p><p>L10: MOV 40H,#00H<br>ACALL AD</p><p>L11:MOV TH0,#3CH<br>MOV TL0,#0B0H<br>RETI<br>AD:<br>ACALL READTEM<br>ACALL YALI</p><p>ACALL XIANSHI</p><p>MOV P0,#86H<br>ACALL ENABLE<br>MOV P0,SHIWEI1<br>ACALL WRITELCD<br>MOV P0,#87H<br>ACALL ENABLE<br>MOV P0,GEWEI1<br>ACALL WRITELCD</p><p>CLR C<br>MOV A,#00H<br>SUBB A,GEWEI1<br>MOV A,#03H<br>SUBB A,SHIWEI1<br>JNC L12<br>CLR P3.7<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>SETB P3.7<br>L12:<br>MOV P0,#0C5H<br>ACALL ENABLE<br>MOV P0,QIAN<br>ACALL WRITELCD<br>MOV P0,#0C6H<br>ACALL ENABLE<br>MOV P0,BAI<br>ACALL WRITELCD<br>MOV P0,#0C7H<br>ACALL ENABLE<br>MOV P0,SHI<br>ACALL WRITELCD<br>MOV P0,#0C8H<br>ACALL ENABLE<br>MOV P0,GEWEI<br>ACALL WRITELCD</p><p>RET<br>//步进电机<br>DIANJI:<br>MOV 38H,#00H<br>JNB P3.0,START1<br>JNB P3.1,START2<br>JNB P3.2,START3</p><p>LJMP DIANJI<br>START1:<br>MOV DPTR,#TABLE1<br>LJMP LOOP<br>START2:<br>MOV DPTR,#TABLE2<br>LJMP LOOP<br>START3:<br>MOV DPTR,#TABLE3<br>LJMP LOOP<br>LOOP:<br>MOV A,38H<br>MOVC A,@A+DPTR<br>MOV P1,A<br>LCALL DELAY1<br>INC 38H<br>MOV A,38H<br>CJNE A,#08H,LOOP</p><p>JNB P3.0,L1<br>JNB P3.1,L1<br>JNB P3.2,L1<br>MOV 38H,#00H<br>LJMP LOOP<br>L1:<br>LJMP DIANJI<br>RET</p><p>DELAY1:MOV R5,#25  //步进电机的延时<br>DEL1:MOV R6,#50<br>     DJNZ R6,$<br>     DJNZ R5,DEL1<br>     RET<br>//步进电机码表<br>TABLE1:<br>DB 02H,06H,04H,0CH,08H,09H,01H,03H<br>TABLE2:<br>DB 03h,01H,09H,08H,0CH,04H,06H,02H<br>TABLE3:<br>DB 00H,00H,00H,00H,00H,00H,00H,00H</p><p>//温度传感器</p><p>READTEM:</p><p>ACALL RST</p><p>MOV R1,#30<br>DJNZ R1,$<br>MOV A,#0CCH<br>ACALL WRITE<br>MOV A,#44H<br>ACALL WRITE<br>ACALL RST<br>MOV R1,#30<br>DJNZ R1,$<br>MOV A,#0CCH<br>ACALL WRITE<br>MOV A,#0BEH<br>ACALL WRITE</p><p>ACALL READ<br>MOV 30H,A     ;读低八位<br>ACALL READ<br>MOV 31H,A       ;读高八位</p><p>ANL 30H,#0F0H<br>ANL 31H,#0FH<br>MOV A,30H<br>ORL A,31H<br>SWAP A</p><p>MOV R3,A</p><p>MOV B,#10<br>DIV AB<br>ADD A,#30H<br>MOV SHIWEI1,A<br>MOV A,B<br>ADD A,#30H<br>MOV GEWEI1,A<br>RET</p><p>RST:SETB DQ                       ;  总线释放<br>      NOP                           ;  保持高电平，延时<br>      CLR DQ                    ;  总线置 0，请求响应<br>      MOV R0,#0FBH<br>TSR1: DJNZ R0,TSR1                    ;  延时<br>      SETB DQ                        ;  再释放<br>      MOV R0,#25H<br>TSR2: JNB DQ,TSR3                    ;  改变为 0，则代表得到对应<br>      DJNZ R0,TSR2                ;  未得到则继续等待，判断<br>TSR3:                     ;  得到相应则标志位置 1，代表传感器正常存在<br>      MOV R0,#06BH<br>TSR4: DJNZ R0,TSR4                    ;  延时<br>      SETB DQ<br>RET</p><p>WRITE:MOV R0,#8<br>LOOP1:<br>CLR C<br>CLR DQ</p><p>RRC A<br>MOV R1,#6<br>DJNZ R1,$<br>MOV DQ,C<br>MOV R1,#23<br>DJNZ R1,$<br>SETB DQ<br>NOP</p><p>DJNZ R0,LOOP1<br>SETB DQ<br>MOV R1,#05<br>DJNZ R1,$<br>RET</p><p>READ:;<br>MOV R0,#8<br>LOOP2:<br>CLR C<br>SETB DQ<br>NOP<br>NOP<br>CLR DQ<br>NOP<br>NOP<br>NOP<br>SETB DQ<br>MOV R1,#7<br>DJNZ R1,$<br>MOV C,DQ<br>RRC A<br>MOV R1,#23<br>DJNZ R1,$</p><p>DJNZ R0,LOOP2<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY2<br>SETB E<br>RET<br>WRITELCD:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY2<br>SETB E<br>RET</p><p>DELAY2:<br>MOV R4,#200<br>D1:MOV R5,#200<br>D2:DJNZ R5,D2<br>DJNZ R4,D1<br>RET</p><p>//压力传感器<br>YALI:</p><p>CLR SCK<br>JB DOUT,$<br>MOV R0,#24<br>LOOP3:<br>SETB SCK<br>NOP<br>CLR SCK<br>MOV C,DOUT</p><p>XCH A,R4<br>RLC A<br>XCH A,R4        //低八位<br>XCH A,R3<br>RLC A<br>XCH A,R3      //中八位<br>XCH A,R2<br>RLC A<br>XCH A,R2  //高八位</p><p>DJNZ R0,LOOP3</p><p>SETB SCK<br>NOP<br>CLR SCK              ;采集部分到此结束</p><p>RET</p><p>ZHUANHUAN:<br>NDIV31:<br>    MOV A,R2<br>    MOV B,R7<br>    DIV AB<br>    PUSH ACC<br>    MOV R2,B<br>    MOV B,#10H<br>NDV311:<br>    CLR C<br>    MOV A,R4<br>    RLC A<br>    MOV R4,A<br>    MOV A,R3<br>    RLC A<br>    MOV R3,A<br>    MOV A,R2<br>    RLC A<br>    MOV R2,A<br>    MOV F0,C<br>    CLR C<br>    SUBB A,R7<br>    JB F0,NDV312<br>    JC NDV313<br>NDV312:<br>    MOV R2,A<br>    INC R4<br>NDV313:<br>    DJNZ B,NDV311<br>    POP ACC<br>    ;CLR OV<br>    JZ NDV314<br>    ;SETB OV<br>NDV314:<br>    XCH A,R2<br>    MOV R7,A<br>RET</p><p>XIANSHI:<br>MOV A,R2<br>XRL A,#80H<br>MOV R2,A</p><p>MOV R7,#40<br>LCALL ZHUANHUAN</p><p>MOV R7,#10<br>LCALL ZHUANHUAN//到此温度转换结束</p><p>//去皮，减去初始重量<br>MOV R0,#04H<br>L3:CLR C<br>MOV A,R4<br>SUBB A,#208<br>MOV R4,A<br>JC JIAN<br>LJMP L2<br>JIAN:DEC R3<br>L2:DJNZ R0,L3</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV GEWEI,A</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV SHI,A</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV BAI,A</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV QIAN,A</p><p>RET</p><p>END</p><p>*Proteus 仿真电路图<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_13.jpg" ></p><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3><p>相比于之前的几次实验，这次的实验难度明显要高出一个数量级。从拿到实验方案开始，每一步都充满了许多问题，光是确立实验的基本方案和实验器件的选取就花费了好长时间。经过反复的筛选、比较，温度传感器选择了12位精度的DS18B20，蜂鸣器选择了有源的蜂鸣器，最麻烦的还是压力传感器的选取了，在反复查找信息之后，我简单地罗列出了三套方案：<br>1.使用压片传感器加上一个电压转换模块和ADC0809来完成压力的测试。压片传感器将压力值转换为电阻值，电压转换模块再将电阻值转换为电压值，最后再由ADC0809将电压值转换为数字量，送交单片机处理。<br>2.使用称重传感器和小信号放大芯片以及ADC0809芯片来实现。称重传感器将压力值转换为一个电压值，信号放大芯片将这个电压值放大到ADC0809可以处理的状态，最后由ADC0809将数字量送交给单片机。<br>3.使用称重传感器加上一个HX711芯片来实现。HX711是一个自带增益的AD芯片，可以放大称重传感器产生的电压值并将它转换为数字量，最后HX711通过串行通信的方式将数字量传送给单片机。<br>反复考虑各个方案的实用性，精度，稳定性以及可实现性之后，我选择了第三个方案，通过HX711来实现本次的压力测量。<br>本次实验模块在硬件的焊接上并没有遇到太大的问题，最大的难点还是在程序的编写和仿真的实现上。<br>相对来说，步进电机的程序编写还是比较简单的，通过调制脉冲来驱动步进电机的转动，仿真的演示也没有遇到什么困难。但在进行实物制作的时候还是遇到了一些问题，明明仿真可以执行的程序，但在实物里步进电机就是无法转动，经过反复排查，发现原来是程序的延时存在问题，修改了延时之后，步进电机终于开始了转动。<br>DS18B20是一个具有12位精度的温度采集模块，DS18B20的时序相对来说比较复杂，在编写汇编程序的时候，我上网查找了很多资料，分析了好多时序图，也在这个过程中认识到了时序对于单片机程序的重要性。在DS18B20的实物实现时，也遇到了仿真时没有遇到的问题，后来发现原来是晶振的问题，更换晶振之后，DS18B20也终于正常读取显示了温度。<br>最麻烦的还是HX711模块的使用了，HX711模块是一个高精度的24位的自带增益的AD模块，可以将模拟量转换为数字量之后以串行通信的方式发送给单片机。由于51单片机一次只能处理8位数据，所以24位的数据必须读取到3个寄存器中来处理，而且HX711读取的的数值必须要做一个除法才能得到压力值，这样就特别的麻烦，我花时间最长的地方也是在这里，经过反复地查找资料，不断修改自己的程序，最后通过移位相减的方法把HX711的数据给处理了。最后做出的实物总有一个不为零的初始值，经过反复考虑，我觉得是传感器本身所造成的，最后通过把所有的压力值都减去这一个初始值，获得了真实的重量。</p><p>在三个模块都各自制作完毕，没有什么问题之后，我试着把这三个模块综合起来。温度和压力模块都通过不断扫描，反复执行的方法结合在了一起，但是在结合步进电机的时候遇到了麻烦，如果把温度和压力模块直接嵌入到步进电机的程序中，步进电机的转动就会产生问题。经过反复思索后，我写了一个定时中断的程序，把步进电机的程序放在了主程序中，而把温度和压力扫描的程序放在了中断中，这样每隔一段时间，单片机就会扫描显示一次温度和压力值，而在其他时间，都在扫描按键，执行步进电机的程序。最终，通过这样一个中断，终于把几个模块完美地结合在了一起。 </p><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p> 本次实验模块的设计与制作相比之前的三个实验确实难了好多，自己花费的时间也长了好多，在整个模块的制作过程中前前后后遇到了好多困难，但自己在不断克服困难的过程中也得到了很大的提高与成长。<br>从实验方案的设计，实验器件的选取，汇编语言的编写，到仿真的演示和实物的实现，每一步充满了各种挫折和困顿。第一次自己接到一个只有题目，没有例子的方案，从零开始设计制作，每一步都比之前的实验难了很多。中间好多时候都感到很沮丧，甚至都不太想做了，整个人状态就很不好，尤其是写代码的时候，反反复复，改来改去就是得不到想要的结果，甚至有时候都不想用汇编了，想之间拿c语言把这个程序给写了。但是自己还是逐渐地调整状态，慢慢地解决了一个又一个问题，最终用汇编语言完成了整个实验模块。最终完成的时候，看着整个四五百行的汇编程序，就觉得特别有成就感。<br>写代码和做实物的过程中虽然遇到过很多挫败，也有过很多心情沮丧的时候，但更多的是知识的成长以及心中不断燃烧的好奇与热情，我想正是在这样的热情和兴趣下，自己才能一步步克服障碍，完成了这次实验模块的制作。 尽管每一次遇到困难都很沮丧，但当自己战胜一个又一个困难，最后完成整个实验模块的时候，就感觉之前所有的沮丧都不值一提。<br>通过温度压力采集及步进电机的驱动系统设计与制作，自己的的确确学到了很多。从知识方面来看，自己认识到了温度、压力传感器的使用，还对串行通信有了更加深入的认识，看到了串行通信相对于并行通信的优势。另外，自己也对汇编语言有了更加深入而细致的认识，了解到了如何使用汇编语言经行加减运算，位操作以及数据处理，看到了汇编语言相对其他语言在单片机操作上的优势，看到了汇编语言的形象化与底层化。除此之外，自己通过这个过程，也收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。自己也十分期待在未来的学习和工作中，能够更加深入地学习单片机，并把这些知识和技能应用到未来的工作和生活中。</p>]]></content>
      
      
      <categories>
          
          <category> 51单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UART实现51单片机双机串行通信</title>
      <link href="2021/04/11/uart-shi-xian-51-dan-pian-ji-shuang-ji-chuan-xing-tong-xin/"/>
      <url>2021/04/11/uart-shi-xian-51-dan-pian-ji-shuang-ji-chuan-xing-tong-xin/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>本次单片机双机通讯系统设计实验是通过单片机间的串行通讯控制两个单片机进行通信的设计与制作。一个单片机系统做为发送端，从键盘输入自己的班级和姓名同时显示在 LCD 显示屏上并发送给另外一个单片机，另一个单片机系统作为接收端，把接收到的信息显示在 LCD 显示屏上。通过判断两个单片机系统中LCD屏幕显示的信息是否相同即可判断双机系统之间的串行通讯是否正常进行。<br>本次双机通讯系统采用了串行口方式1进行通讯，一帧信息为10位，其中有一个起始位，8个数据位和1个停止位。通讯的波特率位2400波特，T1工作在定时器方式2，震荡频率选用11.0592MH，通过计算可得TH1=TL1=0F4H,PCON寄存器的SMOD位为0。<br>整个系统的硬件部分是由两个单片机最小系统，两个 LCD 显示屏以及一个矩阵键盘构成。</p><h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3><p>1.准备电路元器件及焊接工具：STC89C51RC芯片2个、IC插座、40p排针2个、11.0592MHz晶振2个、30pF瓷片电容4个、10uF电解电容2个、排阻一个、电阻若干、LCD1602A显示屏2个、10*15cm洞洞板一个、电源线、杜邦线、下载器、电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接。<br>3.调试：下载程序，将两个单片机系统进行连接，通过按键测试双机通讯能否正常进行，若通讯正常，则两个单片机西铜所连接的lcd屏幕将随着按键按下而显示相同的字符，若不显示或字符紊乱，则双机通讯存在故障。</p><ul><li>焊接成果图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_10.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写<br>2.设计仿真电路图：将电源、时钟电路、复位电路、51单片机、LED数码管及LCD1602显示屏正确连接。电源选用+5v，晶振选用11.0592MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容，LED数码管串联470Ω电阻接在P2引脚，电阻的作用为保护电路,防止led灯被击穿，将键盘矩阵接在P0口，LCD1602A的D0-D7接口接在P1口。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否能达到目标要求。</p><ul><li>编程</li><li>发送端程序<br>ORG 0000H<br>LJMP MAIN<br>MAIN:<br>RS EQU P3.7<br>RW EQU P3.6<br>E EQU P3.5<br>MOV P1,#00000001B    ;清屏<br>ACALL ENABLE<br>MOV P1,#00111100B    ;  功能设定<br>ACALL ENABLE<br>MOV P1,#00001100B     ; 开关控制<br>ACALL ENABLE<br>MOV P1,#00000110B     ;模式设置<br>ACALL ENABLE<br>MOV P1,#80H<br>ACALL ENABLE<br>MOV R2,#00H<br>MOV DPTR,#TABLE3<br>MOV R1,#00H<br>;OR0:MOV A,R1<br>;MOVC A,@A+DPTR<br>;MOV P2,A<br>;ACALL WRITE<br>;INC R1<br>;CJNE A,#00H,OR0<br>MOV P1,#80H<br>ACALL ENABLE</li></ul><p>ORI:MOV P0,#0FH<br>MOV A,P0<br>CJNE A,#0FH,ORII<br>LJMP ORI<br>ORII:<br>ACALL KEYSCAN<br>MOV A,30H</p><p>ASTART:CLR EA<br>MOV TMOD,#20H<br>MOV TH1,#0F4H<br>MOV TL1,#0F4H<br>MOV PCON,#00H<br>SETB TR1<br>MOV SCON,#50H<br>ALOOP1:MOV SBUF,#0E1H<br>JNB TI,$<br>CLR TI<br>JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>XRL A,#0E2H<br>JNZ ALOOP1</p><p>ALOOP2:MOV R0,#30H<br>;MOV R7,#01H<br>MOV R6,#00H<br>ALOOP3:MOV SBUF,@R0<br>MOV A,R6<br>ADD A,@R0<br>MOV R6,A<br>;INC R0<br>JNB TI,$<br>CLR TI<br>;DJNZ R7,ALOOP3<br>MOV SBUF,R6<br>JNB TI,$<br>CLR TI<br>JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>JNZ ALOOP2<br>;RET</p><p>;MOV P2,#0C0H<br>;ACALL ENABLE<br>MOV A,30H<br>MOV DPTR,#TABLE1<br>MOVC A,@A+DPTR<br>MOV P1,A      ;lcd的显示<br>ACALL WRITE<br>INC R1;<br>CJNE R1,#04H,JISHU<br>MOV P1,#0C0H<br>ACALL ENABLE<br>MOV R1,#05H<br>JISHU:<br>ACALL DELAY</p><p>SJMP ORI</p><p>AJMP $<br>WRITE:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET<br>KEYSCAN:MOV P0,#0FH<br>        MOV A,P0<br>ANL A,#0FH<br>MOV R3,A<br>MOV P0,#0F0H<br>MOV A,P0<br>ANL A,#0F0H<br>ORL A,R3<br>CJNE A,#0FFH,KEYPRO<br>RET<br>KEYPRO:MOV R3,A      ;R3放键值<br>       MOV DPTR,#KEYVALUE<br>   MOV R4,#0FFH<br>KEY1:INC R4       ;从1到16查找键值<br>     MOV A,R4    ;R4放偏移量<br> MOVC A,@A+DPTR<br> MOV 31H,R3<br> CJNE A,31H,KEY1  ;判断是否与键值相等<br> MOV A,R4<br> MOV 30H,A<br> RET<br>DELAY:<br>MOV R4,#60<br>D1:MOV R5,#60<br>D2:MOV R6,#30<br>DJNZ R6,$<br>DJNZ R5,D2<br>DJNZ R4,D1<br>RET<br>KEYVALUE: DB 77H,7BH,7DH,7EH,0B7H,0BBH,0BDH,0BEH,0D7H,0DBH,0DDH,0DEH,0E7H,0EBH,0EDH,0EEH<br>TABLE: DB  30H, 31H, 32H, 33H ,34H ,35H ,36H, 37H, 38H, 39H ,41H, 42H, 43H, 44H, 45H, 46H<br>TABLE1:DB ‘1’,’8’,’0’,’3’,’P’,’E’,’N’,’G’,’C’,’H’,’E’,’N’,’L’,’I’,’A’,’G’<br>TABLE2:  DB 0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H,88H,83H,0C6H,0A1H,86H,8EH<br>TABLE3: DB “ PENG CHENLIANG “,00H<br>END</p><ul><li>接收端程序<br>ORG 0000H<br>RS EQU P3.7<br>RW EQU P3.6<br>E EQU P3.5<br>MOV P1,#00000001B    ;清屏<br>ACALL ENABLE<br>MOV P1,#00111100B    ;  功能设定<br>ACALL ENABLE<br>MOV P1,#00001100B     ; 开关控制<br>ACALL ENABLE<br>MOV P1,#00000110B     ;模式设置<br>ACALL ENABLE<br>MOV P1,#80H<br>ACALL ENABLE<br>MOV R1,#00H<br>BSTART:CLR EA<br>MOV TMOD,#20H<br>MOV TH1,#0F4H<br>MOV TL1,#0F4H<br>MOV PCON,#00H<br>SETB TR1<br>MOV SCON,#50H<br>BLOOP1:     JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>XRL A,#0E1H<br>JNZ BLOOP1<br>MOV SBUF,#0E2H<br>JNB TI,$<br>CLR TI<br>MOV R0,#30H<br>;MOV R7,#01H<br>MOV R6,#00H</li></ul><p>BLOOP2:JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>MOV @R0,A<br>;INC R0<br>ADD A,R6<br>MOV R6,A</p><p>;DJNZ R7,BLOOP2</p><p>JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>XRL A,R6</p><p>JZ END1<br>MOV SBUF,#0FFH<br>JNB TI,$<br>CLR TI<br>SJMP BLOOP1<br>END1:MOV SBUF,#00H    </p><p>;MOV P2,#0C0H<br>;ACALL ENABLE<br>MOV A,30H<br>MOV DPTR,#TABLE1<br>MOVC A,@A+DPTR<br>MOV P1,A      ;lcd的显示<br>ACALL WRITE<br>INC R1;<br>CJNE R1,#04H,JISHU<br>MOV P1,#0C0H<br>ACALL ENABLE<br>MOV R1,#05H</p><p>JISHU:LJMP BSTART</p><p>WRITE:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>DELAY:<br>MOV R4,#60<br>D1:MOV R5,#60<br>D2:MOV R6,#30<br>DJNZ R6,$<br>DJNZ R5,D2<br>DJNZ R4,D1<br>RET<br>KEYVALUE: DB 77H,7BH,7DH,7EH,0B7H,0BBH,0BDH,0BEH,0D7H,0DBH,0DDH,0DEH,0E7H,0EBH,0EDH,0EEH<br>TABLE: DB  30H, 31H, 32H, 33H ,34H ,35H ,36H, 37H, 38H, 39H ,41H, 42H, 43H, 44H, 45H, 46H<br>TABLE1:DB ‘1’,’8’,’0’,’3’,’P’,’E’,’N’,’G’,’C’,’H’,’E’,’N’,’L’,’I’,’A’,’G’<br>TABLE2:  DB 0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H,88H,83H,0C6H,0A1H,86H,8EH<br>TABLE3: DB “ PENG CHENLIANG “,00H<br>END</p><ul><li>Proteus 仿真电路图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_11.jpg"></li></ul><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3><p>本次制作的双机通讯系统是在键盘显示模块之后的又一个更加复杂的模块，不得不说双机通讯系统的设计确实比之前的两个模块难了很多难了很多。从发送端与接收端通讯协议的构建，到键盘扫描，键码获取和键码的发送与传输，每一步都存在很多问题，更加麻烦的是，如何把LCD的显示和通讯系统结合起来。<br>虽然硬件部分并没有遇到什么困难，但软件部分通讯协议的构建和通讯系统与LCD显示如何相结合的问题确实很让人困扰。经过反复思考后，在发送端的程序中，我把通讯信息发送的部分放在了键盘扫描的循环中，每按下一次键盘，系统就把扫描到的键码转换为键值，发送给接收端，并在发送端的LCD上把键值显示出来。而在接收端，我把LCD显示的程序放在了通讯接受的循环里，系统每接收到一个字符，就把字符显示到接收端的LCD上。由于每按下一次键盘只显示一个字符，故每次只发送一个字符即可。<br>在LCD显示时我还发现，两个LCDv0口需要的电压居然不一样，起初我还以为是两个LCD颜色不同，所以特性存在些许的差距，后来仔细检查后才发现，原来是两个单片机系统的GND没有接到一起，所以接在两个LCD的v0口接在同一个单片机系统的电位器上并不能正常运行。之后我把两个单片机系统的GND连到了一起，采用同一个电源供电，解决了这一问题。</p><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p> 本次实验模块的设计与制作确实比之前的复杂了很多，但我自己在这个过程中也得到了很大的提高与成长。<br>从通讯系统的构建，两个系统之间的应答，校验和的检验，到如何把键盘输入的字符正确地发送并正确地显示在LCD屏幕上，每一步充满了各种挫折和困顿。虽然硬件上利用了之前的系统，但软件上协议部分确实很让人头疼。写代码的过程中虽然遇到过很多挫败，也有过很多心情沮丧的时候，但更多的是知识的成长以及心中不断燃烧的好奇与热情，在这样的热情和兴趣下，自己一步步克服障碍，完成了双机通讯系统的设计制作。 虽然每一次看到bug是都很失落，但当最后看到自己的名字成功地显示到两个LCD的屏幕上时，就觉得所有的努力和付出都是值得的。<br>通过双机通讯系统的设计与制作，自己的的确确学到了很多。从知识方面来看，自己对通讯协议的构建有了初步的认识，了解到了如何在单片机之间进行串行通讯。另外，自己也对汇编语言有了更加深入而细致的认识，看到了汇编语言相对其他语言在单片机操作上的优势，看到了汇编语言的形象化与底层化。除此之外，自己通过这个过程，也收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。自己也十分期待下一次的实验模块制作，期待自己可以更好地运用所学的知识，制作出更好的作品。</p>]]></content>
      
      
      <categories>
          
          <category> 51单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵键盘控制数码管和LCD1602的显示</title>
      <link href="2021/04/11/ju-zhen-jian-pan-kong-zhi-shu-ma-guan-he-lcd1602-de-xian-shi/"/>
      <url>2021/04/11/ju-zhen-jian-pan-kong-zhi-shu-ma-guan-he-lcd1602-de-xian-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>本次实验模块将通过矩阵键盘来控制字符的显示输出，分别采用了LED数码显示管及LCD1602液晶显示屏这两种显示方式来显示从0到F的16个字符。<br>键盘显示模块整体划分为四个部分，一是单片机最小系统，用来提供本系统最基本的工作环境配置；二是一个4*4的矩阵键盘，通过线反转法进行扫描，从而控制单片机的运行，十六个按键对应输出的十六种字符；三是共阳极数码管及其串联的电阻，四是LCD1602A液晶显示屏和控制其对比度的电位器。</p><h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3><p>1.准备电路元器件及焊接工具：STC89C51RC芯片一个、IC插座、40p排针1个、11.0592MHz晶振一个、30pF瓷片电容2个、10uF电解电容一个、排阻一个、电阻若干、LED数码管一个、LCD1602A显示屏一个、10*15cm洞洞板一个、电源线、杜邦线、下载器、电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接<br>3.调试：下载程序，测试LED数码管和lcd显示屏是否能够正常闪烁。</p><ul><li>焊接成果图</li><li>正面<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_7.jpg" width="60%" height="60%"></li><li>背面<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_8.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写<br>2.设计仿真电路图：将电源、时钟电路、复位电路、51单片机、LED数码管及LCD1602显示屏正确连接。电源选用+5v，晶振选用11.0592MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容，LED数码管串联470Ω电阻接在P2引脚，电阻的作用为保护电路,防止led灯被击穿，将键盘矩阵接在P0口，LCD1602A的D0-D7接口接在P1口。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否能达到目标要求。</p><ul><li>编程<br>ORG 0000H<br>LJMP MAIN<br>MAIN:<br>RS EQU P3.7<br>RW EQU P3.6<br>E EQU P3.5<br>MOV P1,#00000001B    ;清屏<br>ACALL ENABLE<br>MOV P1,#00111100B    ;  功能设定<br>ACALL ENABLE<br>MOV P1,#00001100B     ; 开关控制<br>ACALL ENABLE<br>MOV P1,#00000110B     ;模式设置<br>ACALL ENABLE<br>MOV P1,#80H<br>ACALL ENABLE<br>MOV R1,#00H<br>MOV DPTR,#TABLE3<br>OR0:MOV A,R1<br>MOVC A,@A+DPTR<br>MOV P1,A<br>ACALL WRITE<br>INC R1<br>CJNE A,#00H,OR0</li></ul><p>ORI:MOV P0,#0FH<br>MOV A,P0<br>CJNE A,#0FH,ORII<br>LJMP ORI</p><p>ORII:<br>ACALL KEYSCAN<br>MOV A,30H<br>MOV DPTR,#TABLE2<br>MOVC A,@A+DPTR<br>MOV P2,A   ;数码管的显示<br>ACALL DELAY<br>MOV P1,#0C0H<br>ACALL ENABLE<br>MOV A,30H<br>MOV DPTR,#TABLE<br>MOVC A,@A+DPTR<br>MOV P1,A      ;lcd的显示<br>ACALL WRITE<br>ACALL DELAY<br>SJMP ORI</p><p>AJMP $<br>WRITE:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET<br>KEYSCAN:MOV P0,#0FH<br>        MOV A,P0<br>        ANL A,#0FH<br>        MOV R3,A<br>        MOV P0,#0F0H<br>        MOV A,P0<br>        ANL A,#0F0H<br>        ORL A,R3<br>        CJNE A,#0FFH,KEYPRO<br>        RET<br>KEYPRO:MOV R3,A      ;R3放键值<br>       MOV DPTR,#KEYVALUE<br>       MOV R4,#0FFH<br>KEY1:INC R4       ;从1到16查找键值<br>     MOV A,R4    ;R4放偏移量<br>     MOVC A,@A+DPTR<br>     MOV 31H,R3<br>     CJNE A,31H,KEY1  ;判断是否与键值相等<br>     MOV A,R4<br>     MOV 30H,A<br>     RET<br>DELAY:<br>MOV R4,#60<br>D1:MOV R5,#60<br>D2:MOV R6,#30<br>DJNZ R6,$<br>DJNZ R5,D2<br>DJNZ R4,D1<br>RET<br>KEYVALUE: DB 77H,7BH,7DH,7EH,0B7H,0BBH,0BDH,0BEH,0D7H,0DBH,0DDH,0DEH,0E7H,0EBH,0EDH,0EEH<br>TABLE: DB  30H, 31H, 32H, 33H ,34H ,35H ,36H, 37H, 38H, 39H ,41H, 42H, 43H, 44H, 45H, 46H<br>TABLE2:  DB 0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H,88H,83H,0C6H,0A1H,86H,8EH<br>TABLE3: DB “ PENG CHENLIANG “,00H<br>END</p><ul><li>Proteus 仿真电路图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_9.jpg" ></li></ul><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3><p>1.最开始使用汇编语言进行程序设计的时候，整合了数码管和LCD1602的显示程序，并使用查表法整合了数码管和LCD1602的键码，从而可以通过键盘来控制数码管和LCD的显示。整合完之后发现在有光标的显示模式下，LCD显示出的单个字符会不断闪烁，反复排查后发现，原来是写数据的操作在不断的循环执行。我通过判断键盘输入的电平是否有变化来跳出了这一循环。<br>2.焊接完整后导入程序发现数码管不能正常显示，仔细检查后发现自己把一个错误的程序导入了进去。，于是自己重新导入了新的程序，数码管和LCD也恢复了正常显示。<br>3.LCD的显示偏暗，而且存在略微的鬼影，通过调节电阻来控制V0口的电压，改善了这一现象。<br>4.在完成最基本的键盘显示操作后，我又自己研究了LCD的CGRAM，学会了如何自己使用字模来创造自定义的字符,并将字模导入到CGRAM。</p><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p>本次制作的键盘显示模块是继单片机最小系统之后的又一个模块，不得不说，键盘显示确实比单片机最小系统难了很多。从线反转的扫描方法，到数码管的动态显示，再到用键盘操控数码管和LCD，每一步充满了各种挫折和困顿。不光软件设计上很麻烦，硬件制作上也比单片机最小系统复杂了很多，更多的接口，更多的线路，要求更高的焊接，一个个困难阻碍着设计与制作。从电路设计到电路焊接整个过程，虽然遇到过很多挫败，也有过很多心情沮丧的时候，但更多的是知识的成长以及心中不断燃烧的好奇与热情，在这样的热情和兴趣下，自己一步步克服障碍，完成了键盘显示的设计制作，并在此基础上，自己尝试了自定义字符和电子表的制作。<br>通过键盘显示模块的设计与制作，自己的的确确学到了很多。从知识方面来看，自己不仅对数码管和LCD1602有了深入的认识，而且了解到了如何通过键盘来控制这两个显示模块。另外，自己也对汇编语言有了更加深入而细致的认识，看到了汇编语言相对其他语言在单片机操作上的优势，看到了汇编语言的形象化与底层化。除此之外，自己通过这个过程，也收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。</p>]]></content>
      
      
      <categories>
          
          <category> 51单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51单片机最小系统</title>
      <link href="2021/04/11/51-dan-pian-ji-zui-xiao-xi-tong/"/>
      <url>2021/04/11/51-dan-pian-ji-zui-xiao-xi-tong/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>单片机最小系统就是能够使单片机正常工作的完整的最小的电路系统。构成80C51单片机最小系统包括电源电路、时钟电路、复位电路以及51单片机。<br>对单片机的I/O口读写操作是单片机最基本的使用方法。本次设计利用51单片机的I/O口驱动点亮LED灯，使LED灯闪烁。</p><ul><li>电源电路：80C51单片机常用的电源直流5v电源.选用电源时要选用波纹小，电压稳定的电源。</li><li>时钟电路：最小系统采用11.0592MHz晶振，30pF电容。</li><li>复位电路：复位是单片机的初始化操作。单片机运行时，都需要先复位，<br>使CPU和系统中其他部件处于一个确定的初始状态，并从这个状态开始工作。因而，复位是一个很重要的操作方式。当单片机稳定，RST保持两个机器周期以上的高电平时自动复位。但单片机本身是不能自动进行复位的，必须配合相应的外部电路才能实现。上电或开关复位要求电源接通后，单片机自动复位，并且在单片机运行期间，用开关操作也能使单片机复位。本次设计采用了外部电路进行上电复位，单片机供电时会自行复位。<h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3></li></ul><p>1.准备电路元器件及焊接工具：STC89C51RC芯片一个、IC插座、40p排针1个、11.0592MHz晶振一个、30pF瓷片电容2个、10uF电解电容一个、1kΩ电阻一个、10kΩ电阻一个、LED灯一个、7*9cm洞洞板一个、电源线、下载器，电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接<br>3.调试：下载程序，测试LED灯是否闪烁。</p><ul><li>自己焊接制作的电源<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_1.jpg" width="60%" height="60%"></li><li>单片机最小系统<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_2.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写<br>2.设计仿真电路图：参考书上给出的电路图并且适当修改，将电源、时钟电路、复位电路、51单片机、LED灯正确连接。电源选用+5v，晶振选用11.0592MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容，LED灯串联一个1kΩ电阻接在P1.0引脚，电阻的作用为保护电路,防止led灯被击穿。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否符合LED灯闪烁的要求。</p><ul><li>编程<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_3.jpg"></li><li>Proteus 仿真电路图<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_4.jpg"><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3></li></ul><p>1.用proteus进行仿真时出现了led灯不亮的情况，我反复检查自己编写的程序和设计的电路，都没有发现问题，最后重头做了一遍才发现原来时晶振的频率写成了11.0592Hz。<br>2.使用烧录程序进行烧录时，烧录软件显示握手失败，于是我更新了驱动和烧录软件的版本，最后成功地把程序烧录进了单片机。<br>3.第一次通电观测时，发现led灯闪烁过快，于是我修改了程序，将闪烁频率调低了一些。<br>4.在最小系统的基础上，我又自己焊接制作了利用单片机实现的流水灯。</p><ul><li>软件<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_5.jpg"></li><li>硬件<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_6.jpg" width="60%" height="60%"></li></ul><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p>本次制作的51单片机最小系统是让单片机能正常工作并发挥其功能的时所必需的组成部分。从电路设计到电路焊接整个过程，我学会了Keil和proteus两个软件的基本使用方法，对汇编语言以及单片机的仿真有了初步认识。<br>第一次自己挑选购买元器件，第一次进行汇编语言的编程，第一次使用电烙铁进行焊接，第一次烧录单片机……整个实验过程都充满了新奇，充满了兴趣，更重要的是，自己通过这个过程，收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。<br>虽然在整个设计制作中遇到了很多困难与挫折，自己也常常被一些小问题而困扰，但当自己从百思不得其解中顿悟时，所有的烦恼与困惑都变成了兴奋与激动，就觉得所有的努力和付出在看到自己的成果时都是值得的。</p>]]></content>
      
      
      <categories>
          
          <category> 51单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于心情日记</title>
      <link href="2021/04/08/guan-yu-xin-qing-ri-ji/"/>
      <url>2021/04/08/guan-yu-xin-qing-ri-ji/</url>
      
        <content type="html"><![CDATA[<p>2021年4月7日，第10天。<br>转眼心情日记这个分类已经写到第10天了，今天想做个阶段性的小总结，也重新规划一下接下来的目标和计划。<br>这10天写的一些东西，有比较触动自己的东西，也有很多挺水的部分。<br>怎么说呢？一个公开的博客平台，写一些倾向于个人日记的东西还是不太好的，我无法做到绝对的坦诚，也避免不了情绪化的碎碎念和说教，涉及隐私的一些东西我也不是特别敢写。<br>所以接下来，打算换个方向，多写一下技术方面的问题，记录一下自己学习的过程，真正地当做一个博客来写，至于心情日记这个分类，也暂时会留在这里，偶尔回来写一两句碎碎念。<br>当然，之后也不会像之前一样做日更了，太水的东西，总归是不合适的，我也不希望它会变成我每天的一个负担，至于转载和分享，也尽可能地少放在这里，努力地去写一些自己原创的东西。<br>加油。</p>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>云何降伏其心</title>
      <link href="2021/04/08/yun-he-jiang-fu-qi-xin/"/>
      <url>2021/04/08/yun-he-jiang-fu-qi-xin/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>互联网让我更快乐了吗</title>
      <link href="2021/04/05/hu-lian-wang-rang-wo-geng-kuai-le-liao-ma/"/>
      <url>2021/04/05/hu-lian-wang-rang-wo-geng-kuai-le-liao-ma/</url>
      
        <content type="html"><![CDATA[<p>2021年4月5日，第8天。<br>当你没事儿干的时候你会干什么？<br>对我来说，这个问题的答案是上网，每天的大部分时间，我都花费在了互联网上。<br>手机和电脑，几乎牢牢占据了我的空余时间，让我沉迷网络，难以自拔。<br>上网是为了什么？<br>娱乐，游戏，小说，视频，找乐子。<br>除了互联网，自己好像没有特别多的娱乐手段，而上网之外的娱乐手段，好像快感又太低，不如上网那么容易让人满足。<br>但上网真的让自己更快乐了吗？<br>答案似乎值得商榷，上网确实可以排解空虚和寂寞，可以带来即时的快感，但快乐和幸福感，好像真的没有。<br>也许我会为一个别致的短视频而兴奋，但转眼我便会滑到下一个视频，只是为了继续这份快感和满足感。<br>也许我会被一个独到的见解所打动，但来不及深思，我便会把它抛到脑后，因为拿着手机的我分分钟就会去阅读下一个观点。<br>互联网确实给自己带来了很多快感，但也让自己更加的焦虑和不安，浮躁充斥着每一个上网者，被巨量的信息淹没的我们，根本来不及思考和停留，只是匆匆忙忙地追着下一个热点。<br>相比于别致的视频和独到的观点，更多时候，我遇到的是各种恶搞，低俗，抄袭的视频视频，情绪化的议论，吵闹，谩骂，指责，各种对立，焦虑，精神暴力。<br>那些深邃的观点早就被情绪化的内容所淹没，我们也往往会被各种垃圾信息搞得愤怒，焦虑。<br>互联网，并没有让自己变得更快乐，自己打开它的方式似乎并不正确。<br>所以，今天在这里做个计划，以后没有明确的目的或事件，自己尽量少上网冲浪，没有必须要查的资料或学习的内容，尽量少上网浏览无意义的内容。<br>立贴为记。</p>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>今日清明</title>
      <link href="2021/04/05/jin-ri-qing-ming/"/>
      <url>2021/04/05/jin-ri-qing-ming/</url>
      
        <content type="html"><![CDATA[<p>2021年4月4日，第7天。<br>说起来好多天没更了，惭愧惭愧。<br>今日清明，宜踏青折柳，思故人。<br>长沙的天气依旧如往常般阴云密布，时而下几场小雨。<br>没有课的日子悠闲而惬意，一觉睡到快中午，出去吃了顿午饭。<br>吃完饭到后湖转了转，来学校这么久，还是第一次去后湖。<br>风吹波纹，杨柳依依，木桥穿越湖中，一石桥临于湖上，典型的中式风格。<br>傍边的艺术园又很有现代特色，好多地方都还在装修，也没有特别印象深刻的地方。<br>总得来说，虽然草坪有点少，湖泊占了太大面积，环湖跑道只有一半，但也算是个饭后散步的好地方了。</p>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于孤独</title>
      <link href="2021/04/05/guan-yu-gu-du/"/>
      <url>2021/04/05/guan-yu-gu-du/</url>
      
        <content type="html"><![CDATA[<p>2021年4月2日，第5天。</p><p>一直以来我好像都是一个比较孤独的人，甚至可以说有点孤僻。<br>长久以来，习惯了一个人吃饭，一个人上下课，一个人去图书馆，一个人出去散步……<br>我好像已经彻底习惯了一个人的生活，甚至有些时候有点沉浸于这种状态。<br>一个人的状态，好像也是一种舒适区，很多时候，自己不愿意被其他人或其他任务打乱自己的生活节奏。<br>但偶尔，有些时候，好像也会顾影自怜，真正聊得来的朋友没有几个，能在自己身边了解自己当下处境的就更少了。<br>一个人的自由并没有什么错，但自己也不应该太过于沉浸于这种状态。<br>我或许更应该试着去积极主动地和他人交流，主动地去做一些事情。<br>不希望因为自己一个人的状态，就丧失了走出去的勇气。</p>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>考研or工作</title>
      <link href="2021/04/01/kao-yan-or-gong-zuo/"/>
      <url>2021/04/01/kao-yan-or-gong-zuo/</url>
      
        <content type="html"><![CDATA[<p>2021年4月1日，第四天。<br>今天想聊聊一个比较重要的话题，工作还是考研？<br>起码对我来说，这个话题很重要，甚至显得有些沉重。<br>这篇博客估计也不是一两天能写完的，在写的过程中，我也在不断地思考，甚至很久以后，我还可能会回来，补上一两句话。</p><p>下面直接步入正题吧，分析一下考研和工作的利弊</p><h2 id="考研"><a href="#考研" class="headerlink" title="考研"></a>考研</h2><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我做了那么多改变</title>
      <link href="2021/03/31/wo-zuo-liao-na-me-duo-gai-bian/"/>
      <url>2021/03/31/wo-zuo-liao-na-me-duo-gai-bian/</url>
      
        <content type="html"><![CDATA[<p>2021年3月31日，第3天。<br>“我做了那么多改变，只是为了我心中不变”<br>今天早上去上课的路上听到这句歌词时，突然之间就被打动了。<br>从小到大，我一直坚定不移地相信的一句话就是，人是会变的。<br>这么多年，我又何尝没有改变过，但无论再如何改变，总有些内在的东西是没有变的。<br>比如一些信念，一些梦想，那些潜藏在内心深处没有改变的，才是真的决定自己是谁的东西，而我们所有的改变，也只是为了守护内心深处那些柔软而坚定的东西。<br>一天宛如一年，一年宛如一天，任时光流转，我还是我。</p><p>每次感叹时光的时候都会不自觉地想起刚上初中时的自己。<br>那一年，自己告别村里的小伙伴，一个人到县城的初中上学，虽然显得有些孤独，但更多的是内心的希望和信念，我要好好学习，我要证明自己的优秀，我要成为我想要成为的那种人。<br>那时的我，已经觉得自己俨然是个成熟的大人了，再也不是那些小学的小屁孩了，怎么会因为一个人的孤独而独自忧伤呢。<br>可越长大越发现，真正的成熟总比自己想象的要晚，少年时自以为的成熟不过是为赋新词强说愁罢了。<br>现在想起来，虽然有些可笑，但那段时光就是自己自我意识真正萌芽的开始。<br>满满的少年心气，单纯的梦想和渴望，虽然显得幼稚，却可能再也回不来了。<br>我再也不会下课风一般地冲向食堂，再也不会拿着一个条格作业本跟同桌下五子棋，再也不会拿着一个按键手机读网络小说到废寝忘食……</p><p>转眼间，已经快十年了，很多记忆都变得模糊，也有很多人都淡忘在记忆里，甚至连自己曾经的样子都变得有些模糊。<br>这么多年以来，我到底变成了一个什么样的人，当初的那个自己会想到今天自己的模样吗？<br>那时的自己，可以课间跟同学玩双杠和云梯到手掌结痂，现在的我除了体测却再也不愿碰单杠，那时的自己，可以上课边写作业边听讲，追着老师请教问题，现在的我上课却常常走神看着手机神游天外…<br>有些事情，随着长大，再也不会去做了，有些曾经以为自己不会做的，现在却一直不停的在做…<br>曾经以为上了大学可以生活规律，精神饱满，上了大学才发现，生活更加的不规律，每天仍然时常打盹…<br>那我还是我吗？就像那只特修斯之船，不断地更换零件，还是曾经的船吗？<br>走过那么多的路，经历越多，人就变得越复杂，各种想法和信念也随着经历在不断地改变。<br>那么那些我身上坚定不变的到底是什么，时光留下的又是什么？<br>害，谈论的太深就该研究哲学了？<br>这里就简单记录一下我自己的想法：<br>我想，我之所以是我，是因为我为人处世的原则和独一无二的经历，在什么面临抉择时会做什么选择，决定了我是谁。<br>这些年来，虽然我也改变了很多，但原则在那里，经历在那里，思维的连续性在那里，所以我还是我。<br>未完待续。。。</p><h2 id="提纲"><a href="#提纲" class="headerlink" title="提纲"></a>提纲</h2><h2 id="初心"><a href="#初心" class="headerlink" title="初心"></a>初心</h2>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>谈谈熬夜</title>
      <link href="2021/03/31/tan-tan-ao-ye/"/>
      <url>2021/03/31/tan-tan-ao-ye/</url>
      
        <content type="html"><![CDATA[<p>2021年3月30日，第二天。<br>今天想聊一聊熬夜这个话题。<br>上大学以来，自己好像就养成了熬夜习惯，尤其是大三以来，每天睡得比之前晚了好多，天天都要到12点之后才会睡觉，就算这样，每天睡前在床上还会玩好久的手机。<br>网上睡得晚，第二天难免没什么精力，早上又起的迟，第二天晚上该睡的时候还不困，不可避免地陷入了恶心循环。</p><h3 id="当我熬夜的时候我在干什么？"><a href="#当我熬夜的时候我在干什么？" class="headerlink" title="当我熬夜的时候我在干什么？"></a>当我熬夜的时候我在干什么？</h3><p>玩手机…<br>好像又回到昨天的那个话题了<a href="http://yeyuwenxi.github.io/2021/03/30/dang-wo-kan-shou-ji-de-shi-hou-wo-zai-kan-xie-shi-me/">当我看手机时我在看什么</a><br>说白了，熬夜的时候自己也没做什么正经事情，自己也从来都不是一个喜欢在夜晚工作的人，每天熬夜的原因只有一个–玩！<br>晚上躺在床上说着拿起手机只看一会儿，但每次一看就不知道要到几点钟，最后不知不觉就又熬了个大夜。</p><h3 id="熬夜真的快乐吗"><a href="#熬夜真的快乐吗" class="headerlink" title="熬夜真的快乐吗"></a>熬夜真的快乐吗</h3><p>一时熬夜一时爽，一直熬夜一直爽。<br>熬夜的快感是即时的，一旦沉浸于其中就难以自拔，但熬夜之后呢？第二天昏昏沉沉，做什么事情都没有精神，起得又晚，很多时候一个大早上就没了。<br>熬夜只是一时的快乐，摧残的确实长久的身心，严重地扰乱着自己的生活。</p><h3 id="到底为什么熬夜"><a href="#到底为什么熬夜" class="headerlink" title="到底为什么熬夜"></a>到底为什么熬夜</h3><p>熬到深夜的情况，无一例外都是在玩手机，躺在床上玩手机，有一种难以抵抗又极易获得的满足感。<br>因刷知乎而情绪化，因小说而沉迷，这好像都是自己与世界相处的一种方式，在这种情境下，特别容易忘记时间，忘记外界，一个人沉浸于自己的想象，不受外界干扰的想象。<br>但这又何尝不是逃避世界的一种方式呢？<br>白天的世界充满了真实和骨干，夜幕下的自己持续地用远方的世界麻木着自己，好像只有这样，才能真正地找到自己。</p><h3 id="这是我想要的吗？"><a href="#这是我想要的吗？" class="headerlink" title="这是我想要的吗？"></a>这是我想要的吗？</h3><p>貌似不是。<br>很多时候都是在习惯的趋势下不自觉地熬夜，我又何尝不想早点睡，好好休息，第二天精力满满呢？<br>所以在这里做个计划，以后没事儿干，晚上少玩手机，少上网，少看小说，早睡早起，不再被短暂的快感所羁绊而陷入生活的泥沼无法自拔。</p>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android实例之必应每日一图</title>
      <link href="2021/03/30/android-shi-li-zhi-bi-ying-mei-ri-yi-tu/"/>
      <url>2021/03/30/android-shi-li-zhi-bi-ying-mei-ri-yi-tu/</url>
      
        <content type="html"><![CDATA[<h2 id="Android实现每天更新一张图片"><a href="#Android实现每天更新一张图片" class="headerlink" title="Android实现每天更新一张图片"></a>Android实现每天更新一张图片</h2><p>第一次写博客，记录一下自己学习android过程中做过的一些实例。</p><p>必应官网每天都会更新一张图片，我们可以通过这张图片的链接来获取这张图片，并让其显示在android app中。</p><h3 id="一、图片的获取"><a href="#一、图片的获取" class="headerlink" title="一、图片的获取"></a>一、图片的获取</h3><p>必应提供了一个图片的接口，我们可以通过访问这个接口来获取每日更新的图片，接口链接如下所示：<code>https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1</code><br>通过浏览器访问该链接可以得到以下所示数据</p><blockquote><p>{“images”:[{“startdate”:”20210124”,”fullstartdate”:”202101241600”,”enddate”:”20210125”,<strong>“url”:”/th?id=OHR.ChurchRock_ZH-CN6926315999_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp”</strong>,”urlbase”:”/th?id=OHR.ChurchRock_ZH-CN6926315999”,”copyright”:”红石公园教堂岩附近的雷击，新墨西哥州 (© Tim Fitzharris/Minden Pictures)”,”copyrightlink”:”<a href="https://www.bing.com/search?q=%E7%BA%A2%E7%9F%B3%E5%85%AC%E5%9B%AD%E6%95%99%E5%A0%82&amp;form=hpcapt&amp;mkt=zh-cn&quot;,&quot;title&quot;:&quot;&quot;,&quot;quiz&quot;:&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20210124_ChurchRock%22&amp;FORM=HPQUIZ&quot;,&quot;wp&quot;:true,&quot;hsh&quot;:&quot;cdae6c57dbb4fe473dfd4f93b7870b8b&quot;,&quot;drk&quot;:1,&quot;top&quot;:1,&quot;bot&quot;:1,&quot;hs&quot;:%5B%5D%7D%5D,&quot;tooltips&quot;:%7B&quot;loading&quot;:&quot;%E6%AD%A3%E5%9C%A8%E5%8A%A0%E8%BD%BD...&quot;,&quot;previous&quot;:&quot;%E4%B8%8A%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%83%8F&quot;,&quot;next&quot;:&quot;%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%83%8F&quot;,&quot;walle&quot;:&quot;%E6%AD%A4%E5%9B%BE%E7%89%87%E4%B8%8D%E8%83%BD%E4%B8%8B%E8%BD%BD%E7%94%A8%E4%BD%9C%E5%A3%81%E7%BA%B8%E3%80%82&quot;,&quot;walls&quot;:&quot;%E4%B8%8B%E8%BD%BD%E4%BB%8A%E6%97%A5%E7%BE%8E%E5%9B%BE%E3%80%82%E4%BB%85%E9%99%90%E7%94%A8%E4%BD%9C%E6%A1%8C%E9%9D%A2%E5%A3%81%E7%BA%B8%E3%80%82&quot;%7D%7D">https://www.bing.com/search?q=%E7%BA%A2%E7%9F%B3%E5%85%AC%E5%9B%AD%E6%95%99%E5%A0%82&amp;form=hpcapt&amp;mkt=zh-cn&quot;,&quot;title&quot;:&quot;&quot;,&quot;quiz&quot;:&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20210124_ChurchRock%22&amp;FORM=HPQUIZ&quot;,&quot;wp&quot;:true,&quot;hsh&quot;:&quot;cdae6c57dbb4fe473dfd4f93b7870b8b&quot;,&quot;drk&quot;:1,&quot;top&quot;:1,&quot;bot&quot;:1,&quot;hs&quot;:[]}],&quot;tooltips&quot;:{&quot;loading&quot;:&quot;正在加载...&quot;,&quot;previous&quot;:&quot;上一个图像&quot;,&quot;next&quot;:&quot;下一个图像&quot;,&quot;walle&quot;:&quot;此图片不能下载用作壁纸。&quot;,&quot;walls&quot;:&quot;下载今日美图。仅限用作桌面壁纸。&quot;}}</a></p></blockquote><p>其中，url标签后的内容即为我们所需图片的地址，通过访问<code>http://cn.bing.com+该地址</code>就可以得到我们想要的图片，例如，上面得到的url为<br><code> /th?id=OHR.ChurchRock_ZH-CN6926315999_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp</code><br>那我们访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//cn.bing.com/th?id=OHR.ChurchRock_ZH-CN6926315999_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp</span></span><br></pre></td></tr></table></figure><p>就可以得到我们想要的图片。</p><h3 id="二、在android上获取并显示图片"><a href="#二、在android上获取并显示图片" class="headerlink" title="二、在android上获取并显示图片"></a>二、在android上获取并显示图片</h3><p>由于android自身的限制，网络操作只能在子线程中完成，这一点是我们写代码中特别需要注意的。因此我们要把访问api接口的代码写在子线程中。此外，在android中，与UI有关的操作只能在主线程或UI线程中完成，所以我们加载图片上要记得更换线程。</p><h4 id="1-访问api接口"><a href="#1-访问api接口" class="headerlink" title="1.访问api接口"></a>1.访问api接口</h4><p>这里我们通过android自带的httpurlconnection来访问，并将访问得到的json返回文件存储到字符串response中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendRequestWithHttpURLConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 开启线程来发起网络请求</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(<span class="string">&quot;https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&quot;</span>);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    <span class="comment">// 下面对获取到的输入流进行读取</span></span><br><span class="line">                    reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    parseJSONWithJSONObject(response.toString());</span><br><span class="line">                   <span class="comment">// showResponse(response.toString());</span></span><br><span class="line">                    <span class="comment">//Ui线程</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            reader.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-json的解析"><a href="#2-json的解析" class="headerlink" title="2.json的解析"></a>2.json的解析</h4><p>这里我们直接通过android自带的JSONArray和JSONObject来进行json的解析，并将解析到的结果和<code>http://cn.bing.com</code>拼接起来，得到我们想要的图片的链接，并将其存储在字符串url1中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseJSONWithJSONObject</span><span class="params">(String jsonData)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">// JSONArray jsonArray = new JSONArray(jsonData);</span></span><br><span class="line"></span><br><span class="line">            JSONArray jsonArray = <span class="keyword">new</span> JSONObject(jsonData).getJSONArray(<span class="string">&quot;images&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line">                JSONObject jsonObject = jsonArray.getJSONObject(i);</span><br><span class="line">                String url = jsonObject.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"></span><br><span class="line">                Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;url is &quot;</span> + url);</span><br><span class="line">String url1=<span class="string">&quot;http://cn.bing.com&quot;</span>+url;</span><br><span class="line">                showResponse(url1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-图片的加载"><a href="#3-图片的加载" class="headerlink" title="3.图片的加载"></a>3.图片的加载</h4><p>利用开源框架Glide进行图片的加载。<br>注意，图片的加载要写在UI线程中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showResponse</span><span class="params">(<span class="keyword">final</span> String response)</span> </span>&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 在这里进行UI操作，将结果显示到界面上</span></span><br><span class="line">                Glide.with(MainActivity.<span class="keyword">this</span>).load(response).into(img);</span><br><span class="line">              <span class="comment">//  text.setText(response);</span></span><br><span class="line">                Log.i(<span class="string">&quot;123&quot;</span>,response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="三、演示效果"><a href="#三、演示效果" class="headerlink" title="三、演示效果"></a>三、演示效果</h3><p>![-w40](<a href="https://img-blog.csdnimg.cn/20210125151637243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54aWhhbmh1aQ==,color_FFFFFF,t_70">https://img-blog.csdnimg.cn/20210125151637243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54aWhhbmh1aQ==,color_FFFFFF,t_70</a> =400x800)</p><h3 id="四、源代码"><a href="#四、源代码" class="headerlink" title="四、源代码"></a>四、源代码</h3><p><strong>1.xml</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;ImageView</span><br><span class="line">    android:id=<span class="string">&quot;@+id/img&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>这部分代码比较简单，就是线性布局中加了一个imageview.</p><p><strong>2.activity</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    TextView text;</span><br><span class="line">    ImageView img;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="comment">// text=findViewById(R.id.text);</span></span><br><span class="line">       img=findViewById(R.id.img);</span><br><span class="line">        sendRequestWithHttpURLConnection();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendRequestWithHttpURLConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 开启线程来发起网络请求</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(<span class="string">&quot;https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&quot;</span>);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    <span class="comment">// 下面对获取到的输入流进行读取</span></span><br><span class="line">                    reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    parseJSONWithJSONObject(response.toString());</span><br><span class="line">                   <span class="comment">// showResponse(response.toString());</span></span><br><span class="line">                    <span class="comment">//Ui线程</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            reader.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showResponse</span><span class="params">(<span class="keyword">final</span> String response)</span> </span>&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 在这里进行UI操作，将结果显示到界面上</span></span><br><span class="line">                Glide.with(MainActivity.<span class="keyword">this</span>).load(response).into(img);</span><br><span class="line">              <span class="comment">//  text.setText(response);</span></span><br><span class="line">                Log.i(<span class="string">&quot;123&quot;</span>,response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseJSONWithJSONObject</span><span class="params">(String jsonData)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">// JSONArray jsonArray = new JSONArray(jsonData);</span></span><br><span class="line"></span><br><span class="line">            JSONArray jsonArray = <span class="keyword">new</span> JSONObject(jsonData).getJSONArray(<span class="string">&quot;images&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line">                JSONObject jsonObject = jsonArray.getJSONObject(i);</span><br><span class="line">                String url = jsonObject.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"></span><br><span class="line">                Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;url is &quot;</span> + url);</span><br><span class="line">String url1=<span class="string">&quot;http://cn.bing.com&quot;</span>+url;</span><br><span class="line">                showResponse(url1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android实现TCP客户端</title>
      <link href="2021/03/30/android-shi-xian-tcp-ke-hu-duan/"/>
      <url>2021/03/30/android-shi-xian-tcp-ke-hu-duan/</url>
      
        <content type="html"><![CDATA[<h2 id="1-添加相关权限，使得android-app可以访问网络"><a href="#1-添加相关权限，使得android-app可以访问网络" class="headerlink" title="1.添加相关权限，使得android app可以访问网络"></a>1.添加相关权限，使得android app可以访问网络</h2><p>在AndroidManiffest.xml中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h2 id="2-socket的连接"><a href="#2-socket的连接" class="headerlink" title="2.socket的连接"></a>2.socket的连接</h2><p>由于android平台的限制，与网络相关的操作只能在子线程中进行，所以这里我们单独建立一个线程用于socket的连接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//子线程中进行网络相关操作</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">connectthread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream=<span class="keyword">null</span>;</span><br><span class="line">        InputStream inputStream=<span class="keyword">null</span>;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//连接</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                socket=<span class="keyword">new</span> Socket(a, b);</span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;连接成功&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;连接失败&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;连接失败&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>socket=new socket(a,b)这一方法可以建立一个tcp连接,其中，a为ip地址，b为端口号<br>如果连接成功，我们及通过Toast在屏幕中显示“连接成功”，若连接失败，则会转到异常中，我们通过Toast显示“连接失败”。</p><h2 id="3-通过输出流发送消息"><a href="#3-通过输出流发送消息" class="headerlink" title="3.通过输出流发送消息"></a>3.通过输出流发送消息</h2><p>在子线程中添加以下代码，获取socket的输出流对象<br>并通过输出流对象的write()方法向服务器发送“123”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">               outputStream=socket.getOutputStream();</span><br><span class="line">               outputStream.write(<span class="number">123</span>);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>以上就是最简单的消息发送，下面我们通过edittext获取输入的内容，并将输入的内容发送给服务器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送</span></span><br><span class="line">      send.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">              <span class="comment">//子线程中进行网络操作</span></span><br><span class="line">  <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(socket!=<span class="keyword">null</span>)&#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              String text=out.getText().toString();</span><br><span class="line">              lianjie.outputStream.write(text.getBytes());</span><br><span class="line">          &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">              <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">              e.printStackTrace();</span><br><span class="line"></span><br><span class="line">          &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125;&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                  </span>&#123;</span><br><span class="line">                      <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                      Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;请先建立连接&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;).start();</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><p>需要注意的是，发送的操作需要在子线程中进行，所以这里我又建立了一个线程来进行发送的操作，在线程中获取socket的输出流对象即可进行内容的发送。<br>在这里我加了一个提示信息，如果socket为空的话，则提示“请先建立连接”。</p><h2 id="4-通过输入流获取消息"><a href="#4-通过输入流获取消息" class="headerlink" title="4.通过输入流获取消息"></a>4.通过输入流获取消息</h2><p>在子线程中建立一个死循环，时刻监听输入流，读取服务器发送来的消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">               <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="keyword">final</span> <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];<span class="comment">//创建接收缓冲区</span></span><br><span class="line">                   inputStream = socket.getInputStream();</span><br><span class="line">                   <span class="keyword">final</span> <span class="keyword">int</span> len = inputStream.read(buffer);<span class="comment">//数据读出来，并且返回数据的长度</span></span><br><span class="line">                   runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                   &#123;</span><br><span class="line">                       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                       </span>&#123;</span><br><span class="line">                           <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                           receive.append(<span class="keyword">new</span> String(buffer,<span class="number">0</span>,len)+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="5-测试结果"><a href="#5-测试结果" class="headerlink" title="5.测试结果"></a>5.测试结果</h2><p>客户端<br><img src="https://img-blog.csdnimg.cn/20210321163105573.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54aWhhbmh1aQ==,size_10,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>服务器<br><img src="https://img-blog.csdnimg.cn/202103211631546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54aWhhbmh1aQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>经过测试，服务器和客户端之间可以正常的发送和接收信息。</p><h2 id="6-源代码"><a href="#6-源代码" class="headerlink" title="6.源代码"></a>6.源代码</h2><p>xml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=<span class="string">&quot;@+id/ip&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:hint=<span class="string">&quot;ip&quot;</span></span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=<span class="string">&quot;@+id/port&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:hint=<span class="string">&quot;port&quot;</span></span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=<span class="string">&quot;@+id/out&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:hint=<span class="string">&quot;请输入要发送的内容&quot;</span></span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/connect&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;连接&quot;</span>/&gt;</span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/send&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;发送&quot;</span>/&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/receive&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>Mainactivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    String a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    connectthread lianjie;</span><br><span class="line">    TextView receive;</span><br><span class="line">    Socket socket=<span class="keyword">null</span>;</span><br><span class="line">    Button connect;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        EditText ip=findViewById(R.id.ip);</span><br><span class="line">        EditText port=findViewById(R.id.port);</span><br><span class="line">        EditText out=findViewById(R.id.out);</span><br><span class="line">         receive=findViewById(R.id.receive);</span><br><span class="line">         connect=findViewById(R.id.connect);</span><br><span class="line">        Button send=findViewById(R.id.send);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        connect.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                a=ip.getText().toString();</span><br><span class="line">                String c=port.getText().toString();</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">&quot;&quot;</span>.equals(a)||<span class="string">&quot;&quot;</span>.equals(c))&#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;请输入ip和端口号&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;b=Integer.valueOf(c);</span><br><span class="line">                 lianjie=<span class="keyword">new</span> connectthread();</span><br><span class="line">                lianjie.start();&#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送</span></span><br><span class="line">        send.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//子线程中进行网络操作</span></span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(socket!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                String text=out.getText().toString();</span><br><span class="line">                lianjie.outputStream.write(text.getBytes());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                e.printStackTrace();</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;请先建立连接&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//子线程中进行网络相关操作</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">connectthread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream=<span class="keyword">null</span>;</span><br><span class="line">        InputStream inputStream=<span class="keyword">null</span>;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//连接</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                socket=<span class="keyword">new</span> Socket(a, b);</span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;连接成功&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;连接失败&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;连接失败&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="keyword">if</span>(socket!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//获取输出流对象</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                outputStream=socket.getOutputStream();</span><br><span class="line">                outputStream.write(<span class="number">123</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];<span class="comment">//创建接收缓冲区</span></span><br><span class="line">                    inputStream = socket.getInputStream();</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> len = inputStream.read(buffer);<span class="comment">//数据读出来，并且返回数据的长度</span></span><br><span class="line">                    runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line">                            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                            receive.append(<span class="keyword">new</span> String(buffer,<span class="number">0</span>,len)+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="7-参考文章"><a href="#7-参考文章" class="headerlink" title="7.参考文章"></a>7.参考文章</h2><p><a href="https://blog.csdn.net/lyndon_li/article/details/82263172?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160611526819725225053660%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=160611526819725225053660&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-82263172.first_rank_ecpm_v3_pc_rank_v2&utm_term=android%20tcp%E5%AE%A2%E6%88%B7%E7%AB%AF&spm=1018.2118.3001.4449">Android 一步步实现TCP客户端</a><br><a href="https://blog.csdn.net/pingping_010/article/details/86527609">Android网络编程之–Socket编程</a><br><a href="https://blog.csdn.net/qq_39400113/article/details/108183449?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161579882416780271565422%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161579882416780271565422&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-108183449.first_rank_v2_pc_rank_v29&utm_term=android%20tcp%E5%AE%A2%E6%88%B7%E7%AB%AF">android 之TCP客户端编程</a><br><a href="https://blog.csdn.net/weixin_48848716/article/details/107429683?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161579882416780271525479%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=161579882416780271525479&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-16-107429683.first_rank_v2_pc_rank_v29&utm_term=android%20tcp%E5%AE%A2%E6%88%B7%E7%AB%AF">Android Studio TCP客户端实现</a><br><a href="https://blog.csdn.net/ASWaterbenben/article/details/90172103?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&dist_request_id=1328642.52964.16157988951892531&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">Android的SocketTCP客户端发送信息</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android实现TCP服务器</title>
      <link href="2021/03/30/android-shi-xian-tcp-fu-wu-qi/"/>
      <url>2021/03/30/android-shi-xian-tcp-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-获取本机ip地址"><a href="#1-获取本机ip地址" class="headerlink" title="1.获取本机ip地址"></a>1.获取本机ip地址</h2><p>建立socket连接之前，我们首先要获取本地的ip地址，这样，才能让客户端通过ip地址连接到服务器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**获得IP地址，分为两种情况，一是wifi下，二是移动网络下，得到的ip地址是不一样的*/</span></span><br><span class="line">   <span class="function">String <span class="title">getIPAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Context context=MainActivity.<span class="keyword">this</span>;</span><br><span class="line">      NetworkInfo info = ((ConnectivityManager) context</span><br><span class="line">              .getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo();</span><br><span class="line">      <span class="keyword">if</span> (info != <span class="keyword">null</span> &amp;&amp; info.isConnected()) &#123;</span><br><span class="line">          <span class="keyword">if</span> (info.getType() == ConnectivityManager.TYPE_MOBILE) &#123;<span class="comment">//当前使用2G/3G/4G网络</span></span><br><span class="line">              <span class="keyword">try</span> &#123;</span><br><span class="line">                  <span class="comment">//Enumeration&lt;NetworkInterface&gt; en=NetworkInterface.getNetworkInterfaces();</span></span><br><span class="line">                  <span class="keyword">for</span> (Enumeration&lt;NetworkInterface&gt; en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements(); ) &#123;</span><br><span class="line">                      NetworkInterface intf = en.nextElement();</span><br><span class="line">                      <span class="keyword">for</span> (Enumeration&lt;InetAddress&gt; enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements(); ) &#123;</span><br><span class="line">                          InetAddress inetAddress = enumIpAddr.nextElement();</span><br><span class="line">                          <span class="keyword">if</span> (!inetAddress.isLoopbackAddress() &amp;&amp; inetAddress <span class="keyword">instanceof</span> Inet4Address) &#123;</span><br><span class="line">                              <span class="keyword">return</span> inetAddress.getHostAddress();</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">                  e.printStackTrace();</span><br><span class="line">              &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (info.getType() == ConnectivityManager.TYPE_WIFI) &#123;<span class="comment">//当前使用无线网络</span></span><br><span class="line">              WifiManager wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);</span><br><span class="line">              WifiInfo wifiInfo = wifiManager.getConnectionInfo();</span><br><span class="line">              <span class="comment">//调用方法将int转换为地址字符串</span></span><br><span class="line">              String ipAddress = intIP2StringIP(wifiInfo.getIpAddress());<span class="comment">//得到IPV4地址</span></span><br><span class="line">              <span class="keyword">return</span> ipAddress;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//当前无网络连接,请在设置中打开网络</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 将得到的int类型的IP转换为String类型</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="function">String <span class="title">intIP2StringIP</span><span class="params">(<span class="keyword">int</span> ip)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> (ip &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line">              ((ip &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line">              ((ip &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line">              (ip &gt;&gt; <span class="number">24</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>这里需要注意的是，我们要添加以下几个权限<br>使得app可以访问网络状态</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span><br><span class="line">    &lt;uses-permission android:name=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span><br><span class="line">    &lt;uses-permission android:name=<span class="string">&quot;android.permission.CHANGE_WIFI_STATE&quot;</span>/&gt;</span><br><span class="line">    &lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="2-建立socket连接"><a href="#2-建立socket连接" class="headerlink" title="2.建立socket连接"></a>2.建立socket连接</h2><p>建立一个子线程，在子线程中建立socket连接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConnectThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">        OutputStream os;</span><br><span class="line">        Socket socket;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">               </span><br><span class="line">                <span class="comment">// 1.新建ServerSocket对象，创建指定端口的连接</span></span><br><span class="line">                ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 2.进行监听</span></span><br><span class="line">                socket = serverSocket.accept();<span class="comment">// 开始监听10000端口，并接收到此套接字的连接。&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="3-通过输入流接收消息"><a href="#3-通过输入流接收消息" class="headerlink" title="3.通过输入流接收消息"></a>3.通过输入流接收消息</h2><p>建立一个死循环，监听输入流来自客户端的消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];<span class="comment">//创建接收缓冲区</span></span><br><span class="line">                   InputStream inputStream = socket.getInputStream();</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> len = inputStream.read(buffer);<span class="comment">//数据读出来，并且返回数据的长度</span></span><br><span class="line">                    runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line">                            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                            text1.append(<span class="keyword">new</span> String(buffer,<span class="number">0</span>,len)+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);&#125;</span><br></pre></td></tr></table></figure><h2 id="4-通过输出流发送消息"><a href="#4-通过输出流发送消息" class="headerlink" title="4.通过输出流发送消息"></a>4.通过输出流发送消息</h2><p>  通过输出流的write()方法将消息发送到客户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">os = socket.getOutputStream();</span><br><span class="line">                String text=<span class="string">&quot;我是服务器&quot;</span>;</span><br><span class="line">                os.write(text.getBytes());</span><br></pre></td></tr></table></figure><p>下面实现通过Edittext发送输入的内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">fasong.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">               <span class="keyword">if</span>(connectThread.socket!=<span class="keyword">null</span>)&#123;</span><br><span class="line">               String a=fasong_text.getText().toString();</span><br><span class="line"></span><br><span class="line">               <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                       <span class="keyword">try</span> &#123;</span><br><span class="line">                           connectThread.os.write(a.getBytes());</span><br><span class="line">                       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                           e.printStackTrace();</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;).start();</span><br><span class="line"></span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;请先建立连接&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">               &#125;&#125;</span><br><span class="line"></span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h2 id="5-测试"><a href="#5-测试" class="headerlink" title="5.测试"></a>5.测试</h2><p><strong>注意，由于模拟器的原因，模拟器ip无法作为tcp服务器被访问，所以这一部分测试只能在真机上进行。</strong><br>经过测试，服务器可以正常地和客户端进行通信。<br>这里偷点懒，放一张界面图，懒得再截真机测试的图片了。<br><img src="https://img-blog.csdnimg.cn/20210321165721149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54aWhhbmh1aQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="6-源代码"><a href="#6-源代码" class="headerlink" title="6.源代码"></a>6.源代码</h2><p>xml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line">   &lt;EditText</span><br><span class="line">       android:id=<span class="string">&quot;@+id/fasong_text&quot;</span></span><br><span class="line">       android:hint=<span class="string">&quot;请输入要发送的内容&quot;</span></span><br><span class="line">       android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">       android:layout_height=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span><br><span class="line">    &lt;Button</span><br><span class="line">        android:text=<span class="string">&quot;发送&quot;</span></span><br><span class="line">        android:id=<span class="string">&quot;@+id/fasong&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/text1&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;\n&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintLeft_toLeftOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintRight_toRightOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>Mainactivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    TextView text1;</span><br><span class="line">    EditText fasong_text;</span><br><span class="line">    ConnectThread connectThread;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="comment">//Toast.makeText(MainActivity.this,&quot;123&quot;,Toast.LENGTH_SHORT).show();</span></span><br><span class="line">        text1=findViewById(R.id.text1);</span><br><span class="line">        fasong_text=findViewById(R.id.fasong_text);</span><br><span class="line">        Button fasong=findViewById(R.id.fasong);</span><br><span class="line"></span><br><span class="line">         connectThread=<span class="keyword">new</span> ConnectThread();</span><br><span class="line">        connectThread.start();</span><br><span class="line">   <span class="comment">//获取本地ip地址</span></span><br><span class="line">        text1.append(<span class="string">&quot;本地ip地址为：&quot;</span>+getIPAddress()+<span class="string">&quot; 端口号为10000&quot;</span>);</span><br><span class="line">        text1.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        fasong.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(connectThread.socket!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                String a=fasong_text.getText().toString();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            connectThread.os.write(a.getBytes());</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).start();</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">&quot;请先建立连接&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;&#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**获得IP地址，分为两种情况，一是wifi下，二是移动网络下，得到的ip地址是不一样的*/</span></span><br><span class="line">     <span class="function">String <span class="title">getIPAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Context context=MainActivity.<span class="keyword">this</span>;</span><br><span class="line">        NetworkInfo info = ((ConnectivityManager) context</span><br><span class="line">                .getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo();</span><br><span class="line">        <span class="keyword">if</span> (info != <span class="keyword">null</span> &amp;&amp; info.isConnected()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (info.getType() == ConnectivityManager.TYPE_MOBILE) &#123;<span class="comment">//当前使用2G/3G/4G网络</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">//Enumeration&lt;NetworkInterface&gt; en=NetworkInterface.getNetworkInterfaces();</span></span><br><span class="line">                    <span class="keyword">for</span> (Enumeration&lt;NetworkInterface&gt; en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements(); ) &#123;</span><br><span class="line">                        NetworkInterface intf = en.nextElement();</span><br><span class="line">                        <span class="keyword">for</span> (Enumeration&lt;InetAddress&gt; enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements(); ) &#123;</span><br><span class="line">                            InetAddress inetAddress = enumIpAddr.nextElement();</span><br><span class="line">                            <span class="keyword">if</span> (!inetAddress.isLoopbackAddress() &amp;&amp; inetAddress <span class="keyword">instanceof</span> Inet4Address) &#123;</span><br><span class="line">                                <span class="keyword">return</span> inetAddress.getHostAddress();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (info.getType() == ConnectivityManager.TYPE_WIFI) &#123;<span class="comment">//当前使用无线网络</span></span><br><span class="line">                WifiManager wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);</span><br><span class="line">                WifiInfo wifiInfo = wifiManager.getConnectionInfo();</span><br><span class="line">                <span class="comment">//调用方法将int转换为地址字符串</span></span><br><span class="line">                String ipAddress = intIP2StringIP(wifiInfo.getIpAddress());<span class="comment">//得到IPV4地址</span></span><br><span class="line">                <span class="keyword">return</span> ipAddress;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//当前无网络连接,请在设置中打开网络</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将得到的int类型的IP转换为String类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="function">String <span class="title">intIP2StringIP</span><span class="params">(<span class="keyword">int</span> ip)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (ip &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line">                ((ip &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line">                ((ip &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line">                (ip &gt;&gt; <span class="number">24</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ConnectThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">        OutputStream os;</span><br><span class="line">        Socket socket;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 1.新建ServerSocket对象，创建指定端口的连接</span></span><br><span class="line">                ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 2.进行监听</span></span><br><span class="line">                socket = serverSocket.accept();<span class="comment">// 开始监听10000端口，并接收到此套接字的连接。</span></span><br><span class="line">                <span class="comment">// 3.拿到输入流（客户端发送的信息就在这里）</span></span><br><span class="line"></span><br><span class="line">                Log.i(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;连接成功&quot;</span>);</span><br><span class="line">                 os = socket.getOutputStream();</span><br><span class="line">                String text=<span class="string">&quot;我是服务器&quot;</span>;</span><br><span class="line">                os.write(text.getBytes());</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];<span class="comment">//创建接收缓冲区</span></span><br><span class="line">                   InputStream inputStream = socket.getInputStream();</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> len = inputStream.read(buffer);<span class="comment">//数据读出来，并且返回数据的长度</span></span><br><span class="line">                    runOnUiThread(<span class="keyword">new</span> Runnable()<span class="comment">//不允许其他线程直接操作组件，用提供的此方法可以</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line">                            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                            text1.append(<span class="keyword">new</span> String(buffer,<span class="number">0</span>,len)+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 关闭输入流</span></span><br><span class="line">               <span class="comment">// socket.shutdownInput();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">/*os.flush();</span></span><br><span class="line"><span class="comment">                // 关闭输出流</span></span><br><span class="line"><span class="comment">                socket.shutdownOutput();</span></span><br><span class="line"><span class="comment">                os.close();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                // 关闭IO资源</span></span><br><span class="line"><span class="comment">                bufReader.close();</span></span><br><span class="line"><span class="comment">                reader.close();</span></span><br><span class="line"><span class="comment">                is.close();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                socket.close();// 关闭socket</span></span><br><span class="line"><span class="comment">                serverSocket.close();// 关闭ServerSocket*/</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-参考文章"><a href="#7-参考文章" class="headerlink" title="7.参考文章"></a>7.参考文章</h2><p><a href="https://blog.csdn.net/chenxihanhui/article/details/115050849">Android实现TCP客户端</a><br><a href="https://blog.csdn.net/pingping_010/article/details/86527609">Android网络编程之–Socket编程</a><br><a href="https://www.jb51.net/article/153245.htm">Android获得设备状态信息、Mac地址、IP地址的方法</a><br><a href="https://blog.csdn.net/lyndon_li/article/details/82263172?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160611526819725225053660%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=160611526819725225053660&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-82263172.first_rank_ecpm_v3_pc_rank_v2&utm_term=android%20tcp%E5%AE%A2%E6%88%B7%E7%AB%AF&spm=1018.2118.3001.4449">Android 一步步实现TCP客户端</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>读《偷影子的人》</title>
      <link href="2021/03/30/du-tou-ying-zi-de-ren/"/>
      <url>2021/03/30/du-tou-ying-zi-de-ren/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自己很久以前写的一篇文章。</p></blockquote><p>#《偷影子的人》:你是否真正地找到了自己</p><h3 id="01"><a href="#01" class="headerlink" title="01"></a>01</h3><p>有这样一个人，他没有独特的名字，却拥有一种独特的能力，他能够偷得到别人的影子，并能够与影子对话，从而听到人们内心深处的不安，疑惑以及他们不为人知的梦想。</p><p>然而在他长大以后，他所具有的这种能力慢慢地变弱，他不有那样强烈的意愿，不在有那样强的好奇心，不再那样认真而真诚的去倾听，去关心我们所在乎与在乎我们的人。</p><p>虽然他因为童年的愿望而成为了一名医生，然而他不再能够如当初一般，能够听得到别人的心声，他是否还能和当初一样地认真而真诚地对待周边的人？</p><p>在这样的过程里，他慢慢的接受了亲情，友情以及爱情的一场场考验，在这样的考验里一点点地成长，并在最终找到了真正对自己来说重要的东西，成为了他自己，成为了一个真正意义上的人。</p><h3 id="02"><a href="#02" class="headerlink" title="02"></a>02</h3><p>每个人都有自己的独特性，这种独特性可能会让你鹤立鸡群，可能会让你昂扬得意，也可能会让你被数落，被嘲讽，被践踏，但恰恰是这种独特性让你成为了你自己，而不是其他任何人。</p><p>偷影子的人正拥有这样一种独特的能力:他能偷得到别人的影子，并能与影子对话，能听得到别人内心深处那些不为人知的，不想说出秘密与梦想以及那些不想说出口的心里话。</p><p>起初，这种能力让他恐惧，他不愿意去偷听别人的秘密，不愿意去偷别人的影子，也害怕自己这种独特的能力被别人发现，从而被视为异类，被孤立，被别人打击，欺负，嘲讽。</p><p>但慢慢地，他开始试着接受这种能力，并积极地与影子交流，去帮助每一个影子的主人，去点亮他们生命中的小小光芒，帮助他们实现自己内心深处的梦想，给予他们最真诚的关注。</p><p>在帮助别人的过程里，他也慢慢地明白，原来有那么多的人都在说谎，而且他们的谎言一旦开始就不能停下，尽管这些谎言都是善意的谎言。原来有那么多的人，都把梦想深深地埋藏在心底，不愿意去向别人倾诉。</p><h3 id="03"><a href="#03" class="headerlink" title="03"></a>03</h3><p>他也试着去帮助最好的朋友，实现他内心深处的梦想，帮助他成为医生，而不想让他像他父亲一样，一辈子做个面包师。</p><p>他的朋友不愿意放弃现在的生活，不愿意放下他的家人，去实现自己的梦想。所以他直接去找了朋友的父亲，讲述了朋友的梦想，朋友的父亲赶走了他，却也在后来的日子里赶走了朋友。父亲让朋友去实现自己的梦想，并告诉朋友，如果想回来的话，他会教给朋友如何成为一个优秀的面包师。</p><p>朋友离开家乡，开始去学习，学习如何成为一个医生，然后很好地造福他人，实现自己的梦想，但在后来的日子里，他发现，他并不适合成为一个医生。做一个医生，他没有想象中那般快乐，相反的，做一个像父亲那样的面包师，更能让自己快乐，自己喜欢看到面包出炉时的画面，喜欢看到人们拿到面包时的那种满足感，尽管自己不能成为一个优秀的医生，但自己可以去成为一个优秀的面包师！</p><p>所以朋友离开了医院，再一次地回到家中开始学做面包，去体验真正属于自己的生活，去经历真正属于自己的精彩，也真正地成为自己！</p><h3 id="04"><a href="#04" class="headerlink" title="04"></a>04</h3><p>在爱情上，偷影子的人遇见过三个重要的女孩，班级里的伊丽莎白，沙滩上有着大提琴般笑声的克莱儿，以及同为医学生的苏菲。</p><p>伊丽莎白是童年时的倾慕，却没有成为真正的爱情，最终只成为了一种报复，一种虚荣。</p><p>长大以后遇到的苏菲，尽管很努力地维持两人的关系，却也难以真正地走入对方的心扉，最后只能不了了之。</p><p>只有那个沙滩上遇到的克莱儿，那个有着青梅竹马记忆的女孩，那个曾经许下诺言来年再见的女孩，那个用风筝写下我想你的女孩，才是自己埋藏在心底里喜欢的人。</p><p>在母亲去世之后，偷影子的人终于意识到，最美好的回忆就在当下，他应该趁着曾经的回忆还未消散，去做点什么，他去曾经的沙滩上找到了克蕾儿的消息，又多方打听找到了她，并用风筝唤回了她的记忆，两个人终于又一次地拥抱在一起。</p><p>他也终于找到了那份属于自己的温暖！</p><h3 id="05"><a href="#05" class="headerlink" title="05"></a>05</h3><p>我一直相信，每个人都是与众不同的，每个人都有理由成为他自己。然而在这个缤纷多彩的大千世界里，总有那么多的人想要成为别人，想成为跟别人一模一样的人。</p><p>他们在生活里，在成长的过程中，慢慢的放弃着自己的独特性，慢慢的磨灭着自己所有与众不同的棱角，从而慢慢的融入大众，融入人群，变成了无数的江河湖海里，无数水滴中不再独特的一滴小水滴。</p><p>确实，融入大众可以让人获得一种安全感，让人不再被嘲笑，不再被讽刺，不再被针对。然而，他们却忘记了，成长的目的以及意义并不是为了让一个人放弃所有的棱角，而是为了让一个人去寻找，去探索，去在多种多样的生活里，去在夜深人静，梦的远方里，慢慢的寻找那些自己所热爱的与属于自己的东西，找到那一片真正属于自己的天空。</p><p>我并不是说归于平凡不好，只是所有的人不应当变的一模一样，世界不需要那么多标准化的人，我们应该有一点理想主义，试着去追求自己的梦想，与寻找那些年少时内心的希望与感动，试着去追寻一下自己的初心，成为一个真正意义上有灵魂，有思想的不可替代的人，也成为独特的自己！</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>谈谈《人生》</title>
      <link href="2021/03/30/du-ren-sheng/"/>
      <url>2021/03/30/du-ren-sheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自己很久以前写的一篇文章了。</p></blockquote><h1 id="《人生》-命运与个人的抉择"><a href="#《人生》-命运与个人的抉择" class="headerlink" title="《人生》:命运与个人的抉择"></a>《人生》:命运与个人的抉择</h1><h3 id="01"><a href="#01" class="headerlink" title="01"></a>01</h3><p>放假在家，又捧起了路遥的《人生》。</p><p>记得第一次遇到这本书的时候，大概是两年前，在书店里瞎逛，因为“路遥”二字而取下了这本书。</p><p>在学校用不到一个星期就读完了这本书，或许是因为读过《平凡的世界》的缘故，感觉相比而言，这本书着眼点有些狭窄，只描写了生活中的一个片段，显得有些短暂，没有我想象的那般大气，似乎配不上人生这个书名。</p><p>现如今的我，经历了高考的抉择，也渐渐地明白了柳青所写的那句话:人生的道路虽然漫长，但紧要处却常常只有几步。而这几处抉择却往往可以决定你很长一个时期甚至是一生的道路。</p><p>人的生活，整体上来说是平淡的，也是平凡的，就像行走在乡间的小路上，碰到岔路口，需要选择的时候，才能真正的展现一个人的与众不同，也能真正地考量一个人的品性。</p><p>从这方面来说，路遥的《人生》，虽描写的面并不够广阔，但却用一个片段反应了高加林以及他周边人的品性和他们那广阔的生活，也展现了时代与命运给人带来的抉择。</p><h3 id="02"><a href="#02" class="headerlink" title="02"></a>02</h3><p>整个故事并不太长，也不复杂，主要讲述了改革开放初期，做教师的高加林被村长的儿子替换下后，陷入了生活的困境，然而就在这时，村子里最漂亮却大字不识几个的巧珍向这位落魄的先生表达了爱意。教书先生迫于生计下地抡起了撅头，而与巧珍的爱情却给了他生活的希望与热情。</p><p>如果就这样下去，或许他们能结婚生子，平静地生活下去。然而高加林在军区的叔叔被调到了地方做了领导，村镇里的公职人员为了讨好这位领导，走后门把高加林弄回了县城，让他做了当地的记者。</p><p>高加林到了县城后，遇到了他的中学同学黄亚萍。黄亚萍欣赏高加林的个人品质，为他的才气，性格所吸引，甩掉了当前的对象张克南，主动向高加林表明了心意。高加林犹犹豫豫，最终在巧珍与黄亚萍之间选择了城镇中的女孩黄亚萍。</p><p>巧珍受到了刺激，但她并没有选择轻生，也没有疯癫，（在当时这是一件非常大的事情，巧珍的名誉受到了损失，村民们认为她会轻生或疯掉），而是选择了继续热情地生活，并与来提亲的马栓结了婚。</p><p>高加林与黄亚萍在县城里享受着生活，并计划迁居南京。但是生活又一次给他开了个玩笑，给了他一次沉重的打击。黄亚萍的前男友的妈妈向纪委举报了高加林，高加林又要被迫地回到农村。黄亚萍喜欢高加林，但她又不喜欢高加林做农民，最后迫于现实，他们无奈地分了手。他与黄亚萍之间的爱情来的突然，去的也突然，就像一场梦一样，他们之间终究还是有一道鸿沟难以跨越。</p><p>高加林又突然想起了巧珍，他发觉他还是爱着巧珍的，他感到了深深地愧疚。得知巧珍已经结婚后，高加林又感到了深深的后悔。他想轻生，但村民们的热情与真诚以及德顺老汉的劝说又让高加林感受到了生活的美好与希望。</p><h3 id="03"><a href="#03" class="headerlink" title="03"></a>03</h3><p>从民办教师掉到黄土地里去，这是命运给他的挫折与考验。在人生的路口，巧珍的温情，给了他生活的热情，但高加林却并不甘心就这样在农村里待下去，他上过学，有些文化，有着与一般农民不一样的想法与眼界，有着年轻人的志向与傲气，他任然渴望着有朝一日能够走出去，去看看诗与远方。</p><p>而调到县城做通讯干事，无疑又给了他施展才华的机会。他也确实没有辜负这个职位，写出了一些好文章。</p><p>他的老同学黄亚萍在读到他的文章时，又突然意识到，她还是爱着他的。于是她大胆地甩掉了当前的对象，向高加林倾诉爱意。</p><p>高加林陷入了内心的斗争，他知道，他正在进行一场非常严重的抉择。</p><p>黄亚萍与刘巧珍放在一起比较，不平衡是显而易见的，他渴望和亚萍在一起，渴望外面更加精彩的生活，不愿意在一眼就能望到未来的黄土地上埋葬自己的一生。</p><p>但他的良心感到不安，他不是一个十恶不赦的坏蛋，他还是在乎巧珍的。后来，他强迫自己使心肠变硬，为了他的远大前途，必须做出牺牲。</p><p>就这样高加林做出了关乎他一生的重要决定，得知消息的巧珍痛不欲生，很快便嫁为人妇。高加林与黄亚萍则开始享受他们的二人世界，似乎他们能够永远这样的生活下去。</p><p>但命运总是不尽人意的，高加林受到了举报，必须回到农村。黄亚萍喜欢高加林，但她不喜欢做农民的高加林，现在，他们又不得不分开。</p><p>高加林得到之后又失去，丢掉了巧珍，丢掉了良心，现在又失去了黄亚萍与他的远大前程，不得不丢人地回到村中。</p><h3 id="04"><a href="#04" class="headerlink" title="04"></a>04</h3><p>整个故事中高加林失去，得到最后又失去，几经起伏，最后造成了自己以及两个女子的悲剧。</p><p>高加林有知识，有文化，也有才气，有能力，最后却失去了一切所追求的事物，也丢掉了良心。</p><p>命运或许给了他许多苦难，但真正酿成自己的悲剧的，还是高加林自己。为了功名，为了虚荣，为了利益，为了所谓的自己想要的生活，高加林背弃了诺言，辜负了巧珍，放弃了一个人应当坚持的原则。</p><p>事实证明，高加林的生活哲学是错误的，他昧了良心，抛弃了巧珍，却没有得到自己想要的，最后两手空空，伤害了自己，也伤害了他人，造成了无可挽回的悲剧。<br>###05</p><p>其实并没有什么命运，一个人的命运终究还是由自己创造的，你的每一个决定，每一个习惯，都在慢慢地铸造着自己的命运。</p><p>时代或许会给每一个人带来许多痛苦，但这也并不是深渊，并不是令人绝望的困境，恰恰相反，它是磨刀石，会让你在痛苦的过程中，一次又一次地改变自己，提高自己，持续地抛弃那些不正确的习惯，方法，思想。</p><p>时代的抉择，对个人来说是痛苦的，但它是有价值的，他让每一个人与时代一起进步，一起成长。</p><p>而在时代的抉择中，裹挟着无数艰难的，无奈的个人的抉择，对个人来说，这些抉择是至关重要的，是关乎一生的，每一个决定，都有可能彻底地改变或影响自己的决定。</p><p>在人生紧要的那几步，需要每一个人自己去抉择，这些抉择，考验着每一个人的心性，能力，思想，需要一个人认认真真地去选择，绝不能背弃自己的原则，忘却自己的初心。</p><blockquote><p>愿将来有一天，当我们轻声叹息将往事回顾的时候，可以骄傲的说，当年选择了这条路，我不后悔，也没有遗憾！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>当我看手机的时候我在看些什么</title>
      <link href="2021/03/30/dang-wo-kan-shou-ji-de-shi-hou-wo-zai-kan-xie-shi-me/"/>
      <url>2021/03/30/dang-wo-kan-shou-ji-de-shi-hou-wo-zai-kan-xie-shi-me/</url>
      
        <content type="html"><![CDATA[<p>2021年3月29日，第1天。</p><p>今天想谈谈手机，自己似乎花费了太多时间在手机上，但好像又什么事情都没有做。<br>往往只是刷着一些毫无意义的信息，自以为在学习，实则什么都没有收获。<br>只有当屏幕亮着时，自己才会跟着网上的段子，奇闻趣事，傻傻地乐一乐，每当屏幕熄灭，自己又能记住什么，总想着做有意义的事情，但这样碎片化地看一些纷繁杂乱的信息，真的对自己有意义吗？手机灭屏之后，乐过的段子，笑过的笑话，也都随之而去，留给自己的，只有身体的疲惫和精神的空虚。<br>每天深夜，在睡前，总会拿着手机上网毫无目的漫游，仿佛只有这样，自己才能得到心灵的宁静与放松，可每天夜晚一刷起来就不知道要到什么时候才会停止，最后得到的往往不是心灵的宁静，而是身心的疲惫，然后在疲惫中关上屏幕，闭上干涩、肿胀的双眼，最后昏昏沉沉地睡去，第二天再无精打采地起来。<br><strong>毫无克制地刷手机，带给自己的只是一时的安慰和舒适，留下的确是杂乱的生活和疲惫不堪的身心。</strong><br>当我看手机时我在看些什么，又在追求些什么？<br>看了一下今天的手机屏幕使用时间，6小时39分，在最近几天里不算是比较多的，平均每天，自己使用手机的时间都在7小时以上，那么当我看手机的时候我在看些什么呢？<br>分析了一下上一周手机屏幕的使用时间，具体如下：</p><blockquote><p>微信读书：14时42分<br>王者荣耀：10时47分<br>知乎：7时34分<br>QQ:6时24分<br>微信：6时13分<br>抖音：5时1分<br>学习强国：2时54分<br>百度贴吧：2时40分<br>低于2小时的未列出</p></blockquote><p>这只是最近一周的数据，或许每周使用情况不太一样，但这些数据还是有很有的代表性的。<br>自己玩手机的时间基本上花在了聊天社交、图书阅读和游戏上，下面依次分析一下这几项。<br><strong>聊天社交</strong><br>无论是在自己看来还是在别人看来，自己从来都不是一个热爱社交的人，但在聊天社交这一项花的时间确实那么长。<br>微信、QQ用了那么久，自己真的是在跟人聊天吗？<br>好像不是的，大部分时间都是在刷朋友圈，毫无目的地随便看一看，自己根本就没有那么多的时间用在聊天上，这似乎早就不是真正的社交了，更多的是排解无聊与空虚的无意义行为，行为过后，带来的是更多的空虚与无聊，然后就在这个陷阱里反反复复。<br>朋友圈真的有那么好看吗？<br>这个时代，我们似乎都太过于在乎别人的生活，而往往忘记了自己真正的生活所在。<br>关注别人再多，又对自己的生活有什么好处呢？<br>这样的事情，并没有拉近自己与朋友的距离，反而会在朋友圈被包装的信息下，变得越来越陌生。<br>偶尔刷一刷，获取一些信息，了解一下朋友的最新动态，这无可厚非，但把太多的时间花在朋友圈上，就有过之而无不及了。<br>同样的，知乎也是如此，刷知乎或许在某种程度上让自己获取到了一些信息，但更多的，是信息背后无止尽的焦虑，刷知乎，并不能让自己成长，能让自己真正成长的是关闭知乎后深刻的思索和内省。<br><strong>图书阅读</strong><br>这一点就不多说什么了，最近正在培养阅读的习惯，希望接下来能坚持下去，读一些经典之作。<br><strong>游戏</strong><br>最近这一年，打的最多的游戏就是王者荣耀了，从去年春天疫情在家开始，到今年春天，自己入坑王者1年出头了。<br>自己以前一直是个不怎么打游戏的人，王者荣耀也是自己游戏时长最长的游戏了。<br>打王者这一年，自己收获了些什么呢？<br>最初打王者，是为了排解无聊，加强与朋友之间的联系，但一年以来，这一点似乎并没有做到自己想象的样子，自己更多的时间是一个人沉迷于游戏中，打王者，并没有让自己变得更会社交，更加不无聊，反而更加的空虚，更加的因为游戏中的各种逆风而情绪化。<br>打王者，早就违背了自己最开始的初衷。<br>所以，我决定卸载这个游戏，开始自己新的生活。<br><strong>结语</strong><br>未完待续……</p>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于《灵山》</title>
      <link href="2021/03/30/guan-yu-ling-shan/"/>
      <url>2021/03/30/guan-yu-ling-shan/</url>
      
        <content type="html"><![CDATA[<p>之前写了关于神游的一些东西，现在谈谈灵山，记录一些印象深刻的观点。<br>灵山和神游是一脉相成的，核心的价值观和思想是一致的，在关于神游中谈过的一些东西，这里就不再写了。<br>灵山是徐公子仙侠世界的集大成者，不仅描述了一个仙气飘飘的修行世界，更向我们展示了为什么现实世界看不到仙，为什么仙人永隔。</p><h3 id="修行发愿"><a href="#修行发愿" class="headerlink" title="修行发愿"></a>修行发愿</h3><p>没有作恶的菩萨。<br>如果有，那他就配不上菩萨的道果。<br>徐公子的修行世界是讲究愿心的，违背愿心，修行境界也会自然丧失。<br>同样的做人也是如此，违背了做人的原则，那就不是一个真正的人。</p><h3 id="所行即所愿，应为即愿为。"><a href="#所行即所愿，应为即愿为。" class="headerlink" title="所行即所愿，应为即愿为。"></a>所行即所愿，应为即愿为。</h3><p>特别喜欢徐公子的这一句话。<br>每个人做的事情，其实都是他愿意做的，每个人应当做的事情，也都是他愿意做的。<br>做自己想做的事情，才是真的做自己，也正是自己做的这些事情，决定了自己是谁。<br>有人会说，每个人都有被迫做自己不愿意做的事情的时候，但其实所谓的被迫，也只不过是权衡利弊的选择而已，在世人看来，这就是你愿意做的事情。<br>做自己愿意做的事，才是真正地做自己。</p><h3 id="真如常在"><a href="#真如常在" class="headerlink" title="真如常在"></a>真如常在</h3><p>不要管他是谁，且看他如何与你相处。</p><p>去年看的书了，现在写的时候好多东西都忘了…</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于《神游》</title>
      <link href="2021/03/29/guan-yu-shen-you/"/>
      <url>2021/03/29/guan-yu-shen-you/</url>
      
        <content type="html"><![CDATA[<p>最近刚刚读完了《神游》，记录一些笔记和自己的想法。<br>自己是读完《灵山》之后，被徐公子构建的仙侠世界所震撼，才开始继续读他的书《神游》的。<br>神游与其说是一本修仙小说，更像是一本都市小说，在神游的世界里，徐公子展示了世俗人与修行人是如何共同生活在现代化的世界里的。<br>尽管神游中有很多修行的方式和境界描写，但抛开这些修仙的外衣，神游更像是在讲为人处世的方式，人在世间的言行举止，才是最大的修行。</p><h3 id="妄心"><a href="#妄心" class="headerlink" title="妄心"></a>妄心</h3><p>妄心劫，徐公子世界中修行人必经的一大劫。<br>人人皆有妄心，有妄心，即有痛苦。<br>金钱，名利，权利，这是世俗众生每个人都有的妄心，得不到，就有了巨大的痛苦。<br>破妄，方成真人，只有破妄，才能变得更加强大。<br>破妄的关键不在于善或恶，而在于真如常在，以真实的方法应对每一件事，做到对自己真诚，修得一颗真心。<br>破妄有两种方式，以真破妄，或是以妄修真。<br>第一种是在妄境中做现实人，也就是刚刚谈到的真心，用真心面对每一件事情。<br>第二种是在现实中做妄境人，努力地把妄境变成现实，这是堕入魔道，真心被妄境所驱使，哪怕拥有再强的手段，也只不过是欲望的奴隶。</p><h3 id="真空"><a href="#真空" class="headerlink" title="真空"></a>真空</h3><p>所谓真空，个人觉得是一种无我的状态。<br>进入真空劫，世间再无这个我，法力尽失，神通皆无，只能以心渡劫，再造自我。<br>接地气一点来说，就是假如你没有了自己所依赖的各种超越平常人的能力，比如说过人的智商，情商，强健的身体，美丽的外貌，巨大的财富与名利等等，接下来你该怎么面对自己的生活，怎么在无我的状态下生活，想通了这一点并平静地面对，才能度过真空天劫。<br>《金刚经》中有一句话叫做“心无所住，而生其心”，我觉得也是对真空的一种阐述，不着迷与一切相，方能度过真空。</p><h3 id="苦海"><a href="#苦海" class="headerlink" title="苦海"></a>苦海</h3><p>苦海劫，照见前世今生，历经人间种种。<br>经历人间的种种修行，在苦海中历练，最终成就真我。</p><h3 id="一流的性情"><a href="#一流的性情" class="headerlink" title="一流的性情"></a>一流的性情</h3><p>神游中一直在讲石野是一流的性情，什么是一流的性情呢？<br>在我看来，所谓一流的性情，就是一种无怨无悔的状态，不论做什么事，最终都无怨无悔，不因选择的结果而怨天尤人，顾影自怜，而是坦然面对，哪怕有机会再相同的情况下再选一次，也仍然坚定自己的选择。</p><h3 id="修行的目的"><a href="#修行的目的" class="headerlink" title="修行的目的"></a>修行的目的</h3><p>修行是为了长生久视，不是为了纵横人间。<br>未完待续</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于博客的搭建</title>
      <link href="2021/03/29/guan-yu-bo-ke-de-da-jian/"/>
      <url>2021/03/29/guan-yu-bo-ke-de-da-jian/</url>
      
        <content type="html"><![CDATA[<p>记录一些hexo博客搭建过程中遇到的问题和各种bug</p><h3 id="node命令找不到"><a href="#node命令找不到" class="headerlink" title="node命令找不到"></a>node命令找不到</h3><p>安装node.js后，无法使用node命令，好像是安装路径的问题，导致了环境变量产生了问题，最后重新使用默认路径安装了一次，解决了这个问题。</p><h3 id="配置主题时产生问题"><a href="#配置主题时产生问题" class="headerlink" title="配置主题时产生问题"></a>配置主题时产生问题</h3><p>配置icarus主题时，样式产生了问题，后来发现yml文件非常注重空格和缩进，关键位置少一个空格都会报错。</p><h3 id="主题的选择"><a href="#主题的选择" class="headerlink" title="主题的选择"></a>主题的选择</h3><p>试过了next,icarus,最后还是觉得matery比较好看。</p><h3 id="评论功能的选择"><a href="#评论功能的选择" class="headerlink" title="评论功能的选择"></a>评论功能的选择</h3><p>使用了matery中内置的valine评论系统，不需要后台，只要注册账号，实名认证，创建应用，配置-config.yml文件即可使用。<br>不过valine也有个缺点，就是会显示评论者的ip地址，这一点可能会涉及到隐私问题，以后有时间了，我也会看看有没有更好的评论系统。</p><h3 id="gitee第一次进入首页部分图标不显示"><a href="#gitee第一次进入首页部分图标不显示" class="headerlink" title="gitee第一次进入首页部分图标不显示"></a>gitee第一次进入首页部分图标不显示</h3><p>查资料，在github上跟开发者交流后发现，好像是gitee配置目录的问题，gitee的默认配置路径是“/+仓库名”。<br>在config.yml中添加“root: yeyuwenxi(我的仓库名)”后，成功地解决了这一问题。</p><h3 id="gitee和github双部署产生的问题"><a href="#gitee和github双部署产生的问题" class="headerlink" title="gitee和github双部署产生的问题"></a>gitee和github双部署产生的问题</h3><p>github上部署目录是“root:/”,与gitee的“root :/+仓库名”上不一样，因此部署在两个位置的同一个博客产生了样式差异。<br>以我的博客为例，不添加“root: /yeyuwenxi”时，github完全正常，gitee上的博客第一次进入首页图标不显示。<br>添加“root: /yeyuwexni”时，gitee完全正常，github上的博客完全没有样式。<br>这一问题暂未解决。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>在腾讯云添加域名解析<br>在sourse中添加CNAME文件，文件中写明要绑定的域名</p><h3 id="友情链接图标不显示"><a href="#友情链接图标不显示" class="headerlink" title="友情链接图标不显示"></a>友情链接图标不显示</h3><p>好像是图片过大造成的不显示<br>更换图片后，可以正常显示<br>图标的两种调用方式：<br>1.在线图标<br>设置图片链接即可<br>我自己在github中搭建了一个图床，用来存放图片<br>2.本地图片<br>将要使用的图片存放到主题文件下的source文件中即可，使用时直接用图片名调用</p><h3 id="修改文章的默认模板"><a href="#修改文章的默认模板" class="headerlink" title="修改文章的默认模板"></a>修改文章的默认模板</h3><p>在scaffolds文件夹下的post.md中进行修改</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>作为开始</title>
      <link href="2021/03/28/zuo-wei-kai-shi/"/>
      <url>2021/03/28/zuo-wei-kai-shi/</url>
      
        <content type="html"><![CDATA[<p>2021年3月28日，第0天。</p><p>写一些纷繁杂乱的念头，作为一个简单的开始。</p><h4 id="为什么开始这个博客"><a href="#为什么开始这个博客" class="headerlink" title="为什么开始这个博客"></a>为什么开始这个博客</h4><p>最近的生活相比之前悠闲了很多，但悠闲之后自己并没有把那些当初想做的事情做好。<br>自己并没有成为理想中的那个样子，反而因为悠闲而显得有些堕落，整天无所事事，面对生活不知所措。<br>那些当初忙碌时想做却没有去做的事情，闲下来之后自己同样也没有去做，有些事情，永远会因为各种原因而被拖延。<br>我想，这并不是当初的那个自己想要成为的模样吧。<br>在某种程度上，这就是背叛了初心吧，当初那个自己如果看到今天的模样，应该会很失望吧。<br>所以，我开始了这个博客，写一些东西，做一些改变，为了成为自己想要成为的模样而努力。<br>生而为人，不可避免地会有自身的局限性，人并不一定能成为自己想要成为的模样，但起码，人应该好好活，应该认真地去做一些有价值，有意义的事情。</p><h4 id="我要写些什么"><a href="#我要写些什么" class="headerlink" title="我要写些什么"></a>我要写些什么</h4><p>记录一些日常生活里的念头和事件，或者是感触和随笔，写一些自己的碎碎念，总结每一天的生活，作为反思，也作为勉励。<br>我不知道自己能坚持多久，也不敢确定这个过程是否真正的有价值。<br>但不管怎样，我开始了，我也希望能把这件事情坚持下去，并在这个过程中收获成长。<br>坚持从来都不是一件容易的事情，尤其是对我来说，自己好像总是会有一些各种各样，天马行空的念头和想法，但是往往又很少去实现这些想法，只是在想，却很少去做，我想这就是大家所说的执行力差吧，我一直以来好像都是一个执行力很差的人。<br>所以，我希望能够通过这件事情做一些改变，让自己静下心来，踏踏实实地做一些事情，去经历，去记录，去反思，去成长。</p><h4 id="后续更新"><a href="#后续更新" class="headerlink" title="后续更新"></a>后续更新</h4><p>毕竟这是一个博客，不是个人日记，所以接下来会尽可能地多写一些系统化的文章，少涉及自己个人的一些情绪。<br>希望自己能坚持每天开一篇新的文章，不一定要当天写完，但一定要每天写点有意义的话题。</p>]]></content>
      
      
      <categories>
          
          <category> 心情日记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
