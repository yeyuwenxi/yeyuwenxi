<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夜雨闻曦</title>
  
  <subtitle>个人博客</subtitle>
  <link href="http://yeyuwenxi.github.io/atom.xml" rel="self"/>
  
  <link href="http://yeyuwenxi.github.io/"/>
  <updated>2021-04-18T08:04:05.362Z</updated>
  <id>http://yeyuwenxi.github.io/</id>
  
  <author>
    <name>pcl</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>c语言在函数中修改外部指针变量的值</title>
    <link href="http://yeyuwenxi.github.io/2021/04/18/c-yu-yan-zai-han-shu-zhong-xiu-gai-wai-bu-zhi-zhen-bian-liang-de-zhi/"/>
    <id>http://yeyuwenxi.github.io/2021/04/18/c-yu-yan-zai-han-shu-zhong-xiu-gai-wai-bu-zhi-zhen-bian-liang-de-zhi/</id>
    <published>2021-04-18T07:31:17.000Z</published>
    <updated>2021-04-18T08:04:05.362Z</updated>
    
    <content type="html"><![CDATA[<p>最近又开始学数据结构了，总结一下之前写链表时遇到的一个问题。<br>如何在函数中修改一个外部指针变量的值，注意，是指针变量本身的值，而不是指针指向的变量的值，也就是说，我们要在函数中改变指针的指向。<br>先来看一个例子吧</p><ul><li>示例1<br>void redirect(int <em>s) {<br>  int b = 5;<br>  s = &b;<br>}<br>int main() {<br>  int</em> p;<br>  int a = 10;<br>  p = &a;<br>  redirect(p);<br>  printf(“p=%d,a=%d”, *p,a);<br>  return 0;<br>}<br>输出：p=10,a=10</li></ul><p>在redirect函数中，s指向了b，但是p并未指向b,p中储存的仍然是a的地址。<br>这是为什么呢？<br>指针s并不是指针p本身，它仅仅是指针p的一个副本，储存了指针p的值，也就是说，指针s其实是另一个变量，它储存的地址和p储存的地址是一样的，但是改变s储存的地址，并不会改变p储存的地址。</p><p>那我们怎么才能在函数中改变指针的指向呢？<br>我们知道，函数是默认传递值的，而不是传递地址，想要改变一个普通变量的值，我们就需要传递它的指针给函数。<br>那么，想要改变指针变量的值，我们就需要传递指针的指针给函数，没错，需要使用二级指针来改变指针的值。</p><ul><li>示例2<br>void redirect(int **s) {<br>  int b = 5;<br>  <em>s = &b;<br>}<br>int main() {<br>  int</em> p;<br>  int a = 10;<br>  p = &a;<br>  redirect(&amp;p);<br>  printf(“p=%d,a=%d”, *p,a);<br>  return 0;<br>}<br>输出：p=5,a=10</li></ul><p>可以看出，这时p已经指向了b,即我们成功地在函数中改变了指针p的值。</p><p>此外，我们也可以通过引用在函数中改变指针的值。</p><ul><li>示例3：<br>void redirect(int <em>&amp;s) {<br>  int b = 5;<br>  s = &b;<br>}<br>int main() {<br>  int</em> p;<br>  int a = 10;<br>  p = &a;<br>  redirect(p);<br>  printf(“p=%d,a=%d”, *p,a);<br>  return 0;<br>}</li></ul><p>输出：p=5,a=10<br>可以看出，此时p也指向了b.</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>c语言在传递函数的参数时，传递给函数的，并不是变量本身，而是变量的一个拷贝。<br>只有在使用引用时，传递给函数的才是变量本身。<br>要想在函数中改变一个普通变量的值，我们需要使用指针来实现，那么要想在函数中改变一个指针变量的值，我们需要使用指针的指针，即二级指针来实现。<br>此外，也可以通过使用引用，传递变量本身来实现。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近又开始学数据结构了，总结一下之前写链表时遇到的一个问题。&lt;br&gt;如何在函数中修改一个外部指针变量的值，注意，是指针变量本身的值，而不是指针指向的变量的值，也就是说，我们要在函数中改变指针的指向。&lt;br&gt;先来看一个例子吧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例1&lt;br&gt;void </summary>
      
    
    
    
    <category term="c语言" scheme="http://yeyuwenxi.github.io/categories/c%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="c语言" scheme="http://yeyuwenxi.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>MSP432入门之流水灯实验</title>
    <link href="http://yeyuwenxi.github.io/2021/04/15/msp432-ru-men-zhi-liu-shui-deng-shi-yan/"/>
    <id>http://yeyuwenxi.github.io/2021/04/15/msp432-ru-men-zhi-liu-shui-deng-shi-yan/</id>
    <published>2021-04-15T15:50:45.000Z</published>
    <updated>2021-04-17T11:46:18.301Z</updated>
    
    <content type="html"><![CDATA[<p>最近在电赛培训网参加活动，中了一块TI的单片机开发板，具体型号为SimpleLink Ethernet MSP432E401Y Microcontroller LaunchPad。<br>这两天打算简单学一学这款单片机。<br>不得不说，网上关于MSP432单片机的资料是真的少，关于MSP432E4的资料更是少的可怜。<br>无奈只能从读TI官方给出的SDK和datasheet开始学习了。</p><h3 id="开发环境的选择"><a href="#开发环境的选择" class="headerlink" title="开发环境的选择"></a>开发环境的选择</h3><p>MSP432可以采用keil,ccs,iar来进行开发，这里我选择了官方主推的ccs来进行学习。<br>从ti的官网下载ccs和MSP432E4的SDK，并将ccs和SDK配置好，之后就可以进行我们的开发了。</p><h3 id="driverlib和tidriver"><a href="#driverlib和tidriver" class="headerlink" title="driverlib和tidriver"></a>driverlib和tidriver</h3><p>关于MSP432，官方的SDK中给出了两大类库，driverlib和tidriver.<br>driverlib更接近底层，能实现的功能也更加的丰富。<br>tidriver更加的抽象，也更容易理解和使用，更重要的是，tidriver可以采用图形化的操作来配置单片机的外设。<br>当然，tidriver的功能可能不是特别的完善，所以有时候也可以调用driverlib中的部分功能或者直接操作寄存器来实现某些功能，不过tidriver和driverlib的某些文件可能会产生冲突，这一点在使用时是需要注意的。</p><h3 id="流水灯实验"><a href="#流水灯实验" class="headerlink" title="流水灯实验"></a>流水灯实验</h3><p>SDK中提供了很多demo，我们可以直接通过导入demo的工程来进行开发，这里我们采用tidriver的工程来进行开发，对于初学者来说，图形化的外设配置相比于代码要容易好多。<br>首先我们打开css,导入一个tidriver库中的demo，随便挑选一个就可以。</p><ul><li>导入工程<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210417_1.png" ></li></ul><p>通过项目管理栏可以看出，工程中主要有两个c文件，main_nortos.c主要负责开发板的初始化启动，启动后跳转到gpiointerrupt.c中的mainThread函数中运行，这里我们不需要进行改动。</p><ul><li>mainnortos.c<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210417_2.png" ></li></ul><p>gpiointertupt.c文件中有一个mainThread函数，我们要在mainThread函数中书写我们需要的用户代码。</p><p>外设的配置<br>打开资源管理栏后缀名为syscfg的配置文件，在其中配置我们需要使用的设备。<br>这里我们配置4个LED灯就可以。</p><ul><li>图形化外设配置<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210417_3.png" ></li></ul><p>保存之后，我们对外设的配置都会保存到ti_driver_config.c(.h)文件中.</p><ul><li>ti_driver_config.h<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210417_4.png" ></li></ul><p>打开interrupt函数，删掉原有代码，编写我们需要的代码。</p><ul><li>interrupt.c<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210417_5.png" ></li></ul><p>点击导航栏进行编译和烧录</p><ul><li>编译和烧录<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210417_6.png" ></li></ul><p>之后，就可以看到板子上的4个LED轮流点亮和熄灭了。</p><ul><li>运行效果<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210417_7.jpg" ></li></ul><h3 id="部分源码"><a href="#部分源码" class="headerlink" title="部分源码"></a>部分源码</h3><p> void delay(){<br>        int i=0;<br>        for(i=0;i&lt;1000000;i++);<br>    }</p><p>void *mainThread(void <em>arg0)<br>{<br>    /</em> Call driver unit functions <em>/<br>    GPIO_init();<br>    /</em> Configure the LED and button pins */<br>    GPIO_setConfig(CONFIG_GPIO_1, GPIO_CFG_OUT_STD | GPIO_CFG_OUT_LOW);<br>    GPIO_setConfig(CONFIG_GPIO_2, GPIO_CFG_OUT_STD | GPIO_CFG_OUT_LOW);<br>    GPIO_setConfig(CONFIG_GPIO_3, GPIO_CFG_OUT_STD | GPIO_CFG_OUT_LOW);<br>    GPIO_setConfig(CONFIG_GPIO_4, GPIO_CFG_OUT_STD | GPIO_CFG_OUT_LOW);<br>    while(1){<br>        delay();<br>        GPIO_toggle(CONFIG_GPIO_1);<br>        delay();<br>        GPIO_toggle(CONFIG_GPIO_2);<br>        delay();<br>        GPIO_toggle(CONFIG_GPIO_3);<br>        delay();<br>        GPIO_toggle(CONFIG_GPIO_4);<br>    }<br>    return (NULL);<br>}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在电赛培训网参加活动，中了一块TI的单片机开发板，具体型号为SimpleLink Ethernet MSP432E401Y Microcontroller LaunchPad。&lt;br&gt;这两天打算简单学一学这款单片机。&lt;br&gt;不得不说，网上关于MSP432单片机的资料是真</summary>
      
    
    
    
    <category term="MSP432单片机" scheme="http://yeyuwenxi.github.io/categories/MSP432%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="单片机" scheme="http://yeyuwenxi.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="MSP432" scheme="http://yeyuwenxi.github.io/tags/MSP432/"/>
    
  </entry>
  
  <entry>
    <title>AD之PCB画板初探</title>
    <link href="http://yeyuwenxi.github.io/2021/04/15/ad-zhi-pcb-hua-ban-chu-tan/"/>
    <id>http://yeyuwenxi.github.io/2021/04/15/ad-zhi-pcb-hua-ban-chu-tan/</id>
    <published>2021-04-15T15:48:19.000Z</published>
    <updated>2021-04-16T11:30:02.636Z</updated>
    
    <content type="html"><![CDATA[<p>最近由于选修课的要求，速成了一波AD，这两天完成了自己的第一个PCB板的绘制。</p><h3 id="任务目标"><a href="#任务目标" class="headerlink" title="任务目标"></a>任务目标</h3><p>1.三个开关控制一盏灯<br>2.使用按钮实现开关的功能</p><h3 id="实验思路"><a href="#实验思路" class="headerlink" title="实验思路"></a>实验思路</h3><p>1.三个开关控制一盏灯，算是比较基础的数电问题了，这里我采用了74LS86（异或门）来实现这一逻辑功能。</p><p>2.按钮实现开关的功能，这一点我上网查资料发现都是采用模拟电路实现的，采用电容充放电实现开关的功能，电路较为复杂，实现原理也较为复杂，这里就不讲了。</p><p>分享一篇文章，有兴趣的可以自己看看<a href="https://baijiahao.baidu.com/s?id=1603206971622118062&wfr=spider&for=pc&qq-pf-to=pcqq.group">点按式轻触开关如何实现自锁轻触开关带锁按键开关功能？</a><br>3.后来想了想，还是采用数字电路实现比较简单，通过JK触发器的电平翻转来实现电路开关的功能，最后通过带JK触发器的74LS109实现了这一功能。</p><h3 id="PCB绘制流程"><a href="#PCB绘制流程" class="headerlink" title="PCB绘制流程"></a>PCB绘制流程</h3><p>1.原理图库的绘制<br>由于官方封装库中的门电路芯片都是只显示部分的，所以这里我自己绘制了74LS86和74LS109芯片的原理图。</p><ul><li>74LS86<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210416_1.png" ></li><li>74LS109<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210416_1.png" ></li></ul><p>2.原理图的绘制</p><ul><li>原理图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210416_4.png" ></li></ul><p><strong>ps:</strong> 经老师提醒，原理图中按钮部分存在问题，TTL芯片悬空时为高电平，所以芯片的CLK端口需要接一个下拉电阻。</p><p>3.PCB封装库的绘制<br>这里偷了点懒，直接采用了TI官方的封装库。</p><ul><li>D014_N封装<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210416_3.png" ></li></ul><p>4.PCB图的绘制</p><p>这一步才算是到了PCB绘制的核心部分。</p><h4 id="器件摆放"><a href="#器件摆放" class="headerlink" title="器件摆放"></a>器件摆放</h4><p>AD会将原理图中用到所有器件直接转移到PCB文件中，我们需要将各个器件以合适的位置摆放好。</p><h4 id="布线"><a href="#布线" class="headerlink" title="布线"></a>布线</h4><p>AD有自动布线功能，但还是推荐手动布线。<br>布线拐角采用钝角，降低电磁干扰。<br>多层板可能需要过孔，将各个板层进行电气连接。</p><h4 id="铺铜"><a href="#铺铜" class="headerlink" title="铺铜"></a>铺铜</h4><p>将没有导线的地方铺铜，提高抗干扰能力。</p><h4 id="丝印"><a href="#丝印" class="headerlink" title="丝印"></a>丝印</h4><p>添加需要的标记符号和个性化定制文字内容。</p><h4 id="版型设计"><a href="#版型设计" class="headerlink" title="版型设计"></a>版型设计</h4><p>对PCB板进行裁剪，打定位孔等操作，推荐矩形版型。</p><ul><li>最后贴上我的第一个PCB板<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210416_5.png" >(空白处有姓名等相关信息，已打码)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近由于选修课的要求，速成了一波AD，这两天完成了自己的第一个PCB板的绘制。&lt;/p&gt;
&lt;h3 id=&quot;任务目标&quot;&gt;&lt;a href=&quot;#任务目标&quot; class=&quot;headerlink&quot; title=&quot;任务目标&quot;&gt;&lt;/a&gt;任务目标&lt;/h3&gt;&lt;p&gt;1.三个开关控制一盏灯&lt;br&gt;</summary>
      
    
    
    
    <category term="PCB" scheme="http://yeyuwenxi.github.io/categories/PCB/"/>
    
    
    <category term="PCB" scheme="http://yeyuwenxi.github.io/tags/PCB/"/>
    
    <category term="数字电路" scheme="http://yeyuwenxi.github.io/tags/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>博客域名大赏</title>
    <link href="http://yeyuwenxi.github.io/2021/04/15/bo-ke-yu-ming-da-shang/"/>
    <id>http://yeyuwenxi.github.io/2021/04/15/bo-ke-yu-ming-da-shang/</id>
    <published>2021-04-15T15:04:27.000Z</published>
    <updated>2021-04-15T15:39:15.388Z</updated>
    
    <content type="html"><![CDATA[<p>这个博客从最开始在gitee上搭建，到github上搭建，又到vercel上托管，前前后后变换了好几个平台，也搞出了好多个域名。<br>今天写个记录，记录一下这些域名。</p><h3 id="gitee-版"><a href="#gitee-版" class="headerlink" title="gitee 版"></a>gitee 版</h3><p>1.<a href="https://yeyuwenxi.gitee.io/">https://yeyuwenxi.gitee.io/</a><br>gitee的主要问题有两个，一是不能自动更新，而是首页图标的显示存在问题，与github双部署时无法同时正常显示</p><h3 id="github版"><a href="#github版" class="headerlink" title="github版"></a>github版</h3><p>2.<a href="https://yeyuwenxi.github.io/%EF%BC%88%E8%AE%BF%E9%97%AE%E6%97%B6%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AC%E5%88%B03%EF%BC%89">https://yeyuwenxi.github.io/（访问时自动跳转到3）</a><br>3.<a href="https://yeyuwenxi.xyz/%EF%BC%88%E4%B8%BB%E7%AB%99%E7%82%B9%EF%BC%89">https://yeyuwenxi.xyz/（主站点）</a></p><h3 id="vercel加速版"><a href="#vercel加速版" class="headerlink" title="vercel加速版"></a>vercel加速版</h3><p>4.<a href="https://yeyuwenxi.vercel.app/%EF%BC%88%E5%B7%B2%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B07%EF%BC%89">https://yeyuwenxi.vercel.app/（已重定向到7）</a><br>5.<a href="https://yeyuwenxi-github-io-2551676400-qqcom.vercel.app/">https://yeyuwenxi-github-io-2551676400-qqcom.vercel.app/</a><br>6.<a href="https://yeyuwenxi-github-io-git-master-2551676400-qqcom.vercel.app/">https://yeyuwenxi-github-io-git-master-2551676400-qqcom.vercel.app/</a><br>7.<a href="https://blog.yeyuwenxi.xyz/">https://blog.yeyuwenxi.xyz/</a><br>不得不说，vercel托管后，域名是真的多</p><h3 id="关于域名解析服务器"><a href="#关于域名解析服务器" class="headerlink" title="关于域名解析服务器"></a>关于域名解析服务器</h3><p>yeyuwenxi.xyz的域名服务器在腾讯云<br>blog.yeyuwenxi.xyz的域名服务器在vercel</p><h3 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h3><p>目前并没有感觉vercel比github pages快多少</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这个博客从最开始在gitee上搭建，到github上搭建，又到vercel上托管，前前后后变换了好几个平台，也搞出了好多个域名。&lt;br&gt;今天写个记录，记录一下这些域名。&lt;/p&gt;
&lt;h3 id=&quot;gitee-版&quot;&gt;&lt;a href=&quot;#gitee-版&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="博客搭建" scheme="http://yeyuwenxi.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="博客搭建" scheme="http://yeyuwenxi.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法学习笔记</title>
    <link href="http://yeyuwenxi.github.io/2021/04/12/markdown-yu-fa-xue-xi-bi-ji/"/>
    <id>http://yeyuwenxi.github.io/2021/04/12/markdown-yu-fa-xue-xi-bi-ji/</id>
    <published>2021-04-12T05:58:22.000Z</published>
    <updated>2021-04-15T11:06:33.674Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。<br>个人认为，Markdown可以看做xml,html的简化版，非常适合用来纯文本编辑。<br>好了，下面直接进入语法部分。</p><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><p>markdown使用#来表示标题,支持六级标题<br>示例：<br><code># 一</code><br><code>## 二</code><br><code>### 三</code><br><code>#### 四</code><br><code>##### 五</code><br><code>###### 六</code></p><p>显示效果：</p><h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><h4 id="四"><a href="#四" class="headerlink" title="四"></a>四</h4><h5 id="五"><a href="#五" class="headerlink" title="五"></a>五</h5><h6 id="六"><a href="#六" class="headerlink" title="六"></a>六</h6><p>注意：#和文字之间要加1个空格</p><h3 id="2-超链接"><a href="#2-超链接" class="headerlink" title="2.超链接"></a>2.超链接</h3><p>示例：<br><code> [百度](baidu.com)</code><br>显示效果：<br><a href="baidu.com">百度</a></p><p><strong>此外，也可使用html风格的写法</strong><br>示例：<br><code>&lt;a href=&quot;baidu.com&quot;&gt;百度 &lt;/a&gt;</code><br>显示效果：<br><a href="baidu.com">百度 </a></p><h3 id="3-图片"><a href="#3-图片" class="headerlink" title="3.图片"></a>3.图片</h3><h4 id="3-1"><a href="#3-1" class="headerlink" title="3.1"></a>3.1</h4><p>示例：<br><code>![图片名称](https://www.baidu.com/img/flexible/logo/pc/result.png)</code><br>显示效果：<br><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" alt="图片名称"></p><p><strong>此外，也可使用html风格的写法</strong><br>示例：<br><code>&lt;img src=&quot;https://www.baidu.com/img/flexible/logo/pc/result.png&quot;&gt;</code><br>显示效果：<br><img src="https://www.baidu.com/img/flexible/logo/pc/result.png"></p><h4 id="3-2-设置图片的大小"><a href="#3-2-设置图片的大小" class="headerlink" title="3.2 设置图片的大小"></a>3.2 设置图片的大小</h4><p>示例：<code>&lt;img src=&quot;https://www.baidu.com/img/flexible/logo/pc/result.png&quot;      width=&quot;10%&quot; height=&quot;10%&quot;&gt;</code><br>显示效果：<img src="https://www.baidu.com/img/flexible/logo/pc/result.png" width="10%" height="10%" ></p><h4 id="3-3-设置图片居中显示"><a href="#3-3-设置图片居中显示" class="headerlink" title="3.3 设置图片居中显示"></a>3.3 设置图片居中显示</h4><h3 id="4-代码块"><a href="#4-代码块" class="headerlink" title="4.代码块"></a>4.代码块</h3><h4 id="4-1单行代码"><a href="#4-1单行代码" class="headerlink" title="4.1单行代码"></a>4.1单行代码</h4><p>使用英文反顿号”<code> </code>“表示单行代码<br>示例：<br>显示效果：123</p><h4 id="4-2多行代码"><a href="#4-2多行代码" class="headerlink" title="4.2多行代码"></a>4.2多行代码</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。&lt;br&gt;个人认为，Markdown可以看做xml,html的简化版，非常适合用来纯文本编辑。&lt;br&gt;好了，下面直接进入语法部分。&lt;/p&gt;
&lt;h3</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://yeyuwenxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://yeyuwenxi.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Markdown" scheme="http://yeyuwenxi.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Matlab实现简单的语音信号处理</title>
    <link href="http://yeyuwenxi.github.io/2021/04/12/matlab-shi-xian-jian-dan-de-yu-yin-xin-hao-chu-li/"/>
    <id>http://yeyuwenxi.github.io/2021/04/12/matlab-shi-xian-jian-dan-de-yu-yin-xin-hao-chu-li/</id>
    <published>2021-04-12T05:06:02.000Z</published>
    <updated>2021-04-12T05:50:19.903Z</updated>
    
    <content type="html"><![CDATA[<p>学习数字信号处理课程时做过的一个实验。</p><h3 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h3><p>  1.学习并掌握数字信号处理的基本方法。<br>  2.学会使用MATLAB对语音信号进行处理。<br>  3.学习并掌握MATLAB设计滤波器的方法。</p><h3 id="二、实验内容"><a href="#二、实验内容" class="headerlink" title="二、实验内容"></a>二、实验内容</h3><p>   本次实验基于MATLAB R2019a完成，利用MATLAB对录制的语音信号进行了读取，播放，时域分析，频域分析以及滤波处理等操作。<br>   本次实验主要包括以下几个步骤：<br>1.音频的录制与导入<br>    使用手机自带的录音软件录制了格式为wav的一段语音信号。录音完成后，使用MATLAB的audioread函数对语音信号进行采样。<br>2.语音信号的时域分析和频域分析<br>    使用plot函数绘制语音信号的时域波形，对语音信号进行快速傅里叶变换，并绘制出语音信号的频域波形。<br>    <img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_1.jpg" width="60%" height="60%"><br>3.设计滤波器对语音信号进行处理<br>（1）低通滤波器的设计<br>利用buttord和butter函数设计一个模拟巴特沃斯低通滤波器，并利用bilinear函数采用双线性变换法将该滤波器转换为数字低通滤波器。<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_2.jpg" width="60%" height="60%"><br>低通滤波器处理后的信号<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_3.jpg" width="60%" height="60%"><br>（2）高通滤波器的设计<br>利用buttord和butter函数设计一个模拟巴特沃斯高通滤波器，并利用bilinear函数采用双线性变换法将该滤波器转换为数字高通滤波器。<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_4.jpg" width="60%" height="60%"><br>高通滤波器处理后的信号<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_5.jpg" width="60%" height="60%"><br>（3）陷波器的设计<br>根据陷波器的表达式配置参数，设计陷波器如下图所示<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_6.jpg" width="60%" height="60%"><br>使用陷波器处理后的频谱<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_7.jpg" width="60%" height="60%"><br>（4）对语音信号加噪<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210412_8.jpg" width="60%" height="60%"></p><h3 id="三、实验代码"><a href="#三、实验代码" class="headerlink" title="三、实验代码"></a>三、实验代码</h3><p>[x,fs]=audioread(‘yuyin.wav’);%录入语音信号<br>n=length(x);%获取语音信号的长度<br>x_p=fft(x,n);%利用FFT算法对语音信号进行离散傅里叶变换<br>f=fs*(0:n-1)/n;%频率的归一化<br>figure(1);%绘制时域和频域波形<br>subplot(2,1,1);<br>plot(x);<br>title(‘原始语音信号采样后的时域波形’);<br>xlabel(‘时间轴’)<br>ylabel(‘幅值A’)<br>subplot(2,1,2);<br>plot(f,abs(x_p));<br>title(‘原始语音信号采样后的频谱图’);<br>xlabel(‘频率Hz’);<br>ylabel(‘频率幅值’);<br>%噪声<br>% noise=0.2<em>randn(1,n);<br>% x_z=x+noise’;<br>% sound(x_z,fs);<br>% n=length(x);<br>% x_zp=fft(x_z,n);<br>% f=fs</em>(0:n/2-1)/n;<br>% figure(5);<br>% subplot(2,1,1);<br>% plot(x_z);<br>% title(‘加噪语音信号时域波形’);<br>% xlabel(‘时间轴’)<br>% ylabel(‘幅值A’)<br>% subplot(2,1,2);<br>% plot(f,abs(x_zp(1:n/2)));<br>% title(‘加噪语音信号频谱图’);<br>% xlabel(‘频率Hz’);<br>% ylabel(‘频率幅值’);<br>% %低通滤波器<br>fp=800;fs=1300;rs=35;rp=0.5;Fs=44100;<br>wp=2<em>Fs</em>tan(2<em>pi</em>fp/(2<em>Fs));%预畸<br>ws=2</em>Fs<em>tan(2</em>pi<em>fs/(2</em>Fs));<br>[n,wn]=buttord(wp,ws,rp,rs,’s’);<br>[b,a]=butter(n,wn,’s’);<br>[num,den]=bilinear(b,a,Fs);%双线性变换法  模拟滤波器转数字滤波器<br>[h,w]=freqz(num,den,512,Fs);<br>% 512为点数 Fs为频率范围<br>figure(2)<br>plot(w,abs(h));<br>xlabel(‘频率/Hz’);ylabel(‘幅值’);<br>title(‘巴特沃斯低通滤波器幅度特性’);<br>axis([0,5000,0,1.2]);<br>grid on;%网格线<br>%高通滤波器<br>% fp=3800;fs=3300;rs=3;rp=0.5;Fs=44100;<br>% wp=2<em>Fs</em>tan(2<em>pi</em>fp/(2<em>Fs));%预畸<br>% ws=2</em>Fs<em>tan(2</em>pi<em>fs/(2</em>Fs));<br>% [n,wn]=buttord(wp,ws,rp,rs,’s’);<br>% [b,a]=butter(n,wn,’high’,’s’);<br>% [num,den]=bilinear(b,a,Fs);%双线性变换法  模拟滤波器转数字滤波器<br>% [h,w]=freqz(num,den,512,Fs);<br>% % 512为点数 Fs为频率范围<br>% figure(2)<br>% plot(w,abs(h));<br>% xlabel(‘频率/Hz’);ylabel(‘幅值’);<br>% title(‘巴特沃斯高通滤波器幅度特性’);<br>% axis([0,5000,0,1.2]);<br>% grid on;%网格线<br>%陷波器<br>% f0=3000;Fs=44100;r=0.9;<br>% w0=2<em>pi</em>f0/Fs;<br>% num=[1 -2<em>cos(w0) 1];<br>% den=[1 -2</em>r<em>cos(w0) r</em>r];<br>% N=1024;<br>% [H,w]=freqz(num,den,N);<br>% plot(w/pi/2<em>Fs,abs(H));<br>% grid on;<br>% title(‘陷波器的幅频响应’);<br>% [s1,Fs]=audioread(‘yuyin.wav’);<br>% %x1=s1(:,1);%选取一个声道的数据<br>% x1=s1;<br>% %sound(x1,Fs);<br>% N1=length(x1);<br>% Y1=fft(x1,N1);<br>% f1=Fs</em>(0:N1-1)/N1;<br>% %t1=(0:N1-1)/Fs;<br>% figure(3)<br>% plot(f1,abs(Y1))<br>% xlabel(‘频率/Hz’);ylabel(‘幅度’);<br>% title(‘原始信号频谱’);<br>% grid on;axis([0 50000 0 600])<br>y=filter(num,den,x);<br>%sound(y,Fs);<br>N2=length(y);<br>Y2=fft(y,N2);<br>f2=Fs*(0:N2-1)/N2;<br>%t2=(0:N2-1)/Fs;<br>figure(4)<br>plot(f2,abs(Y2))<br>xlabel(‘频率/Hz’);ylabel(‘幅度’);<br>title(‘过滤后信号的频谱’);<br>grid on;<br>axis([0 50000 0 600])</p><h3 id="四、实验总结"><a href="#四、实验总结" class="headerlink" title="四、实验总结"></a>四、实验总结</h3><p>分析语音信号的频谱图可以看出，有效的语音信号主要集中在0到4000Hz之间，根据奈奎斯特定理，最低的采样频率为8000Hz.观察滤波前后语音信号频谱的变化，可以看出滤波器按要求处理了语音信号，本次实验顺利完成。<br>总的来说，通过这次实验我收获了很多，对matlab有了更加深入的认识，了解到了如何利用matlab的各种函数对语音信号进行处理，这次实验也加深了我对离散傅里叶变换和滤波器设计的理解，巩固了课堂上所学到的知识，也让我看到了自己所学的知识在生活中的应用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习数字信号处理课程时做过的一个实验。&lt;/p&gt;
&lt;h3 id=&quot;一、实验目的&quot;&gt;&lt;a href=&quot;#一、实验目的&quot; class=&quot;headerlink&quot; title=&quot;一、实验目的&quot;&gt;&lt;/a&gt;一、实验目的&lt;/h3&gt;&lt;p&gt;  1.学习并掌握数字信号处理的基本方法。&lt;br&gt;  </summary>
      
    
    
    
    <category term="Matlab" scheme="http://yeyuwenxi.github.io/categories/Matlab/"/>
    
    
    <category term="Matlab" scheme="http://yeyuwenxi.github.io/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>读《嘉莉妹妹》</title>
    <link href="http://yeyuwenxi.github.io/2021/04/12/du-jia-li-mei-mei/"/>
    <id>http://yeyuwenxi.github.io/2021/04/12/du-jia-li-mei-mei/</id>
    <published>2021-04-12T04:54:13.000Z</published>
    <updated>2021-04-12T04:59:57.918Z</updated>
    
    <content type="html"><![CDATA[<p>大二时英文选修课写的一篇小论文，这里是中文版，内容有所删减。</p><p>西奥多·德莱塞，美国伟大的现实主义作家。他的父亲是贫苦的德国移民，家里有很多的孩子，一家人生活很是拮据。德莱赛一生的大部分时间从事新闻工作，他走遍芝加哥、匹兹堡、纽约等大城市，广泛深入地观察了解社会，对资本主义制度有了很深的认识，为日后的文学创作积累了丰富的素材。</p><p>《嘉莉妹妹》是德莱赛的第一部著作，描写了农村姑娘嘉莉来到大城市芝加哥寻找幸福，为摆脱贫困，出卖自己的贞操，先后与推销员和酒店经理同居，后又凭美貌与表演才能成为演员而后走红的故事。其中，嘉莉私奔的情节来源于德莱赛妹妹的真实生活经历，他的妹妹曾跟一个偷钱潜逃的酒店经理私奔。</p><p>嘉莉是一个年轻的，纯朴的，没有经验的农村小姑娘，为了追求幸福的生活来到了大城市芝加哥。</p><p>正如作者在开篇时所写到的，一个年轻的没有经验的来自乡下的小姑娘来到大城市时，通常只有两种可能，得到善良的帮助而成为更好的人，或者被物质的诱惑影响而堕落。</p><p>很遗憾，嘉莉没有遇到能够真正在精神上帮助她的人，她的姐姐以及她的两个情人都不是那样的人，他们所教给嘉莉的，只有对物欲和名利的追求，只有物质至上的幸福观。在他们的影响下，嘉莉对上层社会，充盈的物质生活有了极大的渴望，她要拼劲全力地挤进那个社会，去享受物质上的快感与愉悦。对物欲的追求，让嘉莉迷失了初心，虚荣感让她放弃了一个人身上最淳朴的品质，就这样，嘉莉为了富裕的生活而两次出卖自己的贞操。</p><p>在德莱赛的那个时代，在垄断资本主义盛行的社会背景下，很难出现那样能给嘉莉以正确引导的人，每个人都在为自己的各种欲望而奔波。</p><p>嘉莉早期求职的过程也充分说明，在那个充满压迫，充满剥削的时代里，一个底层的普通人，靠自己的努力和勤奋是难以实现梦想的，是没有真正意义上的出路的，残酷的生活压迫着每一个普通人。</p><p>嘉莉靠美貌和运气以及出卖贞操走向了成功，而许许多多的平凡的人却只能在社会的底层不断地挣扎，承受着这个社会带给他们的苦难。从另一方面来说，获得成功的嘉莉也没有拥有真正意义上的快乐，与她相伴的只有内心的孤苦与空虚。无论成功与否，嘉莉都是痛苦的，物质上的满足并没有带给嘉莉真正的幸福感。</p><p>嘉莉正是作者所处那个时代的一个缩影，作者借嘉莉的视角，展现了资本主义带给人的种种苦难，揭露了资本主义社会的弊端，批判了金钱至上，物欲横流的社会现状。</p><p>在一个病态的资本主义社会里，在物质至上的时代里，是没有真正的幸福可言的。我想，这正是作者想要告诉我们的东西，一个人哪怕有了物质上的充盈，也会因为精神上的匮乏而陷入空虚。这一点对现在的我们也是适用的，我们不能陷于物质的牢笼而忽略了那些精神上值得我们去追寻的东西，不能为了自己的虚荣与欲望而放弃那些珍贵的有价值的道德品质。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大二时英文选修课写的一篇小论文，这里是中文版，内容有所删减。&lt;/p&gt;
&lt;p&gt;西奥多·德莱塞，美国伟大的现实主义作家。他的父亲是贫苦的德国移民，家里有很多的孩子，一家人生活很是拮据。德莱赛一生的大部分时间从事新闻工作，他走遍芝加哥、匹兹堡、纽约等大城市，广泛深入地观察了解社会</summary>
      
    
    
    
    <category term="读书" scheme="http://yeyuwenxi.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
    <category term="读书" scheme="http://yeyuwenxi.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>单片机温度、压力信息采集与电机控制系统</title>
    <link href="http://yeyuwenxi.github.io/2021/04/11/dan-pian-ji-wen-du-ya-li-xin-xi-cai-ji-yu-dian-ji-kong-zhi-xi-tong/"/>
    <id>http://yeyuwenxi.github.io/2021/04/11/dan-pian-ji-wen-du-ya-li-xin-xi-cai-ji-yu-dian-ji-kong-zhi-xi-tong/</id>
    <published>2021-04-11T13:58:06.000Z</published>
    <updated>2021-04-11T14:52:40.456Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>本次单片机温度、压力信息采集与电机控制系统实验是基于模数转换，数模转换，LCD显示，键盘扫描，脉冲控制等知识的一个综合性的实验模块。<br>本次实验作品主要包括温度的采集与显示，压力的采集与显示，步进电机的驱动与控制三个模块。<br>温度的采集采用DS18B20模块，DS18B20采集温度后将温度转换为数字量并将数字量通过串行通信的方式发送给单片机。压力的采集采用称重传感器和HX711模块，HX711可将称重传感器的小信号放大并转换为数字量，最后再通过串行通信的方式将数字量传送给单片机。单片机处理完HX711和DS18B20的数据后，将压力值和温度值显示再LCD1602上。步进电机模块采用了一个四相五线的步进电机和一个ULN2003A驱动板，单片机连接驱动板，驱动板放大单片机的脉冲信号后驱动步进电机转动。<br>本次实验的硬件部分主要包括单片机最小系统，LCD1602显示屏，DS18B20测温模块，步进电机和驱动板以及称重传感器和HX711模块。</p><h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3><p>1.准备电路元器件及焊接工具：STC89C52RC芯片1个、IC插座、40p排针2个、12MHz晶振1个、30pF瓷片电容2个、10uF电解电容1个、排阻一个、电阻若干、LCD1602A显示屏1个、称重传感器1个、HX711模块1个、DS18B20模块1个、步进电机1个、ULN2003A驱动板1个、蜂鸣器1个、10*15cm洞洞板一个、电源线、杜邦线、下载器、电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接。<br>3.调试：下载程序，将单片机系统与各个模块相连，观察LCD是否正常显示压力、温度等信息，若正常显示，说明压力，温度模块正常，按动按键，观察步进电机是否随按键控制正常转动，若转动正常，说明步进电机模块正常。 </p><ul><li>焊接成果图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_12.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写。<br>2.设计仿真电路图：将电源、时钟电路、复位电路、51单片机、DS18B20模块、称重传感器模块、HX711模块及LCD1602显示屏正确连接。电源选用+5v，晶振选用12MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否能达到目标要求。</p><ul><li>编程<br>ORG 0000H<br>//接口初始化<br>DOUT EQU P2.2<br>SCK EQU P2.3</li></ul><p>RS EQU P2.5<br>RW EQU P2.6<br>E EQU P2.7 </p><p>DQ EQU P2.4<br>GEWEI1 EQU 35H<br>SHIWEI1 EQU 36H</p><p>QIAN EQU 31H<br>BAI EQU 32H<br>SHI EQU 33H<br>GEWEI EQU 34H</p><p>FENGMING EQU P3.7<br>LJMP MAIN</p><p>ORG 000BH<br>LJMP IT00 //中断入口<br>ORG 0100H<br>MAIN:<br>MOV P0,#00000001B<br>ACALL ENABLE<br>MOV P0,#00111000B<br>ACALL ENABLE<br>MOV P0,#00001100B<br>ACALL ENABLE<br>MOV P0,#00000110B<br>ACALL ENABLE<br>MOV P0,#80H<br>ACALL ENABLE<br>MOV P0,#’W’<br>ACALL WRITELCD</p><p>MOV P0,#’E’<br>ACALL WRITELCD</p><p>MOV P0,#’N’<br>ACALL WRITELCD</p><p>MOV P0,#’D’<br>ACALL WRITELCD</p><p>MOV P0,#’U’<br>ACALL WRITELCD</p><p>MOV P0,#’:’<br>ACALL WRITELCD<br>MOV P0,#0C0H<br>ACALL ENABLE</p><p>MOV P0,#’Y’<br>ACALL WRITELCD<br>MOV P0,#’A’<br>ACALL WRITELCD<br>MOV P0,#’L’<br>ACALL WRITELCD<br>MOV P0,#’I’<br>ACALL WRITELCD<br>MOV P0,#’:’<br>ACALL WRITELCD</p><p>MOV P0,#0C9H<br>ACALL ENABLE</p><p>MOV P0,#’g’<br>ACALL WRITELCD<br>MOV 40H,#00H</p><p>MOV TMOD,#01H<br>MOV TH0,#3CH<br>MOV TL0,#0B0H<br>SETB EA<br>SETB ET0<br>SETB TR0</p><p>ACALL DIANJI<br>LJMP MAIN<br>IT00:<br>INC 40H<br>MOV A,40H<br>CJNE A,#3AH,L11</p><p>L10: MOV 40H,#00H<br>ACALL AD</p><p>L11:MOV TH0,#3CH<br>MOV TL0,#0B0H<br>RETI<br>AD:<br>ACALL READTEM<br>ACALL YALI</p><p>ACALL XIANSHI</p><p>MOV P0,#86H<br>ACALL ENABLE<br>MOV P0,SHIWEI1<br>ACALL WRITELCD<br>MOV P0,#87H<br>ACALL ENABLE<br>MOV P0,GEWEI1<br>ACALL WRITELCD</p><p>CLR C<br>MOV A,#00H<br>SUBB A,GEWEI1<br>MOV A,#03H<br>SUBB A,SHIWEI1<br>JNC L12<br>CLR P3.7<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>ACALL DELAY1<br>SETB P3.7<br>L12:<br>MOV P0,#0C5H<br>ACALL ENABLE<br>MOV P0,QIAN<br>ACALL WRITELCD<br>MOV P0,#0C6H<br>ACALL ENABLE<br>MOV P0,BAI<br>ACALL WRITELCD<br>MOV P0,#0C7H<br>ACALL ENABLE<br>MOV P0,SHI<br>ACALL WRITELCD<br>MOV P0,#0C8H<br>ACALL ENABLE<br>MOV P0,GEWEI<br>ACALL WRITELCD</p><p>RET<br>//步进电机<br>DIANJI:<br>MOV 38H,#00H<br>JNB P3.0,START1<br>JNB P3.1,START2<br>JNB P3.2,START3</p><p>LJMP DIANJI<br>START1:<br>MOV DPTR,#TABLE1<br>LJMP LOOP<br>START2:<br>MOV DPTR,#TABLE2<br>LJMP LOOP<br>START3:<br>MOV DPTR,#TABLE3<br>LJMP LOOP<br>LOOP:<br>MOV A,38H<br>MOVC A,@A+DPTR<br>MOV P1,A<br>LCALL DELAY1<br>INC 38H<br>MOV A,38H<br>CJNE A,#08H,LOOP</p><p>JNB P3.0,L1<br>JNB P3.1,L1<br>JNB P3.2,L1<br>MOV 38H,#00H<br>LJMP LOOP<br>L1:<br>LJMP DIANJI<br>RET</p><p>DELAY1:MOV R5,#25  //步进电机的延时<br>DEL1:MOV R6,#50<br>     DJNZ R6,$<br>     DJNZ R5,DEL1<br>     RET<br>//步进电机码表<br>TABLE1:<br>DB 02H,06H,04H,0CH,08H,09H,01H,03H<br>TABLE2:<br>DB 03h,01H,09H,08H,0CH,04H,06H,02H<br>TABLE3:<br>DB 00H,00H,00H,00H,00H,00H,00H,00H</p><p>//温度传感器</p><p>READTEM:</p><p>ACALL RST</p><p>MOV R1,#30<br>DJNZ R1,$<br>MOV A,#0CCH<br>ACALL WRITE<br>MOV A,#44H<br>ACALL WRITE<br>ACALL RST<br>MOV R1,#30<br>DJNZ R1,$<br>MOV A,#0CCH<br>ACALL WRITE<br>MOV A,#0BEH<br>ACALL WRITE</p><p>ACALL READ<br>MOV 30H,A     ;读低八位<br>ACALL READ<br>MOV 31H,A       ;读高八位</p><p>ANL 30H,#0F0H<br>ANL 31H,#0FH<br>MOV A,30H<br>ORL A,31H<br>SWAP A</p><p>MOV R3,A</p><p>MOV B,#10<br>DIV AB<br>ADD A,#30H<br>MOV SHIWEI1,A<br>MOV A,B<br>ADD A,#30H<br>MOV GEWEI1,A<br>RET</p><p>RST:SETB DQ                       ;  总线释放<br>      NOP                           ;  保持高电平，延时<br>      CLR DQ                    ;  总线置 0，请求响应<br>      MOV R0,#0FBH<br>TSR1: DJNZ R0,TSR1                    ;  延时<br>      SETB DQ                        ;  再释放<br>      MOV R0,#25H<br>TSR2: JNB DQ,TSR3                    ;  改变为 0，则代表得到对应<br>      DJNZ R0,TSR2                ;  未得到则继续等待，判断<br>TSR3:                     ;  得到相应则标志位置 1，代表传感器正常存在<br>      MOV R0,#06BH<br>TSR4: DJNZ R0,TSR4                    ;  延时<br>      SETB DQ<br>RET</p><p>WRITE:MOV R0,#8<br>LOOP1:<br>CLR C<br>CLR DQ</p><p>RRC A<br>MOV R1,#6<br>DJNZ R1,$<br>MOV DQ,C<br>MOV R1,#23<br>DJNZ R1,$<br>SETB DQ<br>NOP</p><p>DJNZ R0,LOOP1<br>SETB DQ<br>MOV R1,#05<br>DJNZ R1,$<br>RET</p><p>READ:;<br>MOV R0,#8<br>LOOP2:<br>CLR C<br>SETB DQ<br>NOP<br>NOP<br>CLR DQ<br>NOP<br>NOP<br>NOP<br>SETB DQ<br>MOV R1,#7<br>DJNZ R1,$<br>MOV C,DQ<br>RRC A<br>MOV R1,#23<br>DJNZ R1,$</p><p>DJNZ R0,LOOP2<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY2<br>SETB E<br>RET<br>WRITELCD:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY2<br>SETB E<br>RET</p><p>DELAY2:<br>MOV R4,#200<br>D1:MOV R5,#200<br>D2:DJNZ R5,D2<br>DJNZ R4,D1<br>RET</p><p>//压力传感器<br>YALI:</p><p>CLR SCK<br>JB DOUT,$<br>MOV R0,#24<br>LOOP3:<br>SETB SCK<br>NOP<br>CLR SCK<br>MOV C,DOUT</p><p>XCH A,R4<br>RLC A<br>XCH A,R4        //低八位<br>XCH A,R3<br>RLC A<br>XCH A,R3      //中八位<br>XCH A,R2<br>RLC A<br>XCH A,R2  //高八位</p><p>DJNZ R0,LOOP3</p><p>SETB SCK<br>NOP<br>CLR SCK              ;采集部分到此结束</p><p>RET</p><p>ZHUANHUAN:<br>NDIV31:<br>    MOV A,R2<br>    MOV B,R7<br>    DIV AB<br>    PUSH ACC<br>    MOV R2,B<br>    MOV B,#10H<br>NDV311:<br>    CLR C<br>    MOV A,R4<br>    RLC A<br>    MOV R4,A<br>    MOV A,R3<br>    RLC A<br>    MOV R3,A<br>    MOV A,R2<br>    RLC A<br>    MOV R2,A<br>    MOV F0,C<br>    CLR C<br>    SUBB A,R7<br>    JB F0,NDV312<br>    JC NDV313<br>NDV312:<br>    MOV R2,A<br>    INC R4<br>NDV313:<br>    DJNZ B,NDV311<br>    POP ACC<br>    ;CLR OV<br>    JZ NDV314<br>    ;SETB OV<br>NDV314:<br>    XCH A,R2<br>    MOV R7,A<br>RET</p><p>XIANSHI:<br>MOV A,R2<br>XRL A,#80H<br>MOV R2,A</p><p>MOV R7,#40<br>LCALL ZHUANHUAN</p><p>MOV R7,#10<br>LCALL ZHUANHUAN//到此温度转换结束</p><p>//去皮，减去初始重量<br>MOV R0,#04H<br>L3:CLR C<br>MOV A,R4<br>SUBB A,#208<br>MOV R4,A<br>JC JIAN<br>LJMP L2<br>JIAN:DEC R3<br>L2:DJNZ R0,L3</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV GEWEI,A</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV SHI,A</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV BAI,A</p><p>MOV R7,#10<br>LCALL ZHUANHUAN<br>MOV A,R7<br>ADD A,#30H<br>MOV QIAN,A</p><p>RET</p><p>END</p><p>*Proteus 仿真电路图<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_13.jpg" ></p><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3><p>相比于之前的几次实验，这次的实验难度明显要高出一个数量级。从拿到实验方案开始，每一步都充满了许多问题，光是确立实验的基本方案和实验器件的选取就花费了好长时间。经过反复的筛选、比较，温度传感器选择了12位精度的DS18B20，蜂鸣器选择了有源的蜂鸣器，最麻烦的还是压力传感器的选取了，在反复查找信息之后，我简单地罗列出了三套方案：<br>1.使用压片传感器加上一个电压转换模块和ADC0809来完成压力的测试。压片传感器将压力值转换为电阻值，电压转换模块再将电阻值转换为电压值，最后再由ADC0809将电压值转换为数字量，送交单片机处理。<br>2.使用称重传感器和小信号放大芯片以及ADC0809芯片来实现。称重传感器将压力值转换为一个电压值，信号放大芯片将这个电压值放大到ADC0809可以处理的状态，最后由ADC0809将数字量送交给单片机。<br>3.使用称重传感器加上一个HX711芯片来实现。HX711是一个自带增益的AD芯片，可以放大称重传感器产生的电压值并将它转换为数字量，最后HX711通过串行通信的方式将数字量传送给单片机。<br>反复考虑各个方案的实用性，精度，稳定性以及可实现性之后，我选择了第三个方案，通过HX711来实现本次的压力测量。<br>本次实验模块在硬件的焊接上并没有遇到太大的问题，最大的难点还是在程序的编写和仿真的实现上。<br>相对来说，步进电机的程序编写还是比较简单的，通过调制脉冲来驱动步进电机的转动，仿真的演示也没有遇到什么困难。但在进行实物制作的时候还是遇到了一些问题，明明仿真可以执行的程序，但在实物里步进电机就是无法转动，经过反复排查，发现原来是程序的延时存在问题，修改了延时之后，步进电机终于开始了转动。<br>DS18B20是一个具有12位精度的温度采集模块，DS18B20的时序相对来说比较复杂，在编写汇编程序的时候，我上网查找了很多资料，分析了好多时序图，也在这个过程中认识到了时序对于单片机程序的重要性。在DS18B20的实物实现时，也遇到了仿真时没有遇到的问题，后来发现原来是晶振的问题，更换晶振之后，DS18B20也终于正常读取显示了温度。<br>最麻烦的还是HX711模块的使用了，HX711模块是一个高精度的24位的自带增益的AD模块，可以将模拟量转换为数字量之后以串行通信的方式发送给单片机。由于51单片机一次只能处理8位数据，所以24位的数据必须读取到3个寄存器中来处理，而且HX711读取的的数值必须要做一个除法才能得到压力值，这样就特别的麻烦，我花时间最长的地方也是在这里，经过反复地查找资料，不断修改自己的程序，最后通过移位相减的方法把HX711的数据给处理了。最后做出的实物总有一个不为零的初始值，经过反复考虑，我觉得是传感器本身所造成的，最后通过把所有的压力值都减去这一个初始值，获得了真实的重量。</p><p>在三个模块都各自制作完毕，没有什么问题之后，我试着把这三个模块综合起来。温度和压力模块都通过不断扫描，反复执行的方法结合在了一起，但是在结合步进电机的时候遇到了麻烦，如果把温度和压力模块直接嵌入到步进电机的程序中，步进电机的转动就会产生问题。经过反复思索后，我写了一个定时中断的程序，把步进电机的程序放在了主程序中，而把温度和压力扫描的程序放在了中断中，这样每隔一段时间，单片机就会扫描显示一次温度和压力值，而在其他时间，都在扫描按键，执行步进电机的程序。最终，通过这样一个中断，终于把几个模块完美地结合在了一起。 </p><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p> 本次实验模块的设计与制作相比之前的三个实验确实难了好多，自己花费的时间也长了好多，在整个模块的制作过程中前前后后遇到了好多困难，但自己在不断克服困难的过程中也得到了很大的提高与成长。<br>从实验方案的设计，实验器件的选取，汇编语言的编写，到仿真的演示和实物的实现，每一步充满了各种挫折和困顿。第一次自己接到一个只有题目，没有例子的方案，从零开始设计制作，每一步都比之前的实验难了很多。中间好多时候都感到很沮丧，甚至都不太想做了，整个人状态就很不好，尤其是写代码的时候，反反复复，改来改去就是得不到想要的结果，甚至有时候都不想用汇编了，想之间拿c语言把这个程序给写了。但是自己还是逐渐地调整状态，慢慢地解决了一个又一个问题，最终用汇编语言完成了整个实验模块。最终完成的时候，看着整个四五百行的汇编程序，就觉得特别有成就感。<br>写代码和做实物的过程中虽然遇到过很多挫败，也有过很多心情沮丧的时候，但更多的是知识的成长以及心中不断燃烧的好奇与热情，我想正是在这样的热情和兴趣下，自己才能一步步克服障碍，完成了这次实验模块的制作。 尽管每一次遇到困难都很沮丧，但当自己战胜一个又一个困难，最后完成整个实验模块的时候，就感觉之前所有的沮丧都不值一提。<br>通过温度压力采集及步进电机的驱动系统设计与制作，自己的的确确学到了很多。从知识方面来看，自己认识到了温度、压力传感器的使用，还对串行通信有了更加深入的认识，看到了串行通信相对于并行通信的优势。另外，自己也对汇编语言有了更加深入而细致的认识，了解到了如何使用汇编语言经行加减运算，位操作以及数据处理，看到了汇编语言相对其他语言在单片机操作上的优势，看到了汇编语言的形象化与底层化。除此之外，自己通过这个过程，也收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。自己也十分期待在未来的学习和工作中，能够更加深入地学习单片机，并把这些知识和技能应用到未来的工作和生活中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第一章-系统整体概述&quot;&gt;&lt;a href=&quot;#第一章-系统整体概述&quot; class=&quot;headerlink&quot; title=&quot;第一章 系统整体概述&quot;&gt;&lt;/a&gt;第一章 系统整体概述&lt;/h3&gt;&lt;p&gt;本次单片机温度、压力信息采集与电机控制系统实验是基于模数转换，数模转换，LC</summary>
      
    
    
    
    <category term="51单片机" scheme="http://yeyuwenxi.github.io/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="单片机" scheme="http://yeyuwenxi.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="汇编" scheme="http://yeyuwenxi.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>UART实现51单片机双机串行通信</title>
    <link href="http://yeyuwenxi.github.io/2021/04/11/uart-shi-xian-51-dan-pian-ji-shuang-ji-chuan-xing-tong-xin/"/>
    <id>http://yeyuwenxi.github.io/2021/04/11/uart-shi-xian-51-dan-pian-ji-shuang-ji-chuan-xing-tong-xin/</id>
    <published>2021-04-11T13:39:02.000Z</published>
    <updated>2021-04-11T14:51:04.992Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>本次单片机双机通讯系统设计实验是通过单片机间的串行通讯控制两个单片机进行通信的设计与制作。一个单片机系统做为发送端，从键盘输入自己的班级和姓名同时显示在 LCD 显示屏上并发送给另外一个单片机，另一个单片机系统作为接收端，把接收到的信息显示在 LCD 显示屏上。通过判断两个单片机系统中LCD屏幕显示的信息是否相同即可判断双机系统之间的串行通讯是否正常进行。<br>本次双机通讯系统采用了串行口方式1进行通讯，一帧信息为10位，其中有一个起始位，8个数据位和1个停止位。通讯的波特率位2400波特，T1工作在定时器方式2，震荡频率选用11.0592MH，通过计算可得TH1=TL1=0F4H,PCON寄存器的SMOD位为0。<br>整个系统的硬件部分是由两个单片机最小系统，两个 LCD 显示屏以及一个矩阵键盘构成。</p><h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3><p>1.准备电路元器件及焊接工具：STC89C51RC芯片2个、IC插座、40p排针2个、11.0592MHz晶振2个、30pF瓷片电容4个、10uF电解电容2个、排阻一个、电阻若干、LCD1602A显示屏2个、10*15cm洞洞板一个、电源线、杜邦线、下载器、电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接。<br>3.调试：下载程序，将两个单片机系统进行连接，通过按键测试双机通讯能否正常进行，若通讯正常，则两个单片机西铜所连接的lcd屏幕将随着按键按下而显示相同的字符，若不显示或字符紊乱，则双机通讯存在故障。</p><ul><li>焊接成果图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_10.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写<br>2.设计仿真电路图：将电源、时钟电路、复位电路、51单片机、LED数码管及LCD1602显示屏正确连接。电源选用+5v，晶振选用11.0592MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容，LED数码管串联470Ω电阻接在P2引脚，电阻的作用为保护电路,防止led灯被击穿，将键盘矩阵接在P0口，LCD1602A的D0-D7接口接在P1口。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否能达到目标要求。</p><ul><li>编程</li><li>发送端程序<br>ORG 0000H<br>LJMP MAIN<br>MAIN:<br>RS EQU P3.7<br>RW EQU P3.6<br>E EQU P3.5<br>MOV P1,#00000001B    ;清屏<br>ACALL ENABLE<br>MOV P1,#00111100B    ;  功能设定<br>ACALL ENABLE<br>MOV P1,#00001100B     ; 开关控制<br>ACALL ENABLE<br>MOV P1,#00000110B     ;模式设置<br>ACALL ENABLE<br>MOV P1,#80H<br>ACALL ENABLE<br>MOV R2,#00H<br>MOV DPTR,#TABLE3<br>MOV R1,#00H<br>;OR0:MOV A,R1<br>;MOVC A,@A+DPTR<br>;MOV P2,A<br>;ACALL WRITE<br>;INC R1<br>;CJNE A,#00H,OR0<br>MOV P1,#80H<br>ACALL ENABLE</li></ul><p>ORI:MOV P0,#0FH<br>MOV A,P0<br>CJNE A,#0FH,ORII<br>LJMP ORI<br>ORII:<br>ACALL KEYSCAN<br>MOV A,30H</p><p>ASTART:CLR EA<br>MOV TMOD,#20H<br>MOV TH1,#0F4H<br>MOV TL1,#0F4H<br>MOV PCON,#00H<br>SETB TR1<br>MOV SCON,#50H<br>ALOOP1:MOV SBUF,#0E1H<br>JNB TI,$<br>CLR TI<br>JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>XRL A,#0E2H<br>JNZ ALOOP1</p><p>ALOOP2:MOV R0,#30H<br>;MOV R7,#01H<br>MOV R6,#00H<br>ALOOP3:MOV SBUF,@R0<br>MOV A,R6<br>ADD A,@R0<br>MOV R6,A<br>;INC R0<br>JNB TI,$<br>CLR TI<br>;DJNZ R7,ALOOP3<br>MOV SBUF,R6<br>JNB TI,$<br>CLR TI<br>JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>JNZ ALOOP2<br>;RET</p><p>;MOV P2,#0C0H<br>;ACALL ENABLE<br>MOV A,30H<br>MOV DPTR,#TABLE1<br>MOVC A,@A+DPTR<br>MOV P1,A      ;lcd的显示<br>ACALL WRITE<br>INC R1;<br>CJNE R1,#04H,JISHU<br>MOV P1,#0C0H<br>ACALL ENABLE<br>MOV R1,#05H<br>JISHU:<br>ACALL DELAY</p><p>SJMP ORI</p><p>AJMP $<br>WRITE:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET<br>KEYSCAN:MOV P0,#0FH<br>        MOV A,P0<br>ANL A,#0FH<br>MOV R3,A<br>MOV P0,#0F0H<br>MOV A,P0<br>ANL A,#0F0H<br>ORL A,R3<br>CJNE A,#0FFH,KEYPRO<br>RET<br>KEYPRO:MOV R3,A      ;R3放键值<br>       MOV DPTR,#KEYVALUE<br>   MOV R4,#0FFH<br>KEY1:INC R4       ;从1到16查找键值<br>     MOV A,R4    ;R4放偏移量<br> MOVC A,@A+DPTR<br> MOV 31H,R3<br> CJNE A,31H,KEY1  ;判断是否与键值相等<br> MOV A,R4<br> MOV 30H,A<br> RET<br>DELAY:<br>MOV R4,#60<br>D1:MOV R5,#60<br>D2:MOV R6,#30<br>DJNZ R6,$<br>DJNZ R5,D2<br>DJNZ R4,D1<br>RET<br>KEYVALUE: DB 77H,7BH,7DH,7EH,0B7H,0BBH,0BDH,0BEH,0D7H,0DBH,0DDH,0DEH,0E7H,0EBH,0EDH,0EEH<br>TABLE: DB  30H, 31H, 32H, 33H ,34H ,35H ,36H, 37H, 38H, 39H ,41H, 42H, 43H, 44H, 45H, 46H<br>TABLE1:DB ‘1’,’8’,’0’,’3’,’P’,’E’,’N’,’G’,’C’,’H’,’E’,’N’,’L’,’I’,’A’,’G’<br>TABLE2:  DB 0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H,88H,83H,0C6H,0A1H,86H,8EH<br>TABLE3: DB “ PENG CHENLIANG “,00H<br>END</p><ul><li>接收端程序<br>ORG 0000H<br>RS EQU P3.7<br>RW EQU P3.6<br>E EQU P3.5<br>MOV P1,#00000001B    ;清屏<br>ACALL ENABLE<br>MOV P1,#00111100B    ;  功能设定<br>ACALL ENABLE<br>MOV P1,#00001100B     ; 开关控制<br>ACALL ENABLE<br>MOV P1,#00000110B     ;模式设置<br>ACALL ENABLE<br>MOV P1,#80H<br>ACALL ENABLE<br>MOV R1,#00H<br>BSTART:CLR EA<br>MOV TMOD,#20H<br>MOV TH1,#0F4H<br>MOV TL1,#0F4H<br>MOV PCON,#00H<br>SETB TR1<br>MOV SCON,#50H<br>BLOOP1:     JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>XRL A,#0E1H<br>JNZ BLOOP1<br>MOV SBUF,#0E2H<br>JNB TI,$<br>CLR TI<br>MOV R0,#30H<br>;MOV R7,#01H<br>MOV R6,#00H</li></ul><p>BLOOP2:JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>MOV @R0,A<br>;INC R0<br>ADD A,R6<br>MOV R6,A</p><p>;DJNZ R7,BLOOP2</p><p>JNB RI,$<br>CLR RI<br>MOV A,SBUF<br>XRL A,R6</p><p>JZ END1<br>MOV SBUF,#0FFH<br>JNB TI,$<br>CLR TI<br>SJMP BLOOP1<br>END1:MOV SBUF,#00H    </p><p>;MOV P2,#0C0H<br>;ACALL ENABLE<br>MOV A,30H<br>MOV DPTR,#TABLE1<br>MOVC A,@A+DPTR<br>MOV P1,A      ;lcd的显示<br>ACALL WRITE<br>INC R1;<br>CJNE R1,#04H,JISHU<br>MOV P1,#0C0H<br>ACALL ENABLE<br>MOV R1,#05H</p><p>JISHU:LJMP BSTART</p><p>WRITE:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>DELAY:<br>MOV R4,#60<br>D1:MOV R5,#60<br>D2:MOV R6,#30<br>DJNZ R6,$<br>DJNZ R5,D2<br>DJNZ R4,D1<br>RET<br>KEYVALUE: DB 77H,7BH,7DH,7EH,0B7H,0BBH,0BDH,0BEH,0D7H,0DBH,0DDH,0DEH,0E7H,0EBH,0EDH,0EEH<br>TABLE: DB  30H, 31H, 32H, 33H ,34H ,35H ,36H, 37H, 38H, 39H ,41H, 42H, 43H, 44H, 45H, 46H<br>TABLE1:DB ‘1’,’8’,’0’,’3’,’P’,’E’,’N’,’G’,’C’,’H’,’E’,’N’,’L’,’I’,’A’,’G’<br>TABLE2:  DB 0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H,88H,83H,0C6H,0A1H,86H,8EH<br>TABLE3: DB “ PENG CHENLIANG “,00H<br>END</p><ul><li>Proteus 仿真电路图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_11.jpg"></li></ul><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3><p>本次制作的双机通讯系统是在键盘显示模块之后的又一个更加复杂的模块，不得不说双机通讯系统的设计确实比之前的两个模块难了很多难了很多。从发送端与接收端通讯协议的构建，到键盘扫描，键码获取和键码的发送与传输，每一步都存在很多问题，更加麻烦的是，如何把LCD的显示和通讯系统结合起来。<br>虽然硬件部分并没有遇到什么困难，但软件部分通讯协议的构建和通讯系统与LCD显示如何相结合的问题确实很让人困扰。经过反复思考后，在发送端的程序中，我把通讯信息发送的部分放在了键盘扫描的循环中，每按下一次键盘，系统就把扫描到的键码转换为键值，发送给接收端，并在发送端的LCD上把键值显示出来。而在接收端，我把LCD显示的程序放在了通讯接受的循环里，系统每接收到一个字符，就把字符显示到接收端的LCD上。由于每按下一次键盘只显示一个字符，故每次只发送一个字符即可。<br>在LCD显示时我还发现，两个LCDv0口需要的电压居然不一样，起初我还以为是两个LCD颜色不同，所以特性存在些许的差距，后来仔细检查后才发现，原来是两个单片机系统的GND没有接到一起，所以接在两个LCD的v0口接在同一个单片机系统的电位器上并不能正常运行。之后我把两个单片机系统的GND连到了一起，采用同一个电源供电，解决了这一问题。</p><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p> 本次实验模块的设计与制作确实比之前的复杂了很多，但我自己在这个过程中也得到了很大的提高与成长。<br>从通讯系统的构建，两个系统之间的应答，校验和的检验，到如何把键盘输入的字符正确地发送并正确地显示在LCD屏幕上，每一步充满了各种挫折和困顿。虽然硬件上利用了之前的系统，但软件上协议部分确实很让人头疼。写代码的过程中虽然遇到过很多挫败，也有过很多心情沮丧的时候，但更多的是知识的成长以及心中不断燃烧的好奇与热情，在这样的热情和兴趣下，自己一步步克服障碍，完成了双机通讯系统的设计制作。 虽然每一次看到bug是都很失落，但当最后看到自己的名字成功地显示到两个LCD的屏幕上时，就觉得所有的努力和付出都是值得的。<br>通过双机通讯系统的设计与制作，自己的的确确学到了很多。从知识方面来看，自己对通讯协议的构建有了初步的认识，了解到了如何在单片机之间进行串行通讯。另外，自己也对汇编语言有了更加深入而细致的认识，看到了汇编语言相对其他语言在单片机操作上的优势，看到了汇编语言的形象化与底层化。除此之外，自己通过这个过程，也收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。自己也十分期待下一次的实验模块制作，期待自己可以更好地运用所学的知识，制作出更好的作品。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第一章-系统整体概述&quot;&gt;&lt;a href=&quot;#第一章-系统整体概述&quot; class=&quot;headerlink&quot; title=&quot;第一章 系统整体概述&quot;&gt;&lt;/a&gt;第一章 系统整体概述&lt;/h3&gt;&lt;p&gt;本次单片机双机通讯系统设计实验是通过单片机间的串行通讯控制两个单片机进行通信</summary>
      
    
    
    
    <category term="51单片机" scheme="http://yeyuwenxi.github.io/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="单片机" scheme="http://yeyuwenxi.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="汇编" scheme="http://yeyuwenxi.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>矩阵键盘控制数码管和LCD1602的显示</title>
    <link href="http://yeyuwenxi.github.io/2021/04/11/ju-zhen-jian-pan-kong-zhi-shu-ma-guan-he-lcd1602-de-xian-shi/"/>
    <id>http://yeyuwenxi.github.io/2021/04/11/ju-zhen-jian-pan-kong-zhi-shu-ma-guan-he-lcd1602-de-xian-shi/</id>
    <published>2021-04-11T13:13:40.000Z</published>
    <updated>2021-04-11T14:50:13.935Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>本次实验模块将通过矩阵键盘来控制字符的显示输出，分别采用了LED数码显示管及LCD1602液晶显示屏这两种显示方式来显示从0到F的16个字符。<br>键盘显示模块整体划分为四个部分，一是单片机最小系统，用来提供本系统最基本的工作环境配置；二是一个4*4的矩阵键盘，通过线反转法进行扫描，从而控制单片机的运行，十六个按键对应输出的十六种字符；三是共阳极数码管及其串联的电阻，四是LCD1602A液晶显示屏和控制其对比度的电位器。</p><h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3><p>1.准备电路元器件及焊接工具：STC89C51RC芯片一个、IC插座、40p排针1个、11.0592MHz晶振一个、30pF瓷片电容2个、10uF电解电容一个、排阻一个、电阻若干、LED数码管一个、LCD1602A显示屏一个、10*15cm洞洞板一个、电源线、杜邦线、下载器、电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接<br>3.调试：下载程序，测试LED数码管和lcd显示屏是否能够正常闪烁。</p><ul><li>焊接成果图</li><li>正面<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_7.jpg" width="60%" height="60%"></li><li>背面<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_8.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写<br>2.设计仿真电路图：将电源、时钟电路、复位电路、51单片机、LED数码管及LCD1602显示屏正确连接。电源选用+5v，晶振选用11.0592MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容，LED数码管串联470Ω电阻接在P2引脚，电阻的作用为保护电路,防止led灯被击穿，将键盘矩阵接在P0口，LCD1602A的D0-D7接口接在P1口。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否能达到目标要求。</p><ul><li>编程<br>ORG 0000H<br>LJMP MAIN<br>MAIN:<br>RS EQU P3.7<br>RW EQU P3.6<br>E EQU P3.5<br>MOV P1,#00000001B    ;清屏<br>ACALL ENABLE<br>MOV P1,#00111100B    ;  功能设定<br>ACALL ENABLE<br>MOV P1,#00001100B     ; 开关控制<br>ACALL ENABLE<br>MOV P1,#00000110B     ;模式设置<br>ACALL ENABLE<br>MOV P1,#80H<br>ACALL ENABLE<br>MOV R1,#00H<br>MOV DPTR,#TABLE3<br>OR0:MOV A,R1<br>MOVC A,@A+DPTR<br>MOV P1,A<br>ACALL WRITE<br>INC R1<br>CJNE A,#00H,OR0</li></ul><p>ORI:MOV P0,#0FH<br>MOV A,P0<br>CJNE A,#0FH,ORII<br>LJMP ORI</p><p>ORII:<br>ACALL KEYSCAN<br>MOV A,30H<br>MOV DPTR,#TABLE2<br>MOVC A,@A+DPTR<br>MOV P2,A   ;数码管的显示<br>ACALL DELAY<br>MOV P1,#0C0H<br>ACALL ENABLE<br>MOV A,30H<br>MOV DPTR,#TABLE<br>MOVC A,@A+DPTR<br>MOV P1,A      ;lcd的显示<br>ACALL WRITE<br>ACALL DELAY<br>SJMP ORI</p><p>AJMP $<br>WRITE:SETB RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET</p><p>ENABLE:CLR RS<br>CLR RW<br>CLR E<br>ACALL DELAY<br>SETB E<br>RET<br>KEYSCAN:MOV P0,#0FH<br>        MOV A,P0<br>        ANL A,#0FH<br>        MOV R3,A<br>        MOV P0,#0F0H<br>        MOV A,P0<br>        ANL A,#0F0H<br>        ORL A,R3<br>        CJNE A,#0FFH,KEYPRO<br>        RET<br>KEYPRO:MOV R3,A      ;R3放键值<br>       MOV DPTR,#KEYVALUE<br>       MOV R4,#0FFH<br>KEY1:INC R4       ;从1到16查找键值<br>     MOV A,R4    ;R4放偏移量<br>     MOVC A,@A+DPTR<br>     MOV 31H,R3<br>     CJNE A,31H,KEY1  ;判断是否与键值相等<br>     MOV A,R4<br>     MOV 30H,A<br>     RET<br>DELAY:<br>MOV R4,#60<br>D1:MOV R5,#60<br>D2:MOV R6,#30<br>DJNZ R6,$<br>DJNZ R5,D2<br>DJNZ R4,D1<br>RET<br>KEYVALUE: DB 77H,7BH,7DH,7EH,0B7H,0BBH,0BDH,0BEH,0D7H,0DBH,0DDH,0DEH,0E7H,0EBH,0EDH,0EEH<br>TABLE: DB  30H, 31H, 32H, 33H ,34H ,35H ,36H, 37H, 38H, 39H ,41H, 42H, 43H, 44H, 45H, 46H<br>TABLE2:  DB 0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H,88H,83H,0C6H,0A1H,86H,8EH<br>TABLE3: DB “ PENG CHENLIANG “,00H<br>END</p><ul><li>Proteus 仿真电路图<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_9.jpg" ></li></ul><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3><p>1.最开始使用汇编语言进行程序设计的时候，整合了数码管和LCD1602的显示程序，并使用查表法整合了数码管和LCD1602的键码，从而可以通过键盘来控制数码管和LCD的显示。整合完之后发现在有光标的显示模式下，LCD显示出的单个字符会不断闪烁，反复排查后发现，原来是写数据的操作在不断的循环执行。我通过判断键盘输入的电平是否有变化来跳出了这一循环。<br>2.焊接完整后导入程序发现数码管不能正常显示，仔细检查后发现自己把一个错误的程序导入了进去。，于是自己重新导入了新的程序，数码管和LCD也恢复了正常显示。<br>3.LCD的显示偏暗，而且存在略微的鬼影，通过调节电阻来控制V0口的电压，改善了这一现象。<br>4.在完成最基本的键盘显示操作后，我又自己研究了LCD的CGRAM，学会了如何自己使用字模来创造自定义的字符,并将字模导入到CGRAM。</p><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p>本次制作的键盘显示模块是继单片机最小系统之后的又一个模块，不得不说，键盘显示确实比单片机最小系统难了很多。从线反转的扫描方法，到数码管的动态显示，再到用键盘操控数码管和LCD，每一步充满了各种挫折和困顿。不光软件设计上很麻烦，硬件制作上也比单片机最小系统复杂了很多，更多的接口，更多的线路，要求更高的焊接，一个个困难阻碍着设计与制作。从电路设计到电路焊接整个过程，虽然遇到过很多挫败，也有过很多心情沮丧的时候，但更多的是知识的成长以及心中不断燃烧的好奇与热情，在这样的热情和兴趣下，自己一步步克服障碍，完成了键盘显示的设计制作，并在此基础上，自己尝试了自定义字符和电子表的制作。<br>通过键盘显示模块的设计与制作，自己的的确确学到了很多。从知识方面来看，自己不仅对数码管和LCD1602有了深入的认识，而且了解到了如何通过键盘来控制这两个显示模块。另外，自己也对汇编语言有了更加深入而细致的认识，看到了汇编语言相对其他语言在单片机操作上的优势，看到了汇编语言的形象化与底层化。除此之外，自己通过这个过程，也收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第一章-系统整体概述&quot;&gt;&lt;a href=&quot;#第一章-系统整体概述&quot; class=&quot;headerlink&quot; title=&quot;第一章 系统整体概述&quot;&gt;&lt;/a&gt;第一章 系统整体概述&lt;/h3&gt;&lt;p&gt;本次实验模块将通过矩阵键盘来控制字符的显示输出，分别采用了LED数码显示管及</summary>
      
    
    
    
    <category term="51单片机" scheme="http://yeyuwenxi.github.io/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="单片机" scheme="http://yeyuwenxi.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="汇编" scheme="http://yeyuwenxi.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>51单片机最小系统</title>
    <link href="http://yeyuwenxi.github.io/2021/04/11/51-dan-pian-ji-zui-xiao-xi-tong/"/>
    <id>http://yeyuwenxi.github.io/2021/04/11/51-dan-pian-ji-zui-xiao-xi-tong/</id>
    <published>2021-04-11T11:47:56.000Z</published>
    <updated>2021-04-11T14:49:24.770Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一章-系统整体概述"><a href="#第一章-系统整体概述" class="headerlink" title="第一章 系统整体概述"></a>第一章 系统整体概述</h3><p>单片机最小系统就是能够使单片机正常工作的完整的最小的电路系统。构成80C51单片机最小系统包括电源电路、时钟电路、复位电路以及51单片机。<br>对单片机的I/O口读写操作是单片机最基本的使用方法。本次设计利用51单片机的I/O口驱动点亮LED灯，使LED灯闪烁。</p><ul><li>电源电路：80C51单片机常用的电源直流5v电源.选用电源时要选用波纹小，电压稳定的电源。</li><li>时钟电路：最小系统采用11.0592MHz晶振，30pF电容。</li><li>复位电路：复位是单片机的初始化操作。单片机运行时，都需要先复位，<br>使CPU和系统中其他部件处于一个确定的初始状态，并从这个状态开始工作。因而，复位是一个很重要的操作方式。当单片机稳定，RST保持两个机器周期以上的高电平时自动复位。但单片机本身是不能自动进行复位的，必须配合相应的外部电路才能实现。上电或开关复位要求电源接通后，单片机自动复位，并且在单片机运行期间，用开关操作也能使单片机复位。本次设计采用了外部电路进行上电复位，单片机供电时会自行复位。<h3 id="第二章-硬件设计与实现"><a href="#第二章-硬件设计与实现" class="headerlink" title="第二章 硬件设计与实现"></a>第二章 硬件设计与实现</h3></li></ul><p>1.准备电路元器件及焊接工具：STC89C51RC芯片一个、IC插座、40p排针1个、11.0592MHz晶振一个、30pF瓷片电容2个、10uF电解电容一个、1kΩ电阻一个、10kΩ电阻一个、LED灯一个、7*9cm洞洞板一个、电源线、下载器，电烙铁、焊锡丝等。<br>2.焊接电路板：按照设计好的原理图进行焊接<br>3.调试：下载程序，测试LED灯是否闪烁。</p><ul><li>自己焊接制作的电源<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_1.jpg" width="60%" height="60%"></li><li>单片机最小系统<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_2.jpg" width="60%" height="60%"></li></ul><h3 id="第三章-软件设计与编程"><a href="#第三章-软件设计与编程" class="headerlink" title="第三章 软件设计与编程"></a>第三章 软件设计与编程</h3><p>1.编写代码：利用keil软件进行编程，本次设计使用了汇编语言来进行编写<br>2.设计仿真电路图：参考书上给出的电路图并且适当修改，将电源、时钟电路、复位电路、51单片机、LED灯正确连接。电源选用+5v，晶振选用11.0592MHz，时钟电路选用30pF电容，复位电路选用10kΩ电阻、10uF电容，LED灯串联一个1kΩ电阻接在P1.0引脚，电阻的作用为保护电路,防止led灯被击穿。<br>3.仿真调试：用proteus进行仿真测试，将事先编好的程序导入51单片机中，以测试程序是否符合LED灯闪烁的要求。</p><ul><li>编程<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_3.jpg"></li><li>Proteus 仿真电路图<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_4.jpg"><h3 id="第四章-作品调试与分析"><a href="#第四章-作品调试与分析" class="headerlink" title="第四章 作品调试与分析"></a>第四章 作品调试与分析</h3></li></ul><p>1.用proteus进行仿真时出现了led灯不亮的情况，我反复检查自己编写的程序和设计的电路，都没有发现问题，最后重头做了一遍才发现原来时晶振的频率写成了11.0592Hz。<br>2.使用烧录程序进行烧录时，烧录软件显示握手失败，于是我更新了驱动和烧录软件的版本，最后成功地把程序烧录进了单片机。<br>3.第一次通电观测时，发现led灯闪烁过快，于是我修改了程序，将闪烁频率调低了一些。<br>4.在最小系统的基础上，我又自己焊接制作了利用单片机实现的流水灯。</p><ul><li>软件<br><img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_5.jpg"></li><li>硬件<img src="https://cdn.jsdelivr.net/gh/yeyuwenxi/images.github.io/20210411_6.jpg" width="60%" height="60%"></li></ul><h3 id="第五章-制作感受"><a href="#第五章-制作感受" class="headerlink" title="第五章 制作感受"></a>第五章 制作感受</h3><p>本次制作的51单片机最小系统是让单片机能正常工作并发挥其功能的时所必需的组成部分。从电路设计到电路焊接整个过程，我学会了Keil和proteus两个软件的基本使用方法，对汇编语言以及单片机的仿真有了初步认识。<br>第一次自己挑选购买元器件，第一次进行汇编语言的编程，第一次使用电烙铁进行焊接，第一次烧录单片机……整个实验过程都充满了新奇，充满了兴趣，更重要的是，自己通过这个过程，收获了更多新的技能，对单片机有了更加深入而全面的认识，为以后的理论学习和课程实践打下了一个稳健的基础。<br>虽然在整个设计制作中遇到了很多困难与挫折，自己也常常被一些小问题而困扰，但当自己从百思不得其解中顿悟时，所有的烦恼与困惑都变成了兴奋与激动，就觉得所有的努力和付出在看到自己的成果时都是值得的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第一章-系统整体概述&quot;&gt;&lt;a href=&quot;#第一章-系统整体概述&quot; class=&quot;headerlink&quot; title=&quot;第一章 系统整体概述&quot;&gt;&lt;/a&gt;第一章 系统整体概述&lt;/h3&gt;&lt;p&gt;单片机最小系统就是能够使单片机正常工作的完整的最小的电路系统。构成80C51</summary>
      
    
    
    
    <category term="51单片机" scheme="http://yeyuwenxi.github.io/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="单片机" scheme="http://yeyuwenxi.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="汇编" scheme="http://yeyuwenxi.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>关于心情日记</title>
    <link href="http://yeyuwenxi.github.io/2021/04/08/guan-yu-xin-qing-ri-ji/"/>
    <id>http://yeyuwenxi.github.io/2021/04/08/guan-yu-xin-qing-ri-ji/</id>
    <published>2021-04-08T08:14:52.000Z</published>
    <updated>2021-04-08T08:33:12.705Z</updated>
    
    <content type="html"><![CDATA[<p>2021年4月7日，第10天。<br>转眼心情日记这个分类已经写到第10天了，今天想做个阶段性的小总结，也重新规划一下接下来的目标和计划。<br>这10天写的一些东西，有比较触动自己的东西，也有很多挺水的部分。<br>怎么说呢？一个公开的博客平台，写一些倾向于个人日记的东西还是不太好的，我无法做到绝对的坦诚，也避免不了情绪化的碎碎念和说教，涉及隐私的一些东西我也不是特别敢写。<br>所以接下来，打算换个方向，多写一下技术方面的问题，记录一下自己学习的过程，真正地当做一个博客来写，至于心情日记这个分类，也暂时会留在这里，偶尔回来写一两句碎碎念。<br>当然，之后也不会像之前一样做日更了，太水的东西，总归是不合适的，我也不希望它会变成我每天的一个负担，至于转载和分享，也尽可能地少放在这里，努力地去写一些自己原创的东西。<br>加油。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年4月7日，第10天。&lt;br&gt;转眼心情日记这个分类已经写到第10天了，今天想做个阶段性的小总结，也重新规划一下接下来的目标和计划。&lt;br&gt;这10天写的一些东西，有比较触动自己的东西，也有很多挺水的部分。&lt;br&gt;怎么说呢？一个公开的博客平台，写一些倾向于个人日记的东西</summary>
      
    
    
    
    <category term="心情日记" scheme="http://yeyuwenxi.github.io/categories/%E5%BF%83%E6%83%85%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>云何降伏其心</title>
    <link href="http://yeyuwenxi.github.io/2021/04/08/yun-he-jiang-fu-qi-xin/"/>
    <id>http://yeyuwenxi.github.io/2021/04/08/yun-he-jiang-fu-qi-xin/</id>
    <published>2021-04-08T08:13:54.000Z</published>
    <updated>2021-04-08T08:13:54.292Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>互联网让我更快乐了吗</title>
    <link href="http://yeyuwenxi.github.io/2021/04/05/hu-lian-wang-rang-wo-geng-kuai-le-liao-ma/"/>
    <id>http://yeyuwenxi.github.io/2021/04/05/hu-lian-wang-rang-wo-geng-kuai-le-liao-ma/</id>
    <published>2021-04-05T08:58:52.000Z</published>
    <updated>2021-04-05T15:24:10.226Z</updated>
    
    <content type="html"><![CDATA[<p>2021年4月5日，第8天。<br>当你没事儿干的时候你会干什么？<br>对我来说，这个问题的答案是上网，每天的大部分时间，我都花费在了互联网上。<br>手机和电脑，几乎牢牢占据了我的空余时间，让我沉迷网络，难以自拔。<br>上网是为了什么？<br>娱乐，游戏，小说，视频，找乐子。<br>除了互联网，自己好像没有特别多的娱乐手段，而上网之外的娱乐手段，好像快感又太低，不如上网那么容易让人满足。<br>但上网真的让自己更快乐了吗？<br>答案似乎值得商榷，上网确实可以排解空虚和寂寞，可以带来即时的快感，但快乐和幸福感，好像真的没有。<br>也许我会为一个别致的短视频而兴奋，但转眼我便会滑到下一个视频，只是为了继续这份快感和满足感。<br>也许我会被一个独到的见解所打动，但来不及深思，我便会把它抛到脑后，因为拿着手机的我分分钟就会去阅读下一个观点。<br>互联网确实给自己带来了很多快感，但也让自己更加的焦虑和不安，浮躁充斥着每一个上网者，被巨量的信息淹没的我们，根本来不及思考和停留，只是匆匆忙忙地追着下一个热点。<br>相比于别致的视频和独到的观点，更多时候，我遇到的是各种恶搞，低俗，抄袭的视频视频，情绪化的议论，吵闹，谩骂，指责，各种对立，焦虑，精神暴力。<br>那些深邃的观点早就被情绪化的内容所淹没，我们也往往会被各种垃圾信息搞得愤怒，焦虑。<br>互联网，并没有让自己变得更快乐，自己打开它的方式似乎并不正确。<br>所以，今天在这里做个计划，以后没有明确的目的或事件，自己尽量少上网冲浪，没有必须要查的资料或学习的内容，尽量少上网浏览无意义的内容。<br>立贴为记。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年4月5日，第8天。&lt;br&gt;当你没事儿干的时候你会干什么？&lt;br&gt;对我来说，这个问题的答案是上网，每天的大部分时间，我都花费在了互联网上。&lt;br&gt;手机和电脑，几乎牢牢占据了我的空余时间，让我沉迷网络，难以自拔。&lt;br&gt;上网是为了什么？&lt;br&gt;娱乐，游戏，小说，视频，</summary>
      
    
    
    
    <category term="心情日记" scheme="http://yeyuwenxi.github.io/categories/%E5%BF%83%E6%83%85%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>今日清明</title>
    <link href="http://yeyuwenxi.github.io/2021/04/05/jin-ri-qing-ming/"/>
    <id>http://yeyuwenxi.github.io/2021/04/05/jin-ri-qing-ming/</id>
    <published>2021-04-05T08:48:10.000Z</published>
    <updated>2021-04-08T08:59:44.518Z</updated>
    
    <content type="html"><![CDATA[<p>2021年4月4日，第7天。<br>说起来好多天没更了，惭愧惭愧。<br>今日清明，宜踏青折柳，思故人。<br>长沙的天气依旧如往常般阴云密布，时而下几场小雨。<br>没有课的日子悠闲而惬意，一觉睡到快中午，出去吃了顿午饭。<br>吃完饭到后湖转了转，来学校这么久，还是第一次去后湖。<br>风吹波纹，杨柳依依，木桥穿越湖中，一石桥临于湖上，典型的中式风格。<br>傍边的艺术园又很有现代特色，好多地方都还在装修，也没有特别印象深刻的地方。<br>总得来说，虽然草坪有点少，湖泊占了太大面积，环湖跑道只有一半，但也算是个饭后散步的好地方了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年4月4日，第7天。&lt;br&gt;说起来好多天没更了，惭愧惭愧。&lt;br&gt;今日清明，宜踏青折柳，思故人。&lt;br&gt;长沙的天气依旧如往常般阴云密布，时而下几场小雨。&lt;br&gt;没有课的日子悠闲而惬意，一觉睡到快中午，出去吃了顿午饭。&lt;br&gt;吃完饭到后湖转了转，来学校这么久，还是第一</summary>
      
    
    
    
    <category term="心情日记" scheme="http://yeyuwenxi.github.io/categories/%E5%BF%83%E6%83%85%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于孤独</title>
    <link href="http://yeyuwenxi.github.io/2021/04/05/guan-yu-gu-du/"/>
    <id>http://yeyuwenxi.github.io/2021/04/05/guan-yu-gu-du/</id>
    <published>2021-04-05T08:46:35.000Z</published>
    <updated>2021-04-06T04:20:48.880Z</updated>
    
    <content type="html"><![CDATA[<p>2021年4月2日，第5天。</p><p>一直以来我好像都是一个比较孤独的人，甚至可以说有点孤僻。<br>长久以来，习惯了一个人吃饭，一个人上下课，一个人去图书馆，一个人出去散步……<br>我好像已经彻底习惯了一个人的生活，甚至有些时候有点沉浸于这种状态。<br>一个人的状态，好像也是一种舒适区，很多时候，自己不愿意被其他人或其他任务打乱自己的生活节奏。<br>但偶尔，有些时候，好像也会顾影自怜，真正聊得来的朋友没有几个，能在自己身边了解自己当下处境的就更少了。<br>一个人的自由并没有什么错，但自己也不应该太过于沉浸于这种状态。<br>我或许更应该试着去积极主动地和他人交流，主动地去做一些事情。<br>不希望因为自己一个人的状态，就丧失了走出去的勇气。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年4月2日，第5天。&lt;/p&gt;
&lt;p&gt;一直以来我好像都是一个比较孤独的人，甚至可以说有点孤僻。&lt;br&gt;长久以来，习惯了一个人吃饭，一个人上下课，一个人去图书馆，一个人出去散步……&lt;br&gt;我好像已经彻底习惯了一个人的生活，甚至有些时候有点沉浸于这种状态。&lt;br&gt;一个人的</summary>
      
    
    
    
    <category term="心情日记" scheme="http://yeyuwenxi.github.io/categories/%E5%BF%83%E6%83%85%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>考研or工作</title>
    <link href="http://yeyuwenxi.github.io/2021/04/01/kao-yan-or-gong-zuo/"/>
    <id>http://yeyuwenxi.github.io/2021/04/01/kao-yan-or-gong-zuo/</id>
    <published>2021-04-01T14:00:04.000Z</published>
    <updated>2021-04-01T14:23:25.111Z</updated>
    
    <content type="html"><![CDATA[<p>2021年4月1日，第四天。<br>今天想聊聊一个比较重要的话题，工作还是考研？<br>起码对我来说，这个话题很重要，甚至显得有些沉重。<br>这篇博客估计也不是一两天能写完的，在写的过程中，我也在不断地思考，甚至很久以后，我还可能会回来，补上一两句话。</p><p>下面直接步入正题吧，分析一下考研和工作的利弊</p><h2 id="考研"><a href="#考研" class="headerlink" title="考研"></a>考研</h2><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年4月1日，第四天。&lt;br&gt;今天想聊聊一个比较重要的话题，工作还是考研？&lt;br&gt;起码对我来说，这个话题很重要，甚至显得有些沉重。&lt;br&gt;这篇博客估计也不是一两天能写完的，在写的过程中，我也在不断地思考，甚至很久以后，我还可能会回来，补上一两句话。&lt;/p&gt;
&lt;p&gt;下面</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我做了那么多改变</title>
    <link href="http://yeyuwenxi.github.io/2021/03/31/wo-zuo-liao-na-me-duo-gai-bian/"/>
    <id>http://yeyuwenxi.github.io/2021/03/31/wo-zuo-liao-na-me-duo-gai-bian/</id>
    <published>2021-03-31T07:58:16.000Z</published>
    <updated>2021-04-01T08:40:33.739Z</updated>
    
    <content type="html"><![CDATA[<p>2021年3月31日，第3天。<br>“我做了那么多改变，只是为了我心中不变”<br>今天早上去上课的路上听到这句歌词时，突然之间就被打动了。<br>从小到大，我一直坚定不移地相信的一句话就是，人是会变的。<br>这么多年，我又何尝没有改变过，但无论再如何改变，总有些内在的东西是没有变的。<br>比如一些信念，一些梦想，那些潜藏在内心深处没有改变的，才是真的决定自己是谁的东西，而我们所有的改变，也只是为了守护内心深处那些柔软而坚定的东西。<br>一天宛如一年，一年宛如一天，任时光流转，我还是我。</p><p>每次感叹时光的时候都会不自觉地想起刚上初中时的自己。<br>那一年，自己告别村里的小伙伴，一个人到县城的初中上学，虽然显得有些孤独，但更多的是内心的希望和信念，我要好好学习，我要证明自己的优秀，我要成为我想要成为的那种人。<br>那时的我，已经觉得自己俨然是个成熟的大人了，再也不是那些小学的小屁孩了，怎么会因为一个人的孤独而独自忧伤呢。<br>可越长大越发现，真正的成熟总比自己想象的要晚，少年时自以为的成熟不过是为赋新词强说愁罢了。<br>现在想起来，虽然有些可笑，但那段时光就是自己自我意识真正萌芽的开始。<br>满满的少年心气，单纯的梦想和渴望，虽然显得幼稚，却可能再也回不来了。<br>我再也不会下课风一般地冲向食堂，再也不会拿着一个条格作业本跟同桌下五子棋，再也不会拿着一个按键手机读网络小说到废寝忘食……</p><p>转眼间，已经快十年了，很多记忆都变得模糊，也有很多人都淡忘在记忆里，甚至连自己曾经的样子都变得有些模糊。<br>这么多年以来，我到底变成了一个什么样的人，当初的那个自己会想到今天自己的模样吗？<br>那时的自己，可以课间跟同学玩双杠和云梯到手掌结痂，现在的我除了体测却再也不愿碰单杠，那时的自己，可以上课边写作业边听讲，追着老师请教问题，现在的我上课却常常走神看着手机神游天外…<br>有些事情，随着长大，再也不会去做了，有些曾经以为自己不会做的，现在却一直不停的在做…<br>曾经以为上了大学可以生活规律，精神饱满，上了大学才发现，生活更加的不规律，每天仍然时常打盹…<br>那我还是我吗？就像那只特修斯之船，不断地更换零件，还是曾经的船吗？<br>走过那么多的路，经历越多，人就变得越复杂，各种想法和信念也随着经历在不断地改变。<br>那么那些我身上坚定不变的到底是什么，时光留下的又是什么？<br>害，谈论的太深就该研究哲学了？<br>这里就简单记录一下我自己的想法：<br>我想，我之所以是我，是因为我为人处世的原则和独一无二的经历，在什么面临抉择时会做什么选择，决定了我是谁。<br>这些年来，虽然我也改变了很多，但原则在那里，经历在那里，思维的连续性在那里，所以我还是我。<br>未完待续。。。</p><h2 id="提纲"><a href="#提纲" class="headerlink" title="提纲"></a>提纲</h2><h2 id="初心"><a href="#初心" class="headerlink" title="初心"></a>初心</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年3月31日，第3天。&lt;br&gt;“我做了那么多改变，只是为了我心中不变”&lt;br&gt;今天早上去上课的路上听到这句歌词时，突然之间就被打动了。&lt;br&gt;从小到大，我一直坚定不移地相信的一句话就是，人是会变的。&lt;br&gt;这么多年，我又何尝没有改变过，但无论再如何改变，总有些内在的</summary>
      
    
    
    
    <category term="心情日记" scheme="http://yeyuwenxi.github.io/categories/%E5%BF%83%E6%83%85%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>谈谈熬夜</title>
    <link href="http://yeyuwenxi.github.io/2021/03/31/tan-tan-ao-ye/"/>
    <id>http://yeyuwenxi.github.io/2021/03/31/tan-tan-ao-ye/</id>
    <published>2021-03-31T07:49:21.000Z</published>
    <updated>2021-04-06T04:02:42.674Z</updated>
    
    <content type="html"><![CDATA[<p>2021年3月30日，第二天。<br>今天想聊一聊熬夜这个话题。<br>上大学以来，自己好像就养成了熬夜习惯，尤其是大三以来，每天睡得比之前晚了好多，天天都要到12点之后才会睡觉，就算这样，每天睡前在床上还会玩好久的手机。<br>网上睡得晚，第二天难免没什么精力，早上又起的迟，第二天晚上该睡的时候还不困，不可避免地陷入了恶心循环。</p><h3 id="当我熬夜的时候我在干什么？"><a href="#当我熬夜的时候我在干什么？" class="headerlink" title="当我熬夜的时候我在干什么？"></a>当我熬夜的时候我在干什么？</h3><p>玩手机…<br>好像又回到昨天的那个话题了<a href="http://yeyuwenxi.github.io/2021/03/30/dang-wo-kan-shou-ji-de-shi-hou-wo-zai-kan-xie-shi-me/">当我看手机时我在看什么</a><br>说白了，熬夜的时候自己也没做什么正经事情，自己也从来都不是一个喜欢在夜晚工作的人，每天熬夜的原因只有一个–玩！<br>晚上躺在床上说着拿起手机只看一会儿，但每次一看就不知道要到几点钟，最后不知不觉就又熬了个大夜。</p><h3 id="熬夜真的快乐吗"><a href="#熬夜真的快乐吗" class="headerlink" title="熬夜真的快乐吗"></a>熬夜真的快乐吗</h3><p>一时熬夜一时爽，一直熬夜一直爽。<br>熬夜的快感是即时的，一旦沉浸于其中就难以自拔，但熬夜之后呢？第二天昏昏沉沉，做什么事情都没有精神，起得又晚，很多时候一个大早上就没了。<br>熬夜只是一时的快乐，摧残的确实长久的身心，严重地扰乱着自己的生活。</p><h3 id="到底为什么熬夜"><a href="#到底为什么熬夜" class="headerlink" title="到底为什么熬夜"></a>到底为什么熬夜</h3><p>熬到深夜的情况，无一例外都是在玩手机，躺在床上玩手机，有一种难以抵抗又极易获得的满足感。<br>因刷知乎而情绪化，因小说而沉迷，这好像都是自己与世界相处的一种方式，在这种情境下，特别容易忘记时间，忘记外界，一个人沉浸于自己的想象，不受外界干扰的想象。<br>但这又何尝不是逃避世界的一种方式呢？<br>白天的世界充满了真实和骨干，夜幕下的自己持续地用远方的世界麻木着自己，好像只有这样，才能真正地找到自己。</p><h3 id="这是我想要的吗？"><a href="#这是我想要的吗？" class="headerlink" title="这是我想要的吗？"></a>这是我想要的吗？</h3><p>貌似不是。<br>很多时候都是在习惯的趋势下不自觉地熬夜，我又何尝不想早点睡，好好休息，第二天精力满满呢？<br>所以在这里做个计划，以后没事儿干，晚上少玩手机，少上网，少看小说，早睡早起，不再被短暂的快感所羁绊而陷入生活的泥沼无法自拔。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年3月30日，第二天。&lt;br&gt;今天想聊一聊熬夜这个话题。&lt;br&gt;上大学以来，自己好像就养成了熬夜习惯，尤其是大三以来，每天睡得比之前晚了好多，天天都要到12点之后才会睡觉，就算这样，每天睡前在床上还会玩好久的手机。&lt;br&gt;网上睡得晚，第二天难免没什么精力，早上又起的</summary>
      
    
    
    
    <category term="心情日记" scheme="http://yeyuwenxi.github.io/categories/%E5%BF%83%E6%83%85%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Android实例之必应每日一图</title>
    <link href="http://yeyuwenxi.github.io/2021/03/30/android-shi-li-zhi-bi-ying-mei-ri-yi-tu/"/>
    <id>http://yeyuwenxi.github.io/2021/03/30/android-shi-li-zhi-bi-ying-mei-ri-yi-tu/</id>
    <published>2021-03-30T14:31:24.000Z</published>
    <updated>2021-03-30T14:32:31.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Android实现每天更新一张图片"><a href="#Android实现每天更新一张图片" class="headerlink" title="Android实现每天更新一张图片"></a>Android实现每天更新一张图片</h2><p>第一次写博客，记录一下自己学习android过程中做过的一些实例。</p><p>必应官网每天都会更新一张图片，我们可以通过这张图片的链接来获取这张图片，并让其显示在android app中。</p><h3 id="一、图片的获取"><a href="#一、图片的获取" class="headerlink" title="一、图片的获取"></a>一、图片的获取</h3><p>必应提供了一个图片的接口，我们可以通过访问这个接口来获取每日更新的图片，接口链接如下所示：<code>https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1</code><br>通过浏览器访问该链接可以得到以下所示数据</p><blockquote><p>{“images”:[{“startdate”:”20210124”,”fullstartdate”:”202101241600”,”enddate”:”20210125”,<strong>“url”:”/th?id=OHR.ChurchRock_ZH-CN6926315999_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp”</strong>,”urlbase”:”/th?id=OHR.ChurchRock_ZH-CN6926315999”,”copyright”:”红石公园教堂岩附近的雷击，新墨西哥州 (© Tim Fitzharris/Minden Pictures)”,”copyrightlink”:”<a href="https://www.bing.com/search?q=%E7%BA%A2%E7%9F%B3%E5%85%AC%E5%9B%AD%E6%95%99%E5%A0%82&amp;form=hpcapt&amp;mkt=zh-cn&quot;,&quot;title&quot;:&quot;&quot;,&quot;quiz&quot;:&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20210124_ChurchRock%22&amp;FORM=HPQUIZ&quot;,&quot;wp&quot;:true,&quot;hsh&quot;:&quot;cdae6c57dbb4fe473dfd4f93b7870b8b&quot;,&quot;drk&quot;:1,&quot;top&quot;:1,&quot;bot&quot;:1,&quot;hs&quot;:%5B%5D%7D%5D,&quot;tooltips&quot;:%7B&quot;loading&quot;:&quot;%E6%AD%A3%E5%9C%A8%E5%8A%A0%E8%BD%BD...&quot;,&quot;previous&quot;:&quot;%E4%B8%8A%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%83%8F&quot;,&quot;next&quot;:&quot;%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%83%8F&quot;,&quot;walle&quot;:&quot;%E6%AD%A4%E5%9B%BE%E7%89%87%E4%B8%8D%E8%83%BD%E4%B8%8B%E8%BD%BD%E7%94%A8%E4%BD%9C%E5%A3%81%E7%BA%B8%E3%80%82&quot;,&quot;walls&quot;:&quot;%E4%B8%8B%E8%BD%BD%E4%BB%8A%E6%97%A5%E7%BE%8E%E5%9B%BE%E3%80%82%E4%BB%85%E9%99%90%E7%94%A8%E4%BD%9C%E6%A1%8C%E9%9D%A2%E5%A3%81%E7%BA%B8%E3%80%82&quot;%7D%7D">https://www.bing.com/search?q=%E7%BA%A2%E7%9F%B3%E5%85%AC%E5%9B%AD%E6%95%99%E5%A0%82&amp;form=hpcapt&amp;mkt=zh-cn&quot;,&quot;title&quot;:&quot;&quot;,&quot;quiz&quot;:&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20210124_ChurchRock%22&amp;FORM=HPQUIZ&quot;,&quot;wp&quot;:true,&quot;hsh&quot;:&quot;cdae6c57dbb4fe473dfd4f93b7870b8b&quot;,&quot;drk&quot;:1,&quot;top&quot;:1,&quot;bot&quot;:1,&quot;hs&quot;:[]}],&quot;tooltips&quot;:{&quot;loading&quot;:&quot;正在加载...&quot;,&quot;previous&quot;:&quot;上一个图像&quot;,&quot;next&quot;:&quot;下一个图像&quot;,&quot;walle&quot;:&quot;此图片不能下载用作壁纸。&quot;,&quot;walls&quot;:&quot;下载今日美图。仅限用作桌面壁纸。&quot;}}</a></p></blockquote><p>其中，url标签后的内容即为我们所需图片的地址，通过访问<code>http://cn.bing.com+该地址</code>就可以得到我们想要的图片，例如，上面得到的url为<br><code> /th?id=OHR.ChurchRock_ZH-CN6926315999_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp</code><br>那我们访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//cn.bing.com/th?id=OHR.ChurchRock_ZH-CN6926315999_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp</span></span><br></pre></td></tr></table></figure><p>就可以得到我们想要的图片。</p><h3 id="二、在android上获取并显示图片"><a href="#二、在android上获取并显示图片" class="headerlink" title="二、在android上获取并显示图片"></a>二、在android上获取并显示图片</h3><p>由于android自身的限制，网络操作只能在子线程中完成，这一点是我们写代码中特别需要注意的。因此我们要把访问api接口的代码写在子线程中。此外，在android中，与UI有关的操作只能在主线程或UI线程中完成，所以我们加载图片上要记得更换线程。</p><h4 id="1-访问api接口"><a href="#1-访问api接口" class="headerlink" title="1.访问api接口"></a>1.访问api接口</h4><p>这里我们通过android自带的httpurlconnection来访问，并将访问得到的json返回文件存储到字符串response中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendRequestWithHttpURLConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 开启线程来发起网络请求</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(<span class="string">&quot;https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&quot;</span>);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    <span class="comment">// 下面对获取到的输入流进行读取</span></span><br><span class="line">                    reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    parseJSONWithJSONObject(response.toString());</span><br><span class="line">                   <span class="comment">// showResponse(response.toString());</span></span><br><span class="line">                    <span class="comment">//Ui线程</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            reader.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-json的解析"><a href="#2-json的解析" class="headerlink" title="2.json的解析"></a>2.json的解析</h4><p>这里我们直接通过android自带的JSONArray和JSONObject来进行json的解析，并将解析到的结果和<code>http://cn.bing.com</code>拼接起来，得到我们想要的图片的链接，并将其存储在字符串url1中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseJSONWithJSONObject</span><span class="params">(String jsonData)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">// JSONArray jsonArray = new JSONArray(jsonData);</span></span><br><span class="line"></span><br><span class="line">            JSONArray jsonArray = <span class="keyword">new</span> JSONObject(jsonData).getJSONArray(<span class="string">&quot;images&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line">                JSONObject jsonObject = jsonArray.getJSONObject(i);</span><br><span class="line">                String url = jsonObject.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"></span><br><span class="line">                Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;url is &quot;</span> + url);</span><br><span class="line">String url1=<span class="string">&quot;http://cn.bing.com&quot;</span>+url;</span><br><span class="line">                showResponse(url1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-图片的加载"><a href="#3-图片的加载" class="headerlink" title="3.图片的加载"></a>3.图片的加载</h4><p>利用开源框架Glide进行图片的加载。<br>注意，图片的加载要写在UI线程中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showResponse</span><span class="params">(<span class="keyword">final</span> String response)</span> </span>&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 在这里进行UI操作，将结果显示到界面上</span></span><br><span class="line">                Glide.with(MainActivity.<span class="keyword">this</span>).load(response).into(img);</span><br><span class="line">              <span class="comment">//  text.setText(response);</span></span><br><span class="line">                Log.i(<span class="string">&quot;123&quot;</span>,response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="三、演示效果"><a href="#三、演示效果" class="headerlink" title="三、演示效果"></a>三、演示效果</h3><p>![-w40](<a href="https://img-blog.csdnimg.cn/20210125151637243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54aWhhbmh1aQ==,color_FFFFFF,t_70">https://img-blog.csdnimg.cn/20210125151637243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54aWhhbmh1aQ==,color_FFFFFF,t_70</a> =400x800)</p><h3 id="四、源代码"><a href="#四、源代码" class="headerlink" title="四、源代码"></a>四、源代码</h3><p><strong>1.xml</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;ImageView</span><br><span class="line">    android:id=<span class="string">&quot;@+id/img&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>这部分代码比较简单，就是线性布局中加了一个imageview.</p><p><strong>2.activity</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    TextView text;</span><br><span class="line">    ImageView img;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="comment">// text=findViewById(R.id.text);</span></span><br><span class="line">       img=findViewById(R.id.img);</span><br><span class="line">        sendRequestWithHttpURLConnection();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendRequestWithHttpURLConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 开启线程来发起网络请求</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(<span class="string">&quot;https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&quot;</span>);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    <span class="comment">// 下面对获取到的输入流进行读取</span></span><br><span class="line">                    reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    parseJSONWithJSONObject(response.toString());</span><br><span class="line">                   <span class="comment">// showResponse(response.toString());</span></span><br><span class="line">                    <span class="comment">//Ui线程</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            reader.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showResponse</span><span class="params">(<span class="keyword">final</span> String response)</span> </span>&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 在这里进行UI操作，将结果显示到界面上</span></span><br><span class="line">                Glide.with(MainActivity.<span class="keyword">this</span>).load(response).into(img);</span><br><span class="line">              <span class="comment">//  text.setText(response);</span></span><br><span class="line">                Log.i(<span class="string">&quot;123&quot;</span>,response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseJSONWithJSONObject</span><span class="params">(String jsonData)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">// JSONArray jsonArray = new JSONArray(jsonData);</span></span><br><span class="line"></span><br><span class="line">            JSONArray jsonArray = <span class="keyword">new</span> JSONObject(jsonData).getJSONArray(<span class="string">&quot;images&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line">                JSONObject jsonObject = jsonArray.getJSONObject(i);</span><br><span class="line">                String url = jsonObject.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"></span><br><span class="line">                Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;url is &quot;</span> + url);</span><br><span class="line">String url1=<span class="string">&quot;http://cn.bing.com&quot;</span>+url;</span><br><span class="line">                showResponse(url1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Android实现每天更新一张图片&quot;&gt;&lt;a href=&quot;#Android实现每天更新一张图片&quot; class=&quot;headerlink&quot; title=&quot;Android实现每天更新一张图片&quot;&gt;&lt;/a&gt;Android实现每天更新一张图片&lt;/h2&gt;&lt;p&gt;第一次写博客，记录一</summary>
      
    
    
    
    <category term="Android" scheme="http://yeyuwenxi.github.io/categories/Android/"/>
    
    
  </entry>
  
</feed>
